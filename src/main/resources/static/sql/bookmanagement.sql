/*
 Navicat Premium Data Transfer

 Source Server         : MySQL57
 Source Server Type    : MySQL
 Source Server Version : 50726
 Source Host           : localhost:3306
 Source Schema         : bookmanagement

 Target Server Type    : MySQL
 Target Server Version : 50726
 File Encoding         : 65001

 Date: 30/01/2021 13:01:38
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for sys_book
-- ----------------------------
DROP TABLE IF EXISTS `sys_book`;
CREATE TABLE `sys_book`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `booknum` int(11) NULL DEFAULT NULL COMMENT '书籍序列号',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '书名',
  `fk_publisherId` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '出版社',
  `publish_time` datetime(0) NULL DEFAULT NULL COMMENT '出版时间',
  `src` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '封面路径',
  `alt` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '封面标题',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '富文本内容',
  `text` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '纯文本内容',
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '作者',
  `fk_categoryId` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '分类',
  `number` int(11) NULL DEFAULT NULL COMMENT '库存',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '上架时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否删除，0-未删除，1-已删除',
  `putaway` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否上架，0-未上架，1-已上架',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 22 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '书籍表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_book
-- ----------------------------
INSERT INTO `sys_book` VALUES (7, 2222, '计算机组成原理', '24', '2021-01-05 16:00:00', '/upload/a4e2c73a-2c41-4625-ac6c-dffa0a740521.jpeg', '人与自然.jpeg', '<div><h2>一、计算机的组成及学习大纲</h2>\r\n<h4>1. 计算机的组成</h4>\r\n<h5>计算机的三大件 ：CPU、内存、主板</h5>\r\n<p>（1）CPU，中央处理器，计算机最核心的配件，负责所有的计算。</p>\r\n<p>（2）内存，你编写的程序、运行的游戏、打开的浏览器都要加载到内存中才能运行，程序读取的数据、计算的结果也都在内存中，内存的大小决定了你能加载的东西的多少。</p>\r\n<p>（3）主板，存放在内存中数据需要被CPU读取，CPU计算完成后，还要把数据写入到内存中，然而CPU不能直接插在内存上，这就需要主板出马了，主板上很多个插槽，CPU和内存都是插在主板上，主板的芯片组和总线解决了CPU和内存之间的通讯问题，芯片组控制数据传输的流转，决定数据从哪里流向哪里，总线是实际数据传输的告诉公里，总线速度决定了数据的传输速度。</p>\r\n<p>（4）输入/输出设备，其实有了以上三大件之后，计算机就可以跑起来了。我们日常使用的话还需要键盘、鼠标、显示器等输入/输出设备，而很多云服务器通过SSH远程登录就可以访问，就不需要配显示器、鼠标、键盘这些东西，节省成本且方便维护。</p>\r\n<p>（5）硬盘，有了硬盘数据才能长久的保存下来，大部分还会给自己的机器配上机箱和风扇，解决灰尘和散热问题，不过这些也不是必须的，用纸板和电风扇替代也一样可以用。</p>\r\n<p>（6）显卡，显卡里有GPU图形处理器，主要负责图形渲染，使用图形界面操作系统的计算机，显卡是必不可少的。现在的主板都带了内置的显卡，如果想玩游戏、做图形渲染，一般需要一张单独的显卡，插在主板上。</p>\r\n<h4>2. 冯·诺依曼体系</h4>\r\n<p><strong>现代计算机的硬件基础架构都是依赖于冯诺依曼提出的冯诺依曼体系结构，现代计算机的核心架构可以抽象为五个基础组件：运算器、控制器、存储器、输入设备和输出设备。</strong></p>\r\n<p><strong>具体到现代计算机，运算器和控制器组成了现代计算机的CPU，存储器对应着内存和硬盘，主板控制着CPU、内存、硬盘、输出/输出设备之间的通讯。</strong></p>\r\n<p>冯诺依曼体系结构也叫做存储程序计算机，即<strong>可编程</strong>、<strong>可存储</strong>的计算机。</p>\r\n<p>任何一台计算机的任何一个部件都可以归到运算器、控制器、存储器、输入设备和输出设备中，而所有的现代计算机也都是基于这个基础架构来设计开发的。</p>\r\n<p>冯诺依曼体系结构确立了我们现代计算机的硬件基础架构，学习计算机组成原理，就是学习和拆解冯诺依曼体系。</p>\r\n<p>学习组成原理，就是学习以下内容：</p>\r\n<ul>\r\n<li><p>CPU（运算器+控制器）怎么工作，为什么这么设计；</p></li>\r\n<li><p>内存和硬盘的工作原理；</p></li>\r\n<li><p>CPU是怎么和内存、硬盘、输入设备、输出设备通讯的；</p></li>\r\n<li><p>从电路这样的硬件到最终开发给软件的接口是怎么运作的，为什么要这么设计，以及在软件开发层面怎么尽可能的用好它；</p></li>\r\n</ul>\r\n<h4>3. 计算机组成原理学习大纲</h4>\r\n<div class=\"image-package\">\r\n<div class=\"image-container\">\r\n<div class=\"image-container-fill\"></div>\r\n<div class=\"image-view\" data-width=\"3832\" data-height=\"2540\"><img data-original-src=\"//upload-images.jianshu.io/upload_images/1674389-a013a973f5d7249c.jpg\" data-original-width=\"3832\" data-original-height=\"2540\" data-original-format=\"image/jpeg\" data-original-filesize=\"975134\" data-image-index=\"0\" class=\"\" src=\"//upload-images.jianshu.io/upload_images/1674389-a013a973f5d7249c.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp\"></div>\r\n</div>\r\n<div class=\"image-caption\">计算机组成原理知识地图</div>\r\n</div>\r\n<h5>学习大纲：</h5>\r\n<ul>\r\n<li><p>计算机的基本组成：冯诺依曼体系结构的五大基本组件：<strong>运算器、控制器、存储器、输入设备和输出设备</strong>；计算机的两个核心指标：<strong>性能和功耗</strong>。</p></li>\r\n<li><p>计算机的指令和计算：高级语言是怎么跑起来的，怎么通过编译器和汇编器变成机器指令的；操作系统怎么链接、装载、执行程序的；指令的执行是怎么控制的（<strong>控制器</strong>）。</p></li>\r\n<li><p><strong>运算器</strong>，数据在计算机中的表示（二进制和编码）；计算机是怎么实现加法、乘法等基本运算功能的。</p></li>\r\n<li><p>CPU的设计：我们为什么需要CPU时钟；寄存器和内存怎么组成的；整个计算机的数据通路是如何构造的；CPU的流水线设计；数据和控制冒险；分支预测；CPU的异常和中断机制；指令的并行执行；CPU怎么通过SIMD来支持并行计算。</p></li>\r\n<li><p><strong>存储器</strong>的原理：CPU高速缓存、内存、SSD硬盘和机械硬盘的工作原理，及它们之间的性能差异；CPU和存储器之间怎么通讯的；什么是IO_WAIT；如何通过DMA提升程序性能；如何保证存储器里的数据不丢失；如何通过RAID、Erasure Code、ECC、HDFS，这些不同的技术来确保数据的完整性和访问性能。</p></li>\r\n</ul>\r\n<p><strong>总结：计算机组成原理是整个计算机科学的纲要，这门课程的很多知识点深挖下去都会变成一个核心课程。</strong></p>\r\n<p>例如：</p>\r\n<ul>\r\n<li><p>计算是怎么实现的，对应着<strong>数字电路</strong>课程。</p></li>\r\n<li><p>CPU和存储器系统的优化，对应着<strong>计算机体系结构</strong>课程。</p></li>\r\n<li><p>程序通过编译器和汇编器变成机器指令的编译过程，对应着<strong>编译原理</strong>课程。</p></li>\r\n<li><p>操作系统是怎么链接、装载、执行程序的，对应着<strong>操作系统</strong>课程。</p></li>\r\n</ul>\r\n<h2>二、下面我们根据课程大纲，大致过一遍组成原理</h2>\r\n<h4>1.  性能</h4>\r\n<p>衡量计算机的性能，主要有两个指标：<strong>响应时间和吞吐率</strong>。</p>\r\n<ul>\r\n<li><p><strong>响应时间</strong>，就是执行一个程序花费的时间，花的时间越短，性能就越好。</p></li>\r\n<li><p><strong>吞吐率</strong>，就是一定时间内，到底能处理多少数据和指令，处理的越多，性能就越好。</p></li>\r\n</ul>\r\n<p>我们一般把性能定义为响应时间的倒数，也就是：性能 = 1 / 响应时间</p>\r\n<p>响应时间也就是CPU执行我们程序的时间，我们对<strong>时间</strong>这个指标进行拆解，把程序的CPU执行时间变成CPU时钟周期数和时钟周期时间的乘积。</p>\r\n<p>程序的CPU执行时间 = CPU时钟周期数 x 时钟周期时间</p>\r\n<p>程序的CPU执行时间 = 指令数 x 每条指令的平均时钟周期数 x 时钟周期时间</p>\r\n<p>所以优化性能，就要从这三者入手了：</p>\r\n<ul>\r\n<li><p><strong>指令数</strong>，代表执行我们的程序到底需要多少条指令，一般都是编译器去做。</p></li>\r\n<li><p><strong>每条指令的平均时钟周期数</strong>，就是执行一条指令需要的CPU周期数。</p></li>\r\n<li><p><strong>时钟周期时间</strong>，也就是计算机主频，摩尔定律就在提高我们计算机的主频，例如：主频为2.8GHz，简单理解就是1秒钟可以执行2.8G条指令。</p></li>\r\n</ul>\r\n<h4>2.  功耗</h4>\r\n<p>从上面可以看出，想要提升性能，可以通过减少响应时间的方法来提升，减少响应时间又有三条路可以走：减少指令数、减少周期数、提升主频。</p>\r\n<p>过去相当长的时间里，工程师们都在目光集中在提升计算机主频，在CPU中增加晶体管密度，提升晶体管“打开”和“关闭”的速度，这两者都会带来<strong>耗电和散热</strong>的问题。</p>\r\n<p><strong>CPU的功耗 = 1/2 x 负载电容 x 电压的平方 x 开关频率 x 晶体管数量</strong></p>\r\n<p>为了平衡性能和功耗，工程师们想尽办法把晶体管的制程从28nm缩小到7nm，让CPU中可以更多晶体管，同时呢又降低电压，这让我们的CPU性能也一直提升。</p>\r\n<p>但是，这种做法终有极限，所以工程师们又开始通过提升吞吐率来提升性能，而不是响应时间，所以我们现在的CPU慢慢的由单核发展成了2核、4核、8核的CPU，让更多的核心同时工作，通过<strong>并行来提升性能</strong>。</p>\r\n<p><strong>总结</strong></p>\r\n<p>无论是通过<strong>提升主频</strong>，还是<strong>增加更多的CPU核心数量</strong>并行处理，都有其瓶颈所在，仅仅通过“堆硬件“的方式，今天已经不能很好的满足我们对于性能的期望了，这就需要我们从其他方面入手了：</p>\r\n<ul>\r\n<li><p><strong>加速大概率事件</strong></p></li>\r\n<li><p><strong>通过流水线提升性能</strong>，把CPU指令执行进行合理的拆分、细化。</p></li>\r\n<li><p><strong>通过预测提升性能</strong>，提前预测下一步做什么，提前进行响应的操作。</p></li>\r\n</ul>\r\n<h4>3.  计算机指令</h4>\r\n<p>从软件层面看，CPU就是一个执行各种计算机指令的机器，计算机指令就是指计算机能听懂的语言，我们把它叫做机器语言。</p>\r\n<p>不同的CPU由于架构不同，能听懂的语言也不同，也拥有不同的计算机指令集。</p>\r\n<p><strong>也就是说，CPU不同-&gt;指令集不同-&gt;机器语言不同-&gt;汇编语言不同</strong></p>\r\n<p>那么，我们平常用的高级语言是怎么变成机器语言的呢？</p>\r\n<p>高级语言，需要编译成汇编语言，然后通过汇编器翻译成机器代码，才能让CPU去执行。</p>\r\n<div class=\"image-package\">\r\n<div class=\"image-container\">\r\n<div class=\"image-container-fill\"></div>\r\n<div class=\"image-view\" data-width=\"1142\" data-height=\"639\"><img data-original-src=\"//upload-images.jianshu.io/upload_images/1674389-439db279645d96b1.png\" data-original-width=\"1142\" data-original-height=\"639\" data-original-format=\"image/png\" data-original-filesize=\"62405\" data-image-index=\"1\" class=\"\" src=\"//upload-images.jianshu.io/upload_images/1674389-439db279645d96b1.png?imageMogr2/auto-orient/strip|imageView2/2/w/1142/format/webp\"></div>\r\n</div>\r\n<div class=\"image-caption\">C语言-&gt;汇编语言-&gt;机器语言</div></div></div>', '一、计算机的组成及学习大纲\r\n1. 计算机的组成\r\n计算机的三大件 ：CPU、内存、主板\r\n（1）CPU，中央处理器，计算机最核心的配件，负责所有的计算。\r\n（2）内存，你编写的程序、运行的游戏、打开的浏览器都要加载到内存中才能运行，程序读取的数据、计算的结果也都在内存中，内存的大小决定了你能加载的东西的多少。\r\n（3）主板，存放在内存中数据需要被CPU读取，CPU计算完成后，还要把数据写入到内存中，然而CPU不能直接插在内存上，这就需要主板出马了，主板上很多个插槽，CPU和内存都是插在主板上，主板的芯片组和总线解决了CPU和内存之间的通讯问题，芯片组控制数据传输的流转，决定数据从哪里流向哪里，总线是实际数据传输的告诉公里，总线速度决定了数据的传输速度。\r\n（4）输入/输出设备，其实有了以上三大件之后，计算机就可以跑起来了。我们日常使用的话还需要键盘、鼠标、显示器等输入/输出设备，而很多云服务器通过SSH远程登录就可以访问，就不需要配显示器、鼠标、键盘这些东西，节省成本且方便维护。\r\n（5）硬盘，有了硬盘数据才能长久的保存下来，大部分还会给自己的机器配上机箱和风扇，解决灰尘和散热问题，不过这些也不是必须的，用纸板和电风扇替代也一样可以用。\r\n（6）显卡，显卡里有GPU图形处理器，主要负责图形渲染，使用图形界面操作系统的计算机，显卡是必不可少的。现在的主板都带了内置的显卡，如果想玩游戏、做图形渲染，一般需要一张单独的显卡，插在主板上。\r\n2. 冯·诺依曼体系\r\n现代计算机的硬件基础架构都是依赖于冯诺依曼提出的冯诺依曼体系结构，现代计算机的核心架构可以抽象为五个基础组件：运算器、控制器、存储器、输入设备和输出设备。\r\n具体到现代计算机，运算器和控制器组成了现代计算机的CPU，存储器对应着内存和硬盘，主板控制着CPU、内存、硬盘、输出/输出设备之间的通讯。\r\n冯诺依曼体系结构也叫做存储程序计算机，即可编程、可存储的计算机。\r\n任何一台计算机的任何一个部件都可以归到运算器、控制器、存储器、输入设备和输出设备中，而所有的现代计算机也都是基于这个基础架构来设计开发的。\r\n冯诺依曼体系结构确立了我们现代计算机的硬件基础架构，学习计算机组成原理，就是学习和拆解冯诺依曼体系。\r\n学习组成原理，就是学习以下内容：\r\n\r\nCPU（运算器+控制器）怎么工作，为什么这么设计；\r\n内存和硬盘的工作原理；\r\nCPU是怎么和内存、硬盘、输入设备、输出设备通讯的；\r\n从电路这样的硬件到最终开发给软件的接口是怎么运作的，为什么要这么设计，以及在软件开发层面怎么尽可能的用好它；\r\n\r\n3. 计算机组成原理学习大纲\r\n\r\n\r\n\r\n\r\n\r\n计算机组成原理知识地图\r\n\r\n学习大纲：\r\n\r\n计算机的基本组成：冯诺依曼体系结构的五大基本组件：运算器、控制器、存储器、输入设备和输出设备；计算机的两个核心指标：性能和功耗。\r\n计算机的指令和计算：高级语言是怎么跑起来的，怎么通过编译器和汇编器变成机器指令的；操作系统怎么链接、装载、执行程序的；指令的执行是怎么控制的（控制器）。\r\n运算器，数据在计算机中的表示（二进制和编码）；计算机是怎么实现加法、乘法等基本运算功能的。\r\nCPU的设计：我们为什么需要CPU时钟；寄存器和内存怎么组成的；整个计算机的数据通路是如何构造的；CPU的流水线设计；数据和控制冒险；分支预测；CPU的异常和中断机制；指令的并行执行；CPU怎么通过SIMD来支持并行计算。\r\n存储器的原理：CPU高速缓存、内存、SSD硬盘和机械硬盘的工作原理，及它们之间的性能差异；CPU和存储器之间怎么通讯的；什么是IO_WAIT；如何通过DMA提升程序性能；如何保证存储器里的数据不丢失；如何通过RAID、Erasure Code、ECC、HDFS，这些不同的技术来确保数据的完整性和访问性能。\r\n\r\n总结：计算机组成原理是整个计算机科学的纲要，这门课程的很多知识点深挖下去都会变成一个核心课程。\r\n例如：\r\n\r\n计算是怎么实现的，对应着数字电路课程。\r\nCPU和存储器系统的优化，对应着计算机体系结构课程。\r\n程序通过编译器和汇编器变成机器指令的编译过程，对应着编译原理课程。\r\n操作系统是怎么链接、装载、执行程序的，对应着操作系统课程。\r\n\r\n二、下面我们根据课程大纲，大致过一遍组成原理\r\n1.  性能\r\n衡量计算机的性能，主要有两个指标：响应时间和吞吐率。\r\n\r\n响应时间，就是执行一个程序花费的时间，花的时间越短，性能就越好。\r\n吞吐率，就是一定时间内，到底能处理多少数据和指令，处理的越多，性能就越好。\r\n\r\n我们一般把性能定义为响应时间的倒数，也就是：性能 = 1 / 响应时间\r\n响应时间也就是CPU执行我们程序的时间，我们对时间这个指标进行拆解，把程序的CPU执行时间变成CPU时钟周期数和时钟周期时间的乘积。\r\n程序的CPU执行时间 = CPU时钟周期数 x 时钟周期时间\r\n程序的CPU执行时间 = 指令数 x 每条指令的平均时钟周期数 x 时钟周期时间\r\n所以优化性能，就要从这三者入手了：\r\n\r\n指令数，代表执行我们的程序到底需要多少条指令，一般都是编译器去做。\r\n每条指令的平均时钟周期数，就是执行一条指令需要的CPU周期数。\r\n时钟周期时间，也就是计算机主频，摩尔定律就在提高我们计算机的主频，例如：主频为2.8GHz，简单理解就是1秒钟可以执行2.8G条指令。\r\n\r\n2.  功耗\r\n从上面可以看出，想要提升性能，可以通过减少响应时间的方法来提升，减少响应时间又有三条路可以走：减少指令数、减少周期数、提升主频。\r\n过去相当长的时间里，工程师们都在目光集中在提升计算机主频，在CPU中增加晶体管密度，提升晶体管“打开”和“关闭”的速度，这两者都会带来耗电和散热的问题。\r\nCPU的功耗 = 1/2 x 负载电容 x 电压的平方 x 开关频率 x 晶体管数量\r\n为了平衡性能和功耗，工程师们想尽办法把晶体管的制程从28nm缩小到7nm，让CPU中可以更多晶体管，同时呢又降低电压，这让我们的CPU性能也一直提升。\r\n但是，这种做法终有极限，所以工程师们又开始通过提升吞吐率来提升性能，而不是响应时间，所以我们现在的CPU慢慢的由单核发展成了2核、4核、8核的CPU，让更多的核心同时工作，通过并行来提升性能。\r\n总结\r\n无论是通过提升主频，还是增加更多的CPU核心数量并行处理，都有其瓶颈所在，仅仅通过“堆硬件“的方式，今天已经不能很好的满足我们对于性能的期望了，这就需要我们从其他方面入手了：\r\n\r\n加速大概率事件\r\n通过流水线提升性能，把CPU指令执行进行合理的拆分、细化。\r\n通过预测提升性能，提前预测下一步做什么，提前进行响应的操作。\r\n\r\n3.  计算机指令\r\n从软件层面看，CPU就是一个执行各种计算机指令的机器，计算机指令就是指计算机能听懂的语言，我们把它叫做机器语言。\r\n不同的CPU由于架构不同，能听懂的语言也不同，也拥有不同的计算机指令集。\r\n也就是说，CPU不同->指令集不同->机器语言不同->汇编语言不同\r\n那么，我们平常用的高级语言是怎么变成机器语言的呢？\r\n高级语言，需要编译成汇编语言，然后通过汇编器翻译成机器代码，才能让CPU去执行。\r\n\r\n\r\n\r\n\r\n\r\nC语言->汇编语言->机器语言', '白智英', '10', 997, '2021-01-03 04:43:21', '2021-01-24 12:56:44', 0, 1);
INSERT INTO `sys_book` VALUES (8, 3456, 'C语言', '19', '2021-01-03 05:06:53', '/upload/736b87c5-a7cb-4b9d-b6b8-77014568b70b.jpeg', 'C语言.jpeg', '<div class=\"lemma-summary\" label-module=\"lemmaSummary\"><p><span>c语言入门基础知识点有：1、c语言的命名；2、变量及赋值；3、基本数据类型；4、格式化输出语句；5、强制类型转换；6、常量；7、自动类型转换。C语言是一种通用的、面向过程式的计算机程序设计语言。</span><br><br><br><br><span>c语言入门基础知识点有：1、c语言的命名；2、变量及赋值；3、基本数据类型；4、格式化输出语句；5、强制类型转换；6、常量；7、自动类型转换。</span><br><br><span>【推荐课程：C语言教程】</span><br><br><span>（1）c语言的命名</span><br><br><span>编程时给变量或者函数起的名字就是标识符。C语言的标识符是不可以随便起名字的，必须遵守一定的规则。C 语言规定，标识符可以是字母(A～Z，a～z)、数字(0～9)、下划线_组成的字符串，并且第一个字符必须是字母或下划线。在使用标识符时还有注意以下几点：</span><br><br><span>(1)标识符的长度最好不要超过8位，因为在某些版本的C中规定标识符前8位有效，当两个标识符前8位相同时，则被认为是同一个标识符。</span><br><br><span>(2)标识符是严格区分大小写的。例如Imooc和imooc 是两个不同的标识符。</span><br><br><span>(3)标识符最好选择有意义的英文单词组成做到\"见名知意\"，不要使用中文。</span><br><br><span>(4)标识符不能是C语言的关键字。想了解更多C语言关键字的知识，请查阅WIKI。</span><br><br><span>例如：</span><br><br><br><br><span>（2）变量及赋值</span><br><br><span>变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分变量名和变量值是两个不同的概念。就好比：住在房间里的客人与房间号是两个不同的概念。</span><br><br><span>变量定义的一般形式为：数据类型 变量名;</span><br><br><span>多个类型相同的变量：数据类型 变量名, 变量名, 变量名...;</span><br><br><span>变量名和标识符的命名规范完全相同。%d在后面会有详细讲解</span><br><br><span>注意:在定义中不允许连续赋值，如int a=b=c=5;是不合法的。</span><br><br><span>变量的赋值分为两种方式：</span><br><br><span>1.先声明再赋值</span><br><br><span>2.声明的同时赋值</span><br><br><br><br><span>（3）基本数据类型</span><br><br><span>C语言中的数据也是有类型的，C语言中，数据类型可分为：基本数据类型，构造数据类型，指针类型，空类型四大类。如图所示：</span><br><br><br><br><span>例：</span><br><br><br><br><span>（4）格式化输出语句</span><br><br><span>格式化输出语句，也可以说是占位输出，是将各种类型的数据按照格式化后的类型及指定的位置从计算机上显示。这样做的好处，是有利于计算机能够准确的将我们所要类型数据给我们。</span><br><br><span>其格式为：</span><br><br><span>1</span><br><br><span>printf(\"输出格式符\"，输出项);</span><br><br><span>C语言中的常用格式化符：</span><br><br><br><br><span>（5）不可改变的常量</span><br><br><span>在程序执行过程中，值不发生改变的量称为常量。C语言的常量可以分为直接常量和符号常量。</span><br><br><span>直接常量也称为字面量，是可以直接拿来使用，无需说明的量，比如：</span><br><br><span>整型常量：13、0、-13；</span><br><br><span>实型常量：13.33、-24.4；</span><br><br><span>字符常量：‘a’、‘M’</span><br><br><span>字符串常量：”I love php!”</span><br><br><span>在C语言中，可以用一个标识符来表示一个常量，称之为符号常量。符号常量在使用之前必须先定义，其一般形式为：</span><br><br><span>1</span><br><br><span>#define 标识符 常量值</span><br><br><span>符号常量的标示符一般习惯使用大写字母，变量的标示符一般习惯使用小写字母，加以区分。下面是一个使用符号常量的小例子：</span><br><br><br><br><span>（6）自动类型转换</span><br><br><span>数据类型存在自动转换的情况，自动转换发生在不同数据类型运算时，在编译的时候自动完成。自动转换遵循的规则就好比小盒子可以放进大盒子里面一样，下图表示了类型自动转换的规则。</span><br><br><br><br><span>（7）强制类型转换</span><br><br><span>强制类型转换是通过定义类型转换运算来实现的。其一般形式为：</span><br><br><span>1</span><br><br><span>(数据类型) (表达式)</span><br><br><span>其作用是把表达式的运算结果强制转换成类型说明符所表示的类型，例如：</span><br><br><br><br><span>注意：double类型的数据的格式符 %f或%lf</span><br><br><span>输入结果：</span><br><br><br><br><span>在使用强制转换时应注意以下问题：</span><br><br><span>1、数据类型和表达式都必须加括号，如把(int)(x/2+y)写成(int)x/2+y则成了把x转换成int型之后再除2再与y相加了。</span><br><br><span>2、转换后不会改变原数据的类型及变量值，只在本次运算中临时性转换。</span><br><br><span>3、强制转换后的运算结果不遵循四舍五入原则。</span><br><br><span>（8）运算符</span><br><br><span>那么C语言中又有哪些运算符呢？</span><br><br><span>如下所示：</span><br><br><span>算术运算符</span><br><br><span>赋值运算符</span><br><br><span>关系运算符</span><br><br><span>逻辑运算符</span><br><br><span>三目运算符</span><br><br><span>算术运算法</span><br><br><span>C语言基本算术运算符如下表：</span><br><br><br><br><span>赋值运算符</span><br><br><span>C语言中赋值运算符分为简单赋值运算符和复合赋值运算符，之前我们已经接触过简单赋值运算符“=”号了，下面讲一下复合赋值运算符：</span><br><br><span>复合赋值运算符就是在简单赋值符“=”之前加上其它运算符构成，例如+=、-=、*=、/=、%=。</span><br><br><span>看一个小例子：</span><br><br><span>1</span><br><br><span>2</span><br><br><span>int a=3;</span><br><br><span>a += 5;</span><br><br><span>分析：定义整型变量a并赋值为3，a += 5;这个算式就等价于a = a+5; 将变量a和5相加之后再赋值给a</span><br><br><span>注意：复合运算符中运算符和等号之间是不存在空格的。</span><br><br><span>关系运算符</span><br><br><span>下面是C语言中的关系运算符：</span><br><br><br><br><span>关系表达式的值是“真”和“假”，在C程序用整数1和0表示。</span><br><br><span>逻辑运算符</span><br><br><span>下面我们看一下C语言中的逻辑运算符：</span><br><br><br><br><span>三木运算符</span><br><br><span>C语言中的三目运算符：“?:”，其格式为：</span><br><br><span>1</span><br><br><span>表达式1 ? 表达式2 : 表达式3;</span><br><br><span>运算符优先级比较</span><br><br></p></div>', 'c语言入门基础知识点有：1、c语言的命名；2、变量及赋值；3、基本数据类型；4、格式化输出语句；5、强制类型转换；6、常量；7、自动类型转换。C语言是一种通用的、面向过程式的计算机程序设计语言。c语言入门基础知识点有：1、c语言的命名；2、变量及赋值；3、基本数据类型；4、格式化输出语句；5、强制类型转换；6、常量；7、自动类型转换。【推荐课程：C语言教程】（1）c语言的命名编程时给变量或者函数起的名字就是标识符。C语言的标识符是不可以随便起名字的，必须遵守一定的规则。C 语言规定，标识符可以是字母(A～Z，a～z)、数字(0～9)、下划线_组成的字符串，并且第一个字符必须是字母或下划线。在使用标识符时还有注意以下几点：(1)标识符的长度最好不要超过8位，因为在某些版本的C中规定标识符前8位有效，当两个标识符前8位相同时，则被认为是同一个标识符。(2)标识符是严格区分大小写的。例如Imooc和imooc 是两个不同的标识符。(3)标识符最好选择有意义的英文单词组成做到\"见名知意\"，不要使用中文。(4)标识符不能是C语言的关键字。想了解更多C语言关键字的知识，请查阅WIKI。例如：（2）变量及赋值变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分变量名和变量值是两个不同的概念。就好比：住在房间里的客人与房间号是两个不同的概念。变量定义的一般形式为：数据类型 变量名;多个类型相同的变量：数据类型 变量名, 变量名, 变量名...;变量名和标识符的命名规范完全相同。%d在后面会有详细讲解注意:在定义中不允许连续赋值，如int a=b=c=5;是不合法的。变量的赋值分为两种方式：1.先声明再赋值2.声明的同时赋值（3）基本数据类型C语言中的数据也是有类型的，C语言中，数据类型可分为：基本数据类型，构造数据类型，指针类型，空类型四大类。如图所示：例：（4）格式化输出语句格式化输出语句，也可以说是占位输出，是将各种类型的数据按照格式化后的类型及指定的位置从计算机上显示。这样做的好处，是有利于计算机能够准确的将我们所要类型数据给我们。其格式为：1printf(\"输出格式符\"，输出项);C语言中的常用格式化符：（5）不可改变的常量在程序执行过程中，值不发生改变的量称为常量。C语言的常量可以分为直接常量和符号常量。直接常量也称为字面量，是可以直接拿来使用，无需说明的量，比如：整型常量：13、0、-13；实型常量：13.33、-24.4；字符常量：‘a’、‘M’字符串常量：”I love php!”在C语言中，可以用一个标识符来表示一个常量，称之为符号常量。符号常量在使用之前必须先定义，其一般形式为：1#define 标识符 常量值符号常量的标示符一般习惯使用大写字母，变量的标示符一般习惯使用小写字母，加以区分。下面是一个使用符号常量的小例子：（6）自动类型转换数据类型存在自动转换的情况，自动转换发生在不同数据类型运算时，在编译的时候自动完成。自动转换遵循的规则就好比小盒子可以放进大盒子里面一样，下图表示了类型自动转换的规则。（7）强制类型转换强制类型转换是通过定义类型转换运算来实现的。其一般形式为：1(数据类型) (表达式)其作用是把表达式的运算结果强制转换成类型说明符所表示的类型，例如：注意：double类型的数据的格式符 %f或%lf输入结果：在使用强制转换时应注意以下问题：1、数据类型和表达式都必须加括号，如把(int)(x/2+y)写成(int)x/2+y则成了把x转换成int型之后再除2再与y相加了。2、转换后不会改变原数据的类型及变量值，只在本次运算中临时性转换。3、强制转换后的运算结果不遵循四舍五入原则。（8）运算符那么C语言中又有哪些运算符呢？如下所示：算术运算符赋值运算符关系运算符逻辑运算符三目运算符算术运算法C语言基本算术运算符如下表：赋值运算符C语言中赋值运算符分为简单赋值运算符和复合赋值运算符，之前我们已经接触过简单赋值运算符“=”号了，下面讲一下复合赋值运算符：复合赋值运算符就是在简单赋值符“=”之前加上其它运算符构成，例如+=、-=、*=、/=、%=。看一个小例子：12int a=3;a += 5;分析：定义整型变量a并赋值为3，a += 5;这个算式就等价于a = a+5; 将变量a和5相加之后再赋值给a注意：复合运算符中运算符和等号之间是不存在空格的。关系运算符下面是C语言中的关系运算符：关系表达式的值是“真”和“假”，在C程序用整数1和0表示。逻辑运算符下面我们看一下C语言中的逻辑运算符：三木运算符C语言中的三目运算符：“?:”，其格式为：1表达式1 ? 表达式2 : 表达式3;运算符优先级比较', '谭浩强', '10', 999, '2021-01-03 05:12:54', '2021-01-24 12:56:39', 0, 1);
INSERT INTO `sys_book` VALUES (9, 8889343, '大学英语', '5', '2021-01-03 05:14:09', '/upload/04b8774e-0bf9-4b10-81bb-8adfc94e12fa.jpg', '大学英语.jpg', '<div class=\"single-excerpt\"><p>大学英语不同于初高中的英语，它的难度有了大幅度的提高，所以我们一定要更加重视，否则就会跟不上脚步。大学英语主要…</p></div><div class=\"entry-content\"><p class=\"MsoNormal\">大学英语不同于初高中的英语，它的难度有了大幅度的提高，所以我们一定要更加重视，否则就会跟不上脚步。大学英语主要是以自学为主，老师只是起到引导的作用，大部分时间就是靠我们的自觉独立性。那么如何学好大学英语呢？</p><p><img class=\"alignnone size-full wp-image-6852\" src=\"http://www.meilibj.com/wp-content/uploads/2019/12/72-3.jpg\" width=\"500\" height=\"300\" alt=\"英语培训\" title=\"英语培训\" srcset=\"http://www.meilibj.com/wp-content/uploads/2019/12/72-3.jpg 500w, http://www.meilibj.com/wp-content/uploads/2019/12/72-3-300x180.jpg 300w\" sizes=\"(max-width: 500px) 100vw, 500px\"></p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoNormal\"></p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoNormal\">大学英语课文不同于初高中的英语课文，文章都偏长，词汇也比较多一些，想要只是凭借上课时间去掌握所有的知识点确实是一件难事。那么在上课之前我们一定要怎么做呢？</p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoListParagraph\"><strong>一、做好预习工作</strong></p><p class=\"MsoNormal\">养成预习的习惯，上课之前通读全文，领会其中的大概意思，把不会的单词先用记号笔做好标记，然后去查单词表或者是英文字典理解它的意思，再有不理解的地方就做上特殊标记，等到课上着重听老师讲课。课前的预习工作是学好大学英语最关键的一步，带着问题集中精力去听课，才会更有效果。</p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoListParagraph\"><strong>二、</strong><strong>上课认真听讲</strong></p><p class=\"MsoNormal\">课上认真听讲，不要因为之前做好了预习工作就掉以轻心，课上老师所讲的内容也是非常重要的。一定要认真做好笔记，这样自己预习的知识点就又巩固了一遍，而不会的地方也得到了很好地理解和掌握。</p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoListParagraph\"><strong>三、</strong><strong>积极配合老师的要求</strong></p><p class=\"MsoNormal\">课上还要积极的配合老师完成各种口头，笔头的作业，这样可以提高自己思维的应变能力。课下一定要做到巩固复习。不要认为这一课学完就没事，在预习下一节课之前我们一定要做好上一节课的巩固复习工作。再反复的通读课文，把握住课文的语感，达到一定的熟练程度，整理一下课堂笔记，牢记和掌握知识点。熟练背诵课文中相对重要的句子。</p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoNormal\"></p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoListParagraph\"><strong>四、</strong><strong>课外泛读、泛听、多交流</strong></p><p class=\"MsoNormal\">除此之外课上接触到的大学英语是远远不够的，业余时间也要拓展一下自己对大学英语的学习，比如多看一些英文的书刊杂志之类的，领会其中的大意，另外，大学英语更应该做到多听，可以听听英文歌曲，英文小广播之类的东西。这样对我们大学英语的听力也很有帮助。我们的英语不像汉语天天都在说，所以我们要给自己创造机会去说，在宿舍里我们可以用英语与舍友聊天，也可以在校园的演出中编排一段大学英语话剧等等，这样也可以提高我们的口语能力。</p><p class=\"MsoNormal\">&nbsp;</p><p class=\"MsoNormal\">万事开头难，只要肯登攀。只要我们付出一定的努力，坚持不懈就一定会有收获。我们要把学习大学英语当做一种快乐的享受，而不是一种负担！这样学习起来你才会觉得更加轻松!&nbsp;</p></div>', '大学英语不同于初高中的英语，它的难度有了大幅度的提高，所以我们一定要更加重视，否则就会跟不上脚步。大学英语主要…大学英语不同于初高中的英语，它的难度有了大幅度的提高，所以我们一定要更加重视，否则就会跟不上脚步。大学英语主要是以自学为主，老师只是起到引导的作用，大部分时间就是靠我们的自觉独立性。那么如何学好大学英语呢？  大学英语课文不同于初高中的英语课文，文章都偏长，词汇也比较多一些，想要只是凭借上课时间去掌握所有的知识点确实是一件难事。那么在上课之前我们一定要怎么做呢？ 一、做好预习工作养成预习的习惯，上课之前通读全文，领会其中的大概意思，把不会的单词先用记号笔做好标记，然后去查单词表或者是英文字典理解它的意思，再有不理解的地方就做上特殊标记，等到课上着重听老师讲课。课前的预习工作是学好大学英语最关键的一步，带着问题集中精力去听课，才会更有效果。 二、上课认真听讲课上认真听讲，不要因为之前做好了预习工作就掉以轻心，课上老师所讲的内容也是非常重要的。一定要认真做好笔记，这样自己预习的知识点就又巩固了一遍，而不会的地方也得到了很好地理解和掌握。 三、积极配合老师的要求课上还要积极的配合老师完成各种口头，笔头的作业，这样可以提高自己思维的应变能力。课下一定要做到巩固复习。不要认为这一课学完就没事，在预习下一节课之前我们一定要做好上一节课的巩固复习工作。再反复的通读课文，把握住课文的语感，达到一定的熟练程度，整理一下课堂笔记，牢记和掌握知识点。熟练背诵课文中相对重要的句子。  四、课外泛读、泛听、多交流除此之外课上接触到的大学英语是远远不够的，业余时间也要拓展一下自己对大学英语的学习，比如多看一些英文的书刊杂志之类的，领会其中的大意，另外，大学英语更应该做到多听，可以听听英文歌曲，英文小广播之类的东西。这样对我们大学英语的听力也很有帮助。我们的英语不像汉语天天都在说，所以我们要给自己创造机会去说，在宿舍里我们可以用英语与舍友聊天，也可以在校园的演出中编排一段大学英语话剧等等，这样也可以提高我们的口语能力。 万事开头难，只要肯登攀。只要我们付出一定的努力，坚持不懈就一定会有收获。我们要把学习大学英语当做一种快乐的享受，而不是一种负担！这样学习起来你才会觉得更加轻松! ', '小明', '5', 90004, '2021-01-03 05:16:45', '2021-01-21 08:01:59', 0, 1);
INSERT INTO `sys_book` VALUES (10, 3645, '毛泽东思想', '13', '2020-12-07 16:00:00', '/upload/18b01847-92c8-40bd-ae6d-5fdc08bc3534.jpeg', '毛泽东思想.jpeg', '<p><br></p><h3><a href=\"https://www.shicimingju.com/chaxun/list/48905.html\" target=\"_blank\">《沁园春·雪》</a></h3><div class=\"shici_content\">北国风光，千里冰封，万里雪飘。<br>望长城内外，惟余莽莽；<br><div>大河上下，顿失滔滔。<br>山舞银蛇，原驰蜡象，欲与天公试比高。<br>须晴日，看红妆素裹，分外妖娆。<br>江山如此多娇，<br>引无数英雄竞折腰。<br>惜秦皇汉武，略输文采；<br>唐宗宋祖，稍逊风骚。<br>一代天骄，成吉思汗，只识弯弓射大雕。<br>俱往矣，数风流人物，还看今朝。</div></div>', '《沁园春·雪》北国风光，千里冰封，万里雪飘。望长城内外，惟余莽莽；大河上下，顿失滔滔。山舞银蛇，原驰蜡象，欲与天公试比高。须晴日，看红妆素裹，分外妖娆。江山如此多娇，引无数英雄竞折腰。惜秦皇汉武，略输文采；唐宗宋祖，稍逊风骚。一代天骄，成吉思汗，只识弯弓射大雕。俱往矣，数风流人物，还看今朝。', '毛泽东', '1', 998, '2021-01-03 12:42:02', '2021-01-24 12:56:18', 0, 1);
INSERT INTO `sys_book` VALUES (11, 78978, '思想品德', '6', '2019-01-15 16:00:00', '/upload/098f5d05-c208-4530-9c13-207f4440cda5.jpg', '思想品德.jpg', '<div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">基本要素</h3></div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E6%80%9D%E6%83%B3%E5%93%81%E5%BE%B7/572757/0/42577322300c85e74623e8af?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"思想品德\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/0b7b02087bf40ad11d9f5790572c11dfa9ecce4e?x-bce-process=image/resize,m_lfit,w_150,limit_1\" alt=\"思想品德\"></a><span class=\"description\">思想品德</span></div>思想品德的基本要素包含受教育者的道德认识、道德情感、道德意志和道德行为，简称知、情、意、行。</div><div class=\"anchor-list \"><a name=\"1_2\" class=\"lemma-anchor para-title\"></a><a name=\"sub19482568_1_2\" class=\"lemma-anchor \"></a><a name=\"道德认识\" class=\"lemma-anchor \"></a><a name=\"1-2\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">道德认识</h3></div><div class=\"para\" label-module=\"para\">道德认识是人们对<span>是非善恶</span>的认识和评价以及在此基础上形成的道德观念，包括品德知识和品德判断两个方面。</div><div class=\"anchor-list \"><a name=\"1_3\" class=\"lemma-anchor para-title\"></a><a name=\"sub19482568_1_3\" class=\"lemma-anchor \"></a><a name=\"道德情感\" class=\"lemma-anchor \"></a><a name=\"1-3\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">道德情感</h3></div><div class=\"para\" label-module=\"para\">道德情感是人们对<span>客观事物</span>做是非、善恶判断时引起的内心体验，表现为人们对客观事物的爱憎、好恶的态度。品德情感是学生产生品德行为的内在动力，是实现执行转化的催化剂。</div><div class=\"anchor-list \"><a name=\"1_4\" class=\"lemma-anchor para-title\"></a><a name=\"sub19482568_1_4\" class=\"lemma-anchor \"></a><a name=\"道德意志\" class=\"lemma-anchor \"></a><a name=\"1-4\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">道德意志</h3></div><div class=\"para\" label-module=\"para\">道德意志是人们<span>为实现一定的品德行为目的</span>所做出的自觉而顽强的努力。品德意志是调节学生品德行为的精神力量。</div><div class=\"anchor-list \"><a name=\"1_5\" class=\"lemma-anchor para-title\"></a><a name=\"sub19482568_1_5\" class=\"lemma-anchor \"></a><a name=\"道德行为\" class=\"lemma-anchor \"></a><a name=\"1-5\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">道德行为</h3></div><div class=\"para\" label-module=\"para\">道德行为是通过实践或练习形成的，是实现品德认识、情感以及由品德需要<span>产生品德动机的行为定向</span>及<span>外部表现</span>。品德行为是衡量品德水平的重要标志，是衡量少年儿童认识与修养水平高低的重要标志。</div>', '基本要素思想品德思想品德的基本要素包含受教育者的道德认识、道德情感、道德意志和道德行为，简称知、情、意、行。道德认识道德认识是人们对是非善恶的认识和评价以及在此基础上形成的道德观念，包括品德知识和品德判断两个方面。道德情感道德情感是人们对客观事物做是非、善恶判断时引起的内心体验，表现为人们对客观事物的爱憎、好恶的态度。品德情感是学生产生品德行为的内在动力，是实现执行转化的催化剂。道德意志道德意志是人们为实现一定的品德行为目的所做出的自觉而顽强的努力。品德意志是调节学生品德行为的精神力量。道德行为道德行为是通过实践或练习形成的，是实现品德认识、情感以及由品德需要产生品德动机的行为定向及外部表现。品德行为是衡量品德水平的重要标志，是衡量少年儿童认识与修养水平高低的重要标志。', '七年级', '1', 3532, '2021-01-03 12:44:58', '2021-01-24 12:56:34', 0, 1);
INSERT INTO `sys_book` VALUES (12, 56732, '体育课本', '11', '2018-01-17 20:03:03', '/upload/fdbea6f4-b670-4380-92d6-6edbb8cee319.jpeg', '体育.jpeg', '<div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">来源</h3></div><div class=\"para\" label-module=\"para\">体育一词虽然被译作Physical education、Sport、Sports，但是体育一词却不是译自于英文，而是来自于日文，是直接借用日文中的“体育”一词。不过，日本在Physical education一词的翻译上并不是一步到位译作“体育”的，而是经历了从译作“身体（之）教育”、“体教”、“身教”到译作“体育”的日文化过程，这一过程是在19世纪70年代完成的。</div><div class=\"para\" label-module=\"para\">体育虽然有悠久的历史，但是“体育”一词却出现得较晚。因为在“体育”一词出现前，世界各国对体育这一活动过程的称谓都不相同。</div><div class=\"para\" label-module=\"para\">在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%A4%E5%B8%8C%E8%85%8A\">古希腊</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B8%B8%E6%88%8F\">游戏</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%A7%92%E5%8A%9B\">角力</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E6%93%8D\">体操</a>等曾被列为教育内容。在17～18世纪中，西方的教育中也加进了<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%89%93%E7%8C%8E\">打猎</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B8%B8%E6%B3%B3\">游泳</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%88%AC%E5%B1%B1\">爬山</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%B5%9B%E8%B7%91\">赛跑</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%B7%B3%E8%B7%83\">跳跃</a>等项活动， 只是尚无统一的名称。18世纪末，德国的J．C．F．古茨穆茨曾把这些活动分类、综合 ，统称为“<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E6%93%8D\">体操</a>”。进入19世纪，一方面是德国形成了新的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E6%93%8D\">体操</a>体系，并广泛传播于欧美各国；另一方面是相继出现了多种新的运动项目。在学校也逐渐开展了超出原来体操范围的更多的运动项目，建立起“体育是以身体活动为手段的教育”这一新概念。于是，在相当的一段时间里，“体操”和“体育”两个词并存，相互混用，比较混乱，直到20世纪初才逐渐在世界范围内统一称为“体育”。</div><div class=\"para\" label-module=\"para\">中国体育历史悠久，但“体育”却是一个外来词。它最早见于20世纪初的清末，当时，我国有大批留学生东渡去日本求学，仅1901年至1906年间，就有13000多人。其中，学体育的就有很多。回国后，他们将“体育”一词引进到中国。</div><div class=\"para\" label-module=\"para\">在中国，“体育”这个词最早见于1904年，在湖北幼稚园开办章程中提到对幼儿进行全面教育时说：“保全身体之健旺，体育发达基地。”在1905年《湖南蒙养院教课说略》上也提到：“体育<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8A%9F%E5%A4%AB\">功夫</a>，体操发达其表，乐歌发达其里。”</div><div class=\"para\" label-module=\"para\">在中国，最早创办的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E8%82%B2%E5%9B%A2%E4%BD%93\">体育团体</a>是1906年上海的“沪西士商体育会”。1907年我国著名女革命家<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%A7%8B%E7%91%BE\">秋瑾</a>在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%8D%E5%85%B4\">绍兴</a>也创办了体育会。同年，清皇朝学部的奏折中也开始有“体育”这个词。<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%BE%9B%E4%BA%A5%E9%9D%A9%E5%91%BD\">辛亥革命</a>以后，“体育”一词就逐渐运用开来。</div><div class=\"para\" label-module=\"para\">1762年，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8D%A2%E6%A2%AD\">卢梭</a>在法国出版了《爱弥尔》一书。他使用“体育”一词来描述对<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%88%B1%E5%BC%A5%E5%B0%94\">爱弥尔</a>进行身体的养护、培养和训练等身体<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%95%99%E8%82%B2%E8%BF%87%E7%A8%8B\">教育过程</a>。由于这本书激烈地批判了当时的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%95%99%E4%BC%9A%E6%95%99%E8%82%B2\">教会教育</a>，而在世界引起很大反响，因此“体育”一词同时也在世界各国流传开来。从这里我们可以清楚地看到，“体育”一<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%AF%8D%E7%9A%84\">词的</a>最初产生是起自于“教育”一词，它最早的含意是指<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%95%99%E8%82%B2%E4%BD%93%E7%B3%BB\">教育体系</a>中的一个专门领域。到19世纪，世界上教育<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%91%E8%BE%BE%E5%9B%BD%E5%AE%B6\">发达国家</a>都普遍使用了“体育”一词。而我国由于闭关自守，直到19世纪中叶，德国和瑞典的体操传入中国，随后清政府在兴办的“<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B4%8B%E5%AD%A6%E5%A0%82\">洋学堂</a>” 中设置了“体操课”。1902年左右，一些在日本留学的学生从日本传来了“体育”这一术语。随着<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%A5%BF%E6%96%B9%E6%96%87%E5%8C%96\">西方文化</a>不断涌入我国，学校体育的内容也从单一的体操向多元化发展，课堂上出现了<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%AF%AE%E7%90%83\">篮球</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%94%B0%E5%BE%84\">田径</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%B6%B3%E7%90%83\">足球</a>等。许多有识之士提出不能把学校体育课称体操课了，必须理清概念层次。1923年，在《中小学课程纲要草案》中，正式把“体操课”改为“体育课”。<span class=\"sup--normal\" data-sup=\"2\" data-ctrmap=\":2,\">&nbsp;[2]</span><a class=\"sup-anchor\" name=\"ref_[2]_8323\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">从此“体育”一词成了标记学校中身体教育的专门术语。</div><div class=\"para\" label-module=\"para\">“体育”一词在含义上也有一个演化过程。它刚传入我国时，是指身体的教育，作为教育的一部分出现的，是一种与维持和发展身体的各种活动有关联的一种教育过程，与国际上理解的“体育”（Physical education）是一致的。随着社会的进步和体育事业的不断发展，其目的和内容都大大超出了原来“体育”的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%8C%83%E7%95%B4\">范畴</a>，体育的概念也出现了“广义”与“<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%8B%AD%E4%B9%89\">狭义</a>”解释。当用于广义时，一般是指<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E8%82%B2%E8%BF%90%E5%8A%A8\">体育运动</a>，其中包括了体育教育、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%AB%9E%E6%8A%80%E8%BF%90%E5%8A%A8\">竞技运动</a>和身体锻炼三个方面；用于狭义时，一般是指体育教育。不少<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AD%A6%E8%80%85\">学者</a>对“体育”的概 念提出了一些解释，但比较趋于一致的解释为：“体育是以身体活动为媒介，以谋求个体身心健康、全面发展为直接目的，并以培养完善的社会公民为终极目标的一种社会文化现象或教育过程”。体育的这一定义既说明了它的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%AC%E8%B4%A8%E5%B1%9E%E6%80%A7\">本质属性</a>，又指出了它的归属范畴，同时也把自身从与其邻近或相似的社会现象中区别出来。但是，体育的概念并非是一成不变的，随着社会的发展和进步，对体育的认识也将有所发展。</div><div class=\"anchor-list \"><a name=\"1_2\" class=\"lemma-anchor para-title\"></a><a name=\"sub8323_1_2\" class=\"lemma-anchor \"></a><a name=\"历史\" class=\"lemma-anchor \"></a><a name=\"1-2\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">历史</h3></div><div class=\"para\" label-module=\"para\">根据<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%96%87%E7%89%A9/33145\" data-lemmaid=\"33145\">文物</a>和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BB%BA%E7%AD%91/405099\" data-lemmaid=\"405099\">建筑</a>等历史证据表明，中国早在公元前2000年左右便已开始进行体育运动。体操在中国古代时期是十分流行的项目。为法老修筑的纪念碑可以看出，包括游泳、垂钓等体育运动已经在上千年前的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%A4\">古</a><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9F%83%E5%8F%8A\">埃及</a>发展起来并建立了体育规则。在埃及开展的其他体育项目还包括投掷标枪、跳高和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%91%94%E8%A7%92\">摔角</a>。古代波斯的体育运动包括传统<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BC%8A%E6%9C%97\">伊朗</a>武术项目<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%8B%B1%E9%9B%84%E4%BD%93%E8%82%B2\">英雄体育</a>，它同<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%89%93%E4%BB%97\">打仗</a>技巧有着密切联系。同样起源于古代波斯的运动项目还包括马球和马上长矛比武。</div><div class=\"para\" label-module=\"para\">有大量的体育运动项目自<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%A4%E5%B8%8C%E8%85%8A\">古希腊</a>时期并以产生，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%A4%E4%BB%A3\">古代</a>希腊时期的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%86%9B%E4%BA%8B%E6%96%87%E5%8C%96\">军事文化</a>和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E8%82%B2%E8%BF%90%E5%8A%A8\">体育运动</a>的发展相互影响。体育对于古希腊人影响深刻的一个突出表现就是他们创立了奥林匹克运动会，每隔四年在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BC%AF%E7%BD%97%E5%A5%94%E5%B0%BC%E6%92%92\">伯罗奔尼撒</a>一个叫做奥林匹亚的小村庄举行。</div><div class=\"para\" label-module=\"para\">体育运动自古代奥运会时期发展至今，其组织性和相关规则不断得到加强。工业化使得在发达及发展中国家的居民有了更多的闲暇时间，这让他们可以参加并观看观赏性体育运动，体育运动曾参与人数增加，传播更为普遍。随着大众<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AA%92%E4%BD%93\">媒体</a>和全球联系的加强，这一趋势更加明显。体育运动专业化成为主流，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E8%82%B2\">体育</a>运动更加流行，体育迷们通过广播、电视、互联网追逐职业运动员，同时他们也自己参与业余的体育运动，从中得到锻炼和娱乐。</div><div class=\"anchor-list \"><a name=\"1_3\" class=\"lemma-anchor para-title\"></a><a name=\"sub8323_1_3\" class=\"lemma-anchor \"></a><a name=\"现状\" class=\"lemma-anchor \"></a><a name=\"1-3\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">现状</h3></div><div class=\"para\" label-module=\"para\">伴随我国产业结构调整和升级，体育产业对经济发展的推动作用愈发突出。2010年国务院办公厅发布《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9B%BD%E5%8A%A1%E9%99%A2%E5%8A%9E%E5%85%AC%E5%8E%85%E5%85%B3%E4%BA%8E%E5%8A%A0%E5%BF%AB%E5%8F%91%E5%B1%95%E4%BD%93%E8%82%B2%E4%BA%A7%E4%B8%9A%E7%9A%84%E6%8C%87%E5%AF%BC%E6%84%8F%E8%A7%81\">国务院办公厅关于加快发展体育产业的指导意见</a>》(国办发〔2010〕22号)，该意见从国家政策层面肯定了体育产业在社会经济中的重要作用，明确了体育产业发展的基本方针、主要目标和重点任务。《指导意见》的出台标志着体育产业开始向国家主导、各部门和全社会联合推动发展的方式转变。《指导意见》出台后，地方性体育产业政策陆续出台，体育产业发展引导资金的设立以及体育企业各项金融税收优惠政策的实施，将有效推动我国地方体育产业的发展。</div><div class=\"para\" label-module=\"para\"><a class=\"lemma-album layout-right nslog:10000206\" title=\"体育风采\" href=\"https://baike.baidu.com/pic/%E4%BD%93%E8%82%B2/223780/1501729/91ef76c6a7efce1b0b5e0a78af51f3deb48f650f?fr=lemma&amp;ct=cover\" target=\"_blank\" nslog-type=\"10000206\"><div class=\"album-wrap\"><img class=\"picture\" alt=\"体育风采\" src=\"https://bkimg.cdn.bcebos.com/pic/91ef76c6a7efce1b0b5e0a78af51f3deb48f650f?x-bce-process=image/resize,m_lfit,w_220,limit_1\"></div><div class=\"description\">体育风采<span class=\"number\">(12张)</span></div><div class=\"albumBg\"></div></a>2011年国家体育总局印发《体育产业“十二五”规划》，这是我国体育产业的首个五年规划，该规划细化了体育产业在“十二五”期间的发展目标、主要任务及主要措施。该规划首次明确提出了体育产业发展的量化指标，“十二五”体育产业增加值以平均每年15%以上的速度增长，到“十二五”末期，体育产业增加值超过4000亿元人民币，占国内生产总值的比重超过0.7%，从业人员超过400万，体育产业成为国民经济的重要增长点之一。在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6/17205\" data-lemmaid=\"17205\">国家</a>政策、产业<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%94%BF%E7%AD%96/32783\" data-lemmaid=\"32783\">政策</a>、地方政策的大力支持下，体育产业将呈现出巨大的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%88%90%E9%95%BF/15564\" data-lemmaid=\"15564\">成长</a>性。</div><div class=\"para\" label-module=\"para\">体育产业是现代<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E4%B8%9A\">服务业</a>的重要组成部分，是新的经济增长点和促进社会就业的重要载体。体育产业已成为国际公认的21 世纪最具活力，是具有高渗透性、交叉性、拉动性的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9C%9D%E9%98%B3\">朝阳</a>产业、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%81%A5%E5%BA%B7\">健康</a>产业、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%BF%E8%89%B2\">绿色</a>产业。体育产业是经济发达国家的支柱产业，在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8C%97%E7%BE%8E\">北美</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%A5%BF%E6%AC%A7\">西欧</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%97%A5%E6%9C%AC\">日本</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E8%82%B2\">体育</a>产业的年产值均排在国家十大产业之列。虽然体育产业化的历史还不到百年，但其发展速度远超过其它产业，每年以20%的速度增长，产值占GDP比重还不到1%，与欧美发达国家有近10倍的差距。在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD\">中国</a>宏观经济向好的大环境下，随着居民人均收入的提高，休闲时间的增加，体育消费升级以及《加快发展体育产业指导意见》的出台，相信<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD\">中国</a>体育产业将迎来<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%BB%84%E9%87%91\">黄金</a>发展阶段。</div><div class=\"para\" label-module=\"para\">数据显示，经过20 多年的市场化尝试，中国体育产业规模化进程实现了较快的发展。2011年，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BD%93%E8%82%B2%E4%BA%A7%E4%B8%9A\">体育产业</a>呈现出繁荣的发展景象，第26届世界大学生夏季运动会赞助总收入达12.27亿元人民币；意大利超级杯吸引了近8万人涌入“鸟巢”，单是门票收益就超过亿元。</div>', '来源体育一词虽然被译作Physical education、Sport、Sports，但是体育一词却不是译自于英文，而是来自于日文，是直接借用日文中的“体育”一词。不过，日本在Physical education一词的翻译上并不是一步到位译作“体育”的，而是经历了从译作“身体（之）教育”、“体教”、“身教”到译作“体育”的日文化过程，这一过程是在19世纪70年代完成的。体育虽然有悠久的历史，但是“体育”一词却出现得较晚。因为在“体育”一词出现前，世界各国对体育这一活动过程的称谓都不相同。在古希腊，游戏、角力、体操等曾被列为教育内容。在17～18世纪中，西方的教育中也加进了打猎、游泳、爬山、赛跑、跳跃等项活动， 只是尚无统一的名称。18世纪末，德国的J．C．F．古茨穆茨曾把这些活动分类、综合 ，统称为“体操”。进入19世纪，一方面是德国形成了新的体操体系，并广泛传播于欧美各国；另一方面是相继出现了多种新的运动项目。在学校也逐渐开展了超出原来体操范围的更多的运动项目，建立起“体育是以身体活动为手段的教育”这一新概念。于是，在相当的一段时间里，“体操”和“体育”两个词并存，相互混用，比较混乱，直到20世纪初才逐渐在世界范围内统一称为“体育”。中国体育历史悠久，但“体育”却是一个外来词。它最早见于20世纪初的清末，当时，我国有大批留学生东渡去日本求学，仅1901年至1906年间，就有13000多人。其中，学体育的就有很多。回国后，他们将“体育”一词引进到中国。在中国，“体育”这个词最早见于1904年，在湖北幼稚园开办章程中提到对幼儿进行全面教育时说：“保全身体之健旺，体育发达基地。”在1905年《湖南蒙养院教课说略》上也提到：“体育功夫，体操发达其表，乐歌发达其里。”在中国，最早创办的体育团体是1906年上海的“沪西士商体育会”。1907年我国著名女革命家秋瑾在绍兴也创办了体育会。同年，清皇朝学部的奏折中也开始有“体育”这个词。辛亥革命以后，“体育”一词就逐渐运用开来。1762年，卢梭在法国出版了《爱弥尔》一书。他使用“体育”一词来描述对爱弥尔进行身体的养护、培养和训练等身体教育过程。由于这本书激烈地批判了当时的教会教育，而在世界引起很大反响，因此“体育”一词同时也在世界各国流传开来。从这里我们可以清楚地看到，“体育”一词的最初产生是起自于“教育”一词，它最早的含意是指教育体系中的一个专门领域。到19世纪，世界上教育发达国家都普遍使用了“体育”一词。而我国由于闭关自守，直到19世纪中叶，德国和瑞典的体操传入中国，随后清政府在兴办的“洋学堂” 中设置了“体操课”。1902年左右，一些在日本留学的学生从日本传来了“体育”这一术语。随着西方文化不断涌入我国，学校体育的内容也从单一的体操向多元化发展，课堂上出现了篮球、田径、足球等。许多有识之士提出不能把学校体育课称体操课了，必须理清概念层次。1923年，在《中小学课程纲要草案》中，正式把“体操课”改为“体育课”。 [2] 从此“体育”一词成了标记学校中身体教育的专门术语。“体育”一词在含义上也有一个演化过程。它刚传入我国时，是指身体的教育，作为教育的一部分出现的，是一种与维持和发展身体的各种活动有关联的一种教育过程，与国际上理解的“体育”（Physical education）是一致的。随着社会的进步和体育事业的不断发展，其目的和内容都大大超出了原来“体育”的范畴，体育的概念也出现了“广义”与“狭义”解释。当用于广义时，一般是指体育运动，其中包括了体育教育、竞技运动和身体锻炼三个方面；用于狭义时，一般是指体育教育。不少学者对“体育”的概 念提出了一些解释，但比较趋于一致的解释为：“体育是以身体活动为媒介，以谋求个体身心健康、全面发展为直接目的，并以培养完善的社会公民为终极目标的一种社会文化现象或教育过程”。体育的这一定义既说明了它的本质属性，又指出了它的归属范畴，同时也把自身从与其邻近或相似的社会现象中区别出来。但是，体育的概念并非是一成不变的，随着社会的发展和进步，对体育的认识也将有所发展。历史根据文物和建筑等历史证据表明，中国早在公元前2000年左右便已开始进行体育运动。体操在中国古代时期是十分流行的项目。为法老修筑的纪念碑可以看出，包括游泳、垂钓等体育运动已经在上千年前的古埃及发展起来并建立了体育规则。在埃及开展的其他体育项目还包括投掷标枪、跳高和摔角。古代波斯的体育运动包括传统伊朗武术项目英雄体育，它同打仗技巧有着密切联系。同样起源于古代波斯的运动项目还包括马球和马上长矛比武。有大量的体育运动项目自古希腊时期并以产生，古代希腊时期的军事文化和体育运动的发展相互影响。体育对于古希腊人影响深刻的一个突出表现就是他们创立了奥林匹克运动会，每隔四年在伯罗奔尼撒一个叫做奥林匹亚的小村庄举行。体育运动自古代奥运会时期发展至今，其组织性和相关规则不断得到加强。工业化使得在发达及发展中国家的居民有了更多的闲暇时间，这让他们可以参加并观看观赏性体育运动，体育运动曾参与人数增加，传播更为普遍。随着大众媒体和全球联系的加强，这一趋势更加明显。体育运动专业化成为主流，体育运动更加流行，体育迷们通过广播、电视、互联网追逐职业运动员，同时他们也自己参与业余的体育运动，从中得到锻炼和娱乐。现状伴随我国产业结构调整和升级，体育产业对经济发展的推动作用愈发突出。2010年国务院办公厅发布《国务院办公厅关于加快发展体育产业的指导意见》(国办发〔2010〕22号)，该意见从国家政策层面肯定了体育产业在社会经济中的重要作用，明确了体育产业发展的基本方针、主要目标和重点任务。《指导意见》的出台标志着体育产业开始向国家主导、各部门和全社会联合推动发展的方式转变。《指导意见》出台后，地方性体育产业政策陆续出台，体育产业发展引导资金的设立以及体育企业各项金融税收优惠政策的实施，将有效推动我国地方体育产业的发展。体育风采(12张)2011年国家体育总局印发《体育产业“十二五”规划》，这是我国体育产业的首个五年规划，该规划细化了体育产业在“十二五”期间的发展目标、主要任务及主要措施。该规划首次明确提出了体育产业发展的量化指标，“十二五”体育产业增加值以平均每年15%以上的速度增长，到“十二五”末期，体育产业增加值超过4000亿元人民币，占国内生产总值的比重超过0.7%，从业人员超过400万，体育产业成为国民经济的重要增长点之一。在国家政策、产业政策、地方政策的大力支持下，体育产业将呈现出巨大的成长性。体育产业是现代服务业的重要组成部分，是新的经济增长点和促进社会就业的重要载体。体育产业已成为国际公认的21 世纪最具活力，是具有高渗透性、交叉性、拉动性的朝阳产业、健康产业、绿色产业。体育产业是经济发达国家的支柱产业，在北美、西欧、日本，体育产业的年产值均排在国家十大产业之列。虽然体育产业化的历史还不到百年，但其发展速度远超过其它产业，每年以20%的速度增长，产值占GDP比重还不到1%，与欧美发达国家有近10倍的差距。在中国宏观经济向好的大环境下，随着居民人均收入的提高，休闲时间的增加，体育消费升级以及《加快发展体育产业指导意见》的出台，相信中国体育产业将迎来黄金发展阶段。数据显示，经过20 多年的市场化尝试，中国体育产业规模化进程实现了较快的发展。2011年，体育产业呈现出繁荣的发展景象，第26届世界大学生夏季运动会赞助总收入达12.27亿元人民币；意大利超级杯吸引了近8万人涌入“鸟巢”，单是门票收益就超过亿元。', '体育老师', '7', 253, '2021-01-03 12:49:15', '2021-01-21 08:01:45', 0, 1);
INSERT INTO `sys_book` VALUES (13, 898434, '物理', '4', '2018-11-26 14:03:04', '/upload/0b601ea8-5552-4fcf-8cbe-f4c7881d078c.jpeg', '物理.jpeg', '<div class=\"para\" label-module=\"para\"><span>物理学</span>是一门自然科学，注重于研究物质、能量、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%A9%BA%E9%97%B4\">空间</a>、时间，尤其是它们各自的性质与彼此之间的相互关系。物理学是关于大自然规律的知识；更广义地说，物理学探索并分析大自然所发生的现象，以了解其规则。</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E7%89%A9%E7%90%86%E5%AD%A6/313183/0/8d5494eef01f3a29838008729925bc315d607cc6?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"物理学研究的空间尺度范围与时间尺度范围\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/8d5494eef01f3a29838008729925bc315d607cc6?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"物理学研究的空间尺度范围与时间尺度范围\"></a><span class=\"description\">物理学研究的空间尺度范围与时间尺度范围</span></div></div><div class=\"para\" label-module=\"para\">物理学（physics）的研究对象：<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%89%A9%E7%90%86%E7%8E%B0%E8%B1%A1\">物理现象</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%89%A9%E8%B4%A8%E7%BB%93%E6%9E%84\">物质结构</a>、物质相互作用、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%89%A9%E8%B4%A8%E8%BF%90%E5%8A%A8\">物质运动</a>规律。</div><div class=\"para\" label-module=\"para\">物理学研究的尺度——物质世界的层次和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%95%B0%E9%87%8F%E7%BA%A7\">数量级</a></div><div class=\"para\" label-module=\"para\">空间尺度：</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%AD%90\">原子</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%AD%90%E6%A0%B8\">原子核</a>、基本<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B2%92%E5%AD%90\">粒子</a>、DNA长度、最小的细胞、星系团、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%93%B6%E6%B2%B3%E7%B3%BB\">银河系</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%81%92%E6%98%9F\">恒星</a>的距离、太阳系、超星系团，哈勃半径等。人蛇吞尾图形象地表示了物质空间尺寸的层次。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BE%AE%E8%A7%82%E7%B2%92%E5%AD%90\">微观粒子</a>（microscopic）：质子<section class=\"formula-container formula-container__inline\"><div class=\"layoutinline formula\"><img class=\"J-formula-img\" align=\"absmiddle\" alt=\"\" title=\"\" src=\"https://bkimg.cdn.bcebos.com/formula/089bde0a444a482e7efdb928ca190146.svg\" data-png=\"https://bkimg.cdn.bcebos.com/formula/089bde0a444a482e7efdb928ca190146.png\" data-width=\"44\" data-height=\"20\"></div></section>&nbsp;m</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BB%8B%E8%A7%82\">介观</a>物质（mesoscopic）</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%8F%E8%A7%82\">宏观</a>物质（macroscopic）</div><div class=\"para\" label-module=\"para\">宇观物质（cosmological）<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B1%BB%E6%98%9F%E4%BD%93\">类星体</a><section class=\"formula-container formula-container__inline\"><div class=\"layoutinline formula\"><img class=\"J-formula-img\" align=\"absmiddle\" alt=\"\" title=\"\" src=\"https://bkimg.cdn.bcebos.com/formula/d868f749126ba31b85c913b59c1ca2ce.svg\" data-png=\"https://bkimg.cdn.bcebos.com/formula/d868f749126ba31b85c913b59c1ca2ce.png\" data-width=\"34\" data-height=\"20\"></div></section>&nbsp;m</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E7%89%A9%E7%90%86%E5%AD%A6/313183/0/b58f8c5494eef01f86b1e094ecfe9925bc317d3e?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"随着物理学的发展，人类对“自然界基本构成”的理解也随之变革。\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/b58f8c5494eef01f86b1e094ecfe9925bc317d3e?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"随着物理学的发展，人类对“自然界基本构成”的理解也随之变革。\"></a><span class=\"description\">随着物理学的发展，人类对“自然界基本构成”的理解也随之变革。</span></div>时间尺度：</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9F%BA%E6%9C%AC%E7%B2%92%E5%AD%90/79521\" data-lemmaid=\"79521\">基本粒子</a>寿命 10<span class=\"normal\">-25</span>s</div><div class=\"para\" label-module=\"para\">宇宙寿命 10<span class=\"normal\">18</span>s</div><div class=\"para\" label-module=\"para\">按空间尺度划分：<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%87%8F%E5%AD%90%E5%8A%9B%E5%AD%A6/131692\" data-lemmaid=\"131692\">量子力学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%8F%E5%85%B8%E7%89%A9%E7%90%86%E5%AD%A6\">经典物理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%87%E5%AE%99%E7%89%A9%E7%90%86%E5%AD%A6\">宇宙物理学</a>。</div><div class=\"para\" label-module=\"para\">按速率大小划分： 相对论物理学、非相对论物理学。</div><div class=\"para\" label-module=\"para\">按客体大小划分：<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BE%AE%E8%A7%82\">微观</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BB%8B%E8%A7%82\">介观</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%8F%E8%A7%82\">宏观</a>、宇观。</div><div class=\"para\" label-module=\"para\">按<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%BF%90%E5%8A%A8%E9%80%9F%E5%BA%A6\">运动速度</a>划分：低速、中速、高速。</div><div class=\"para\" label-module=\"para\">按研究方法划分：<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%9E%E9%AA%8C%E7%89%A9%E7%90%86%E5%AD%A6\">实验物理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%90%86%E8%AE%BA%E7%89%A9%E7%90%86%E5%AD%A6\">理论物理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E7%89%A9%E7%90%86%E5%AD%A6\">计算物理学</a>。</div>', '物理学是一门自然科学，注重于研究物质、能量、空间、时间，尤其是它们各自的性质与彼此之间的相互关系。物理学是关于大自然规律的知识；更广义地说，物理学探索并分析大自然所发生的现象，以了解其规则。物理学研究的空间尺度范围与时间尺度范围物理学（physics）的研究对象：物理现象、物质结构、物质相互作用、物质运动规律。物理学研究的尺度——物质世界的层次和数量级空间尺度：原子、原子核、基本粒子、DNA长度、最小的细胞、星系团、银河系、恒星的距离、太阳系、超星系团，哈勃半径等。人蛇吞尾图形象地表示了物质空间尺寸的层次。微观粒子（microscopic）：质子 m介观物质（mesoscopic）宏观物质（macroscopic）宇观物质（cosmological）类星体 m随着物理学的发展，人类对“自然界基本构成”的理解也随之变革。时间尺度：基本粒子寿命 10-25s宇宙寿命 1018s按空间尺度划分：量子力学、经典物理学、宇宙物理学。按速率大小划分： 相对论物理学、非相对论物理学。按客体大小划分：微观、介观、宏观、宇观。按运动速度划分：低速、中速、高速。按研究方法划分：实验物理学、理论物理学、计算物理学。', '法拉利', '7', 891, '2021-01-03 12:51:27', '2021-01-18 07:30:03', 0, 1);
INSERT INTO `sys_book` VALUES (14, 83975, '计算机组成原理', '8', '2021-01-03 12:52:27', '/upload/43efce22-2f9c-4f09-89ad-2dcfde105c00.jpeg', '计算机组成原理.jpeg', '<div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">成书过程</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"1\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"para\" label-module=\"para\">该书是中国计算机学会和清华大学出版社共同规划的面向全国高等院校计算机专业本科生的“21世纪大学本科计算机专业系列教材”之一。</div><div class=\"para\" label-module=\"para\">该教材由蒋本珊编著，在该书编写过程中得到了“21世纪大学本科计算机专业系列教材”编委会的指导和建议。重庆大学计算机系袁开榜教授审阅了该书的全部内容，提出了修改意见。</div><div class=\"para\" label-module=\"para\">该教材于2004年3月1日由清华大学出版社出版。<span class=\"sup--normal\" data-sup=\"2\" data-ctrmap=\":2,\">&nbsp;[2]</span><a class=\"sup-anchor\" name=\"ref_[2]_5144034\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"2\" class=\"lemma-anchor para-title\"></a><a name=\"sub5144034_2\" class=\"lemma-anchor \"></a><a name=\"内容简介\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">内容简介</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"2\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"para\" label-module=\"para\">该书介绍了计算机的基本组成原理和内部工作机制，内容覆盖了《中国计算机科学与技术学科教程2002（CCC2002）》对该课程所列出的知识单元。全书共分8章，主要内容分成两个部分：第1、2章介绍了计算机的基础知识；第3-8章介绍了计算机的各子系统（包括运算器、存储器、控制器、外部设备和输入输出子系统等）的基本组成原理、设计方法、相互关系以及各子系统互相连接构成整机系统的技术。该书各章末都附有习题，可配合授课选用。<span class=\"sup--normal\" data-sup=\"1\" data-ctrmap=\":1,\">&nbsp;[1]</span><a class=\"sup-anchor\" name=\"ref_[1]_5144034\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"3\" class=\"lemma-anchor para-title\"></a><a name=\"sub5144034_3\" class=\"lemma-anchor \"></a><a name=\"教材目录\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">教材目录</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"3\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><table log-set-param=\"table_view\" class=\"table-view log-set-param layui-table\"><tbody><tr><td width=\"327\" valign=\"top\"><div class=\"para\" label-module=\"para\"><span>第1章概论1</span></div><div class=\"para\" label-module=\"para\">1.1电子计算机与存储程序控制1</div><div class=\"para\" label-module=\"para\">1.1.1电子计算机的发展1</div><div class=\"para\" label-module=\"para\">1.1.2存储程序概念2</div><div class=\"para\" label-module=\"para\">1.2计算机的硬件组成3</div><div class=\"para\" label-module=\"para\">1.2.1计算机的主要部件4</div><div class=\"para\" label-module=\"para\">1.2.2计算机的总线结构5</div><div class=\"para\" label-module=\"para\">1.2.3大、中型计算机的典型结构6</div><div class=\"para\" label-module=\"para\">1.2.4不同对象观察到的计算机硬件系统7</div><div class=\"para\" label-module=\"para\">1.3计算机系统9</div><div class=\"para\" label-module=\"para\">1.3.1硬件与软件的关系9</div><div class=\"para\" label-module=\"para\">1.3.2系列机和软件兼容10</div><div class=\"para\" label-module=\"para\">1.3.3计算机系统的多层次结构10</div><div class=\"para\" label-module=\"para\">1.3.4实际机器和虚拟机器12</div><div class=\"para\" label-module=\"para\">1.4计算机的工作过程和主要性能指标12</div><div class=\"para\" label-module=\"para\">1.4.1计算机的工作过程12</div><div class=\"para\" label-module=\"para\">1.4.2计算机的主要性能指标13</div><div class=\"para\" label-module=\"para\">习题15</div><div class=\"para\" label-module=\"para\"><span>第2章数据的机器层次表示16</span></div><div class=\"para\" label-module=\"para\">2.1数值数据的表示16</div><div class=\"para\" label-module=\"para\">2.1.1计算机中的数值数据16</div><div class=\"para\" label-module=\"para\">2.1.2无符号数和带符号数17</div><div class=\"para\" label-module=\"para\">2.1.3原码表示法17</div><div class=\"para\" label-module=\"para\">2.1.4补码表示法18</div><div class=\"para\" label-module=\"para\">2.1.5反码表示法20</div><div class=\"para\" label-module=\"para\">2.1.6三种码制的比较与转换21</div><div class=\"para\" label-module=\"para\">2.2机器数的定点表示与浮点表示22</div><div class=\"para\" label-module=\"para\">2.2.1定点表示法22</div><div class=\"para\" label-module=\"para\">2.2.2浮点表示法24</div><div class=\"para\" label-module=\"para\">2.2.3浮点数阶码的移码表示法26</div><div class=\"para\" label-module=\"para\">2.2.4定点、浮点表示法与定点、浮点计算机28</div><div class=\"para\" label-module=\"para\">2.2.5浮点数尾数的基数29</div><div class=\"para\" label-module=\"para\">2.2.6实用浮点数举例30</div><div class=\"para\" label-module=\"para\">2.3非数值数据的表示32</div><div class=\"para\" label-module=\"para\">2.3.1字符和字符串的表示32</div><div class=\"para\" label-module=\"para\">2.3.2汉字的表示34</div><div class=\"para\" label-module=\"para\">2.3.3统一代码36</div><div class=\"para\" label-module=\"para\">2.4十进制数和数串的表示36</div><div class=\"para\" label-module=\"para\">2.4.1十进制数的编码37</div><div class=\"para\" label-module=\"para\">2.4.2十进制数串38</div><div class=\"para\" label-module=\"para\">2.5现代微型计算机系统中的数据表示举例39</div><div class=\"para\" label-module=\"para\">2.6数据校验码41</div><div class=\"para\" label-module=\"para\">2.6.1奇偶校验码41</div><div class=\"para\" label-module=\"para\">2.6.2海明校验码44</div><div class=\"para\" label-module=\"para\">2.6.3循环冗余校验码47</div><div class=\"para\" label-module=\"para\">习题49</div><div class=\"para\" label-module=\"para\"><span>第3章指令系统52</span></div><div class=\"para\" label-module=\"para\">3.1指令格式52</div><div class=\"para\" label-module=\"para\">3.1.1机器指令的基本格式52</div><div class=\"para\" label-module=\"para\">3.1.2地址码结构53</div><div class=\"para\" label-module=\"para\">3.1.3指令的操作码55</div><div class=\"para\" label-module=\"para\">3.2寻址技术57</div><div class=\"para\" label-module=\"para\">3.2.1编址方式58</div><div class=\"para\" label-module=\"para\">3.2.2指令寻址和数据寻址59</div><div class=\"para\" label-module=\"para\">3.2.3基本的数据寻址方式59</div><div class=\"para\" label-module=\"para\">3.2.4变型或组合寻址方式65</div><div class=\"para\" label-module=\"para\">3.3堆栈与堆栈操作68</div><div class=\"para\" label-module=\"para\">3.3.1堆栈结构68</div><div class=\"para\" label-module=\"para\">3.3.2堆栈操作70</div><div class=\"para\" label-module=\"para\">3.4指令类型70</div><div class=\"para\" label-module=\"para\">3.4.1数据传送类指令70</div><div class=\"para\" label-module=\"para\">3.4.2运算类指令71</div><div class=\"para\" label-module=\"para\">3.4.3程序控制类指令73</div><div class=\"para\" label-module=\"para\">3.4.4输入输出类指令74</div><div class=\"para\" label-module=\"para\">3.4.580x86指令系统举例75</div><div class=\"para\" label-module=\"para\">习题78</div><div class=\"para\" label-module=\"para\"><span>第4章数值的机器运算81</span></div><div class=\"para\" label-module=\"para\">4.1基本算术运算的实现81</div><div class=\"para\" label-module=\"para\">4.1.1加法器81</div><div class=\"para\" label-module=\"para\">4.1.2进位的产生和传递82</div><div class=\"para\" label-module=\"para\">4.1.3并行加法器的快速进位83</div><div class=\"para\" label-module=\"para\">4.2定点加减运算86</div><div class=\"para\" label-module=\"para\">4.2.1原码加减运算86</div><div class=\"para\" label-module=\"para\">4.2.2补码加减运算87</div><div class=\"para\" label-module=\"para\">4.2.3补码的溢出判断与检测方法89</div><div class=\"para\" label-module=\"para\">4.2.4补码定点加减运算的实现91</div><div class=\"para\" label-module=\"para\">4.3带符号数的移位和舍入操作92</div><div class=\"para\" label-module=\"para\">4.3.1带符号数的移位操作93</div><div class=\"para\" label-module=\"para\">4.3.2带符号数的舍入操作94</div><div class=\"para\" label-module=\"para\">4.4定点乘法运算95</div><div class=\"para\" label-module=\"para\">4.4.1原码一位乘法95</div><div class=\"para\" label-module=\"para\">4.4.2补码一位乘法98</div><div class=\"para\" label-module=\"para\">4.4.3补码两位乘法101</div><div class=\"para\" label-module=\"para\">4.4.4阵列乘法器103</div><div class=\"para\" label-module=\"para\">4.5定点除法运算104</div><div class=\"para\" label-module=\"para\">4.5.1原码除法运算104</div><div class=\"para\" label-module=\"para\">4.5.2补码除法运算109</div><div class=\"para\" label-module=\"para\">4.5.3阵列除法器112</div><div class=\"para\" label-module=\"para\">4.6规格化浮点运算112</div><div class=\"para\" label-module=\"para\">4.6.1浮点加减运算112</div><div class=\"para\" label-module=\"para\">4.6.2浮点乘除运算115</div><div class=\"para\" label-module=\"para\">4.6.3浮点运算器的实现116</div><div class=\"para\" label-module=\"para\">4.7十进制整数的加法运算117</div><div class=\"para\" label-module=\"para\">4.7.1一位十进制加法运算117</div><div class=\"para\" label-module=\"para\">4.7.2十进制加法器119</div><div class=\"para\" label-module=\"para\">4.7.3多位十进制加法120</div><div class=\"para\" label-module=\"para\">4.8逻辑运算与实现121</div><div class=\"para\" label-module=\"para\">4.9运算器的基本组成与实例123</div><div class=\"para\" label-module=\"para\">4.9.1运算器结构123</div><div class=\"para\" label-module=\"para\">4.9.2ALU举例125</div><div class=\"para\" label-module=\"para\">4.9.3浮点运算器举例127</div><div class=\"para\" label-module=\"para\">习题129</div><div class=\"para\" label-module=\"para\"><span>第5章存储系统和结构131</span></div><div class=\"para\" label-module=\"para\">5.1存储系统的组成131</div><div class=\"para\" label-module=\"para\">5.1.1存储器分类131</div><div class=\"para\" label-module=\"para\">5.1.2存储系统层次结构133</div><div class=\"para\" label-module=\"para\">5.2主存储器的组织134</div><div class=\"para\" label-module=\"para\">5.2.1主存储器的基本结构134</div><div class=\"para\" label-module=\"para\">5.2.2主存储器的存储单元135</div><div class=\"para\" label-module=\"para\">5.2.3主存储器的主要技术指标136</div><div class=\"para\" label-module=\"para\">5.2.4数据在主存中的存放137</div><div class=\"para\" label-module=\"para\">5.3半导体随机存储器和只读存储器138</div><div class=\"para\" label-module=\"para\">5.3.1RAM记忆单元电路138</div><div class=\"para\" label-module=\"para\">5.3.2动态RAM的刷新141</div><div class=\"para\" label-module=\"para\">5.3.3RAM芯片分析143</div><div class=\"para\" label-module=\"para\">5.3.4半导体只读存储器146</div><div class=\"para\" label-module=\"para\">5.3.5半导体存储器的封装148</div><div class=\"para\" label-module=\"para\">5.4主存储器的连接与控制149</div><div class=\"para\" label-module=\"para\">5.4.1主存容量的扩展149</div><div class=\"para\" label-module=\"para\">5.4.2存储芯片的地址分配和片选151</div><div class=\"para\" label-module=\"para\">5.4.3主存储器和CPU的连接154</div><div class=\"para\" label-module=\"para\">5.4.4主存的校验156</div><div class=\"para\" label-module=\"para\">5.4.5PC系列微型计算机的存储器接口157</div><div class=\"para\" label-module=\"para\">5.5提高主存读写速度的技术161</div><div class=\"para\" label-module=\"para\">5.5.1主存与CPU速度的匹配161</div><div class=\"para\" label-module=\"para\">5.5.2FPMDRAM161</div><div class=\"para\" label-module=\"para\">5.5.3EDODRAM162</div><div class=\"para\" label-module=\"para\">5.5.4SDRAM162</div><div class=\"para\" label-module=\"para\">5.5.5DDRSDRAM163</div><div class=\"para\" label-module=\"para\">5.5.6RambusDRAM163</div><div class=\"para\" label-module=\"para\">5.6多体交叉存储技术164</div><div class=\"para\" label-module=\"para\">5.6.1并行访问存储器165</div></td><td width=\"327\" valign=\"top\"><div class=\"para\" label-module=\"para\">5.6.2交叉访问存储器165</div><div class=\"para\" label-module=\"para\">5.7高速缓冲存储器167</div><div class=\"para\" label-module=\"para\">5.7.1高速缓存工作原理167</div><div class=\"para\" label-module=\"para\">5.7.2Cache的读写操作168</div><div class=\"para\" label-module=\"para\">5.7.3地址映像168</div><div class=\"para\" label-module=\"para\">5.7.4替换算法169</div><div class=\"para\" label-module=\"para\">5.7.5更新策略170</div><div class=\"para\" label-module=\"para\">5.7.6PC机中Cache技术的实现171</div><div class=\"para\" label-module=\"para\">5.8虚拟存储器172</div><div class=\"para\" label-module=\"para\">5.8.1虚拟存储器的基本概念172</div><div class=\"para\" label-module=\"para\">5.8.2页式虚拟存储器173</div><div class=\"para\" label-module=\"para\">5.8.3段式虚拟存储器174</div><div class=\"para\" label-module=\"para\">5.8.4段页式虚拟存储器174</div><div class=\"para\" label-module=\"para\">5.8.5快表与慢表175</div><div class=\"para\" label-module=\"para\">习题176</div><div class=\"para\" label-module=\"para\"><span>第6章中央处理器179</span></div><div class=\"para\" label-module=\"para\">6.1中央处理器的功能和组成179</div><div class=\"para\" label-module=\"para\">6.1.1CPU的功能179</div><div class=\"para\" label-module=\"para\">6.1.2CPU中的主要寄存器179</div><div class=\"para\" label-module=\"para\">6.1.3CPU的组成181</div><div class=\"para\" label-module=\"para\">6.1.4CPU的主要技术参数182</div><div class=\"para\" label-module=\"para\">6.2控制器的组成和实现方法184</div><div class=\"para\" label-module=\"para\">6.2.1控制器的基本组成184</div><div class=\"para\" label-module=\"para\">6.2.2控制器的硬件实现方法186</div><div class=\"para\" label-module=\"para\">6.3时序系统与控制方式187</div><div class=\"para\" label-module=\"para\">6.3.1时序系统187</div><div class=\"para\" label-module=\"para\">6.3.2控制方式189</div><div class=\"para\" label-module=\"para\">6.3.3指令运行的基本过程190</div><div class=\"para\" label-module=\"para\">6.3.4指令的微操作序列191</div><div class=\"para\" label-module=\"para\">6.4微程序控制原理194</div><div class=\"para\" label-module=\"para\">6.4.1微程序控制的基本概念194</div><div class=\"para\" label-module=\"para\">6.4.2微指令编码法195</div><div class=\"para\" label-module=\"para\">6.4.3微程序控制器的组成和工作过程198</div><div class=\"para\" label-module=\"para\">6.4.4微程序入口地址的形成199</div><div class=\"para\" label-module=\"para\">6.4.5后继微地址的形成200</div><div class=\"para\" label-module=\"para\">6.4.6微程序设计200</div><div class=\"para\" label-module=\"para\">6.5控制单元的设计203</div><div class=\"para\" label-module=\"para\">6.5.1简单的CPU模型203</div><div class=\"para\" label-module=\"para\">6.5.2组合逻辑控制单元设计206</div><div class=\"para\" label-module=\"para\">6.5.3微程序控制单元设计211</div><div class=\"para\" label-module=\"para\">6.6流水线技术214</div><div class=\"para\" label-module=\"para\">6.6.1重叠控制214</div><div class=\"para\" label-module=\"para\">6.6.2先行控制原理215</div><div class=\"para\" label-module=\"para\">6.6.3流水工作原理216</div><div class=\"para\" label-module=\"para\">6.7精简指令系统计算机218</div><div class=\"para\" label-module=\"para\">6.7.1从复杂指令系统到精简指令系统219</div><div class=\"para\" label-module=\"para\">6.7.2RISC的特点和优势219</div><div class=\"para\" label-module=\"para\">6.7.3RISC基本技术220</div><div class=\"para\" label-module=\"para\">习题221</div><div class=\"para\" label-module=\"para\"><span>第7章外部设备226</span></div><div class=\"para\" label-module=\"para\">7.1外部设备概述226</div><div class=\"para\" label-module=\"para\">7.1.1外部设备的分类226</div><div class=\"para\" label-module=\"para\">7.1.2外部设备的地位和作用227</div><div class=\"para\" label-module=\"para\">7.2磁介质存储器的性能和原理228</div><div class=\"para\" label-module=\"para\">7.2.1磁介质存储器的读写228</div><div class=\"para\" label-module=\"para\">7.2.2磁介质存储器的技术指标229</div><div class=\"para\" label-module=\"para\">7.2.3数字磁记录方式231</div><div class=\"para\" label-module=\"para\">7.2.4编码方式的比较233</div><div class=\"para\" label-module=\"para\">7.3磁介质存储设备235</div><div class=\"para\" label-module=\"para\">7.3.1硬盘存储器的基本结构与分类235</div><div class=\"para\" label-module=\"para\">7.3.2硬盘驱动器235</div><div class=\"para\" label-module=\"para\">7.3.3硬盘的信息分布和磁盘地址236</div><div class=\"para\" label-module=\"para\">7.3.4硬盘存储器的技术参数238</div><div class=\"para\" label-module=\"para\">7.3.5硬盘控制逻辑239</div><div class=\"para\" label-module=\"para\">7.3.6硬盘的分区域记录240</div><div class=\"para\" label-module=\"para\">7.3.7软磁盘存储器242</div><div class=\"para\" label-module=\"para\">7.4磁盘阵列243</div><div class=\"para\" label-module=\"para\">7.4.1RAID简介243</div><div class=\"para\" label-module=\"para\">7.4.2RAID的分级244</div><div class=\"para\" label-module=\"para\">7.5光盘存储器245</div><div class=\"para\" label-module=\"para\">7.5.1光盘存储器的类型245</div><div class=\"para\" label-module=\"para\">7.5.2光盘存储器的组成及工作原理246</div><div class=\"para\" label-module=\"para\">7.5.3光盘驱动器248</div><div class=\"para\" label-module=\"para\">7.5.4DVD249</div><div class=\"para\" label-module=\"para\">7.6新型辅助存储器250</div><div class=\"para\" label-module=\"para\">7.6.1大容量可移动存储器251</div><div class=\"para\" label-module=\"para\">7.6.2闪存卡和USB电子盘253</div><div class=\"para\" label-module=\"para\">7.7键盘输入设备254</div><div class=\"para\" label-module=\"para\">7.7.1键开关与键盘类型254</div><div class=\"para\" label-module=\"para\">7.7.2键盘扫描255</div><div class=\"para\" label-module=\"para\">7.7.3微型计算机键盘256</div><div class=\"para\" label-module=\"para\">7.8其他输入设备259</div><div class=\"para\" label-module=\"para\">7.8.1鼠标器259</div><div class=\"para\" label-module=\"para\">7.8.2其他定位设备260</div><div class=\"para\" label-module=\"para\">7.8.3扫描仪260</div><div class=\"para\" label-module=\"para\">7.9打印输出设备263</div><div class=\"para\" label-module=\"para\">7.9.1打印机概述263</div><div class=\"para\" label-module=\"para\">7.9.2打印机的主要性能指标264</div><div class=\"para\" label-module=\"para\">7.9.3针式打印机工作原理265</div><div class=\"para\" label-module=\"para\">7.9.4喷墨打印机工作原理267</div><div class=\"para\" label-module=\"para\">7.9.5激光打印机工作原理268</div><div class=\"para\" label-module=\"para\">7.10显示设备269</div><div class=\"para\" label-module=\"para\">7.10.1显示器概述269</div><div class=\"para\" label-module=\"para\">7.10.2CRT显示器270</div><div class=\"para\" label-module=\"para\">7.10.3字符显示器的工作原理273</div><div class=\"para\" label-module=\"para\">7.10.4图形显示器的工作原理276</div><div class=\"para\" label-module=\"para\">7.10.5LCD显示器278</div><div class=\"para\" label-module=\"para\">7.10.6视频显示标准280</div><div class=\"para\" label-module=\"para\">习题281</div><div class=\"para\" label-module=\"para\"><span>第8章输入输出系统284</span></div><div class=\"para\" label-module=\"para\">8.1主机与外设的连接284</div><div class=\"para\" label-module=\"para\">8.1.1输入输出接口284</div><div class=\"para\" label-module=\"para\">8.1.2接口的功能和基本组成285</div><div class=\"para\" label-module=\"para\">8.1.3外设的识别与端口寻址287</div><div class=\"para\" label-module=\"para\">8.1.4输入输出信息传送控制方式289</div><div class=\"para\" label-module=\"para\">8.2程序查询方式及其接口290</div><div class=\"para\" label-module=\"para\">8.2.1程序查询方式290</div><div class=\"para\" label-module=\"para\">8.2.2程序查询方式接口292</div><div class=\"para\" label-module=\"para\">8.3中断系统和程序中断方式294</div><div class=\"para\" label-module=\"para\">8.3.1中断的基本概念294</div><div class=\"para\" label-module=\"para\">8.3.2中断请求和中断判优296</div><div class=\"para\" label-module=\"para\">8.3.3中断响应和中断处理300</div><div class=\"para\" label-module=\"para\">8.3.4多重中断与中断屏蔽303</div><div class=\"para\" label-module=\"para\">8.3.5中断全过程307</div><div class=\"para\" label-module=\"para\">8.3.6程序中断接口结构307</div><div class=\"para\" label-module=\"para\">8.4DMA方式及其接口309</div><div class=\"para\" label-module=\"para\">8.4.1DMA方式的基本概念309</div><div class=\"para\" label-module=\"para\">8.4.2DMA接口310</div><div class=\"para\" label-module=\"para\">8.4.3DMA传送方法与传送过程313</div><div class=\"para\" label-module=\"para\">8.5通道控制方式316</div><div class=\"para\" label-module=\"para\">8.5.1通道的基本概念316</div><div class=\"para\" label-module=\"para\">8.5.2通道的类型与结构317</div><div class=\"para\" label-module=\"para\">8.5.3通道程序320</div><div class=\"para\" label-module=\"para\">8.5.4通道工作过程322</div><div class=\"para\" label-module=\"para\">8.6总线技术323</div><div class=\"para\" label-module=\"para\">8.6.1总线通信控制323</div><div class=\"para\" label-module=\"para\">8.6.2总线管理325</div><div class=\"para\" label-module=\"para\">8.6.3总线类型和总线标准327</div><div class=\"para\" label-module=\"para\">8.6.4I/O接口标准330</div><div class=\"para\" label-module=\"para\">习题333</div><div class=\"para\" label-module=\"para\">索引336</div><div class=\"para\" label-module=\"para\">参考文献347<span class=\"sup--normal\" data-sup=\"3\" data-ctrmap=\":3,\">&nbsp;[3]</span></div></td></tr></tbody></table>', '成书过程编辑该书是中国计算机学会和清华大学出版社共同规划的面向全国高等院校计算机专业本科生的“21世纪大学本科计算机专业系列教材”之一。该教材由蒋本珊编著，在该书编写过程中得到了“21世纪大学本科计算机专业系列教材”编委会的指导和建议。重庆大学计算机系袁开榜教授审阅了该书的全部内容，提出了修改意见。该教材于2004年3月1日由清华大学出版社出版。 [2] 内容简介编辑该书介绍了计算机的基本组成原理和内部工作机制，内容覆盖了《中国计算机科学与技术学科教程2002（CCC2002）》对该课程所列出的知识单元。全书共分8章，主要内容分成两个部分：第1、2章介绍了计算机的基础知识；第3-8章介绍了计算机的各子系统（包括运算器、存储器、控制器、外部设备和输入输出子系统等）的基本组成原理、设计方法、相互关系以及各子系统互相连接构成整机系统的技术。该书各章末都附有习题，可配合授课选用。 [1] 教材目录编辑第1章概论11.1电子计算机与存储程序控制11.1.1电子计算机的发展11.1.2存储程序概念21.2计算机的硬件组成31.2.1计算机的主要部件41.2.2计算机的总线结构51.2.3大、中型计算机的典型结构61.2.4不同对象观察到的计算机硬件系统71.3计算机系统91.3.1硬件与软件的关系91.3.2系列机和软件兼容101.3.3计算机系统的多层次结构101.3.4实际机器和虚拟机器121.4计算机的工作过程和主要性能指标121.4.1计算机的工作过程121.4.2计算机的主要性能指标13习题15第2章数据的机器层次表示162.1数值数据的表示162.1.1计算机中的数值数据162.1.2无符号数和带符号数172.1.3原码表示法172.1.4补码表示法182.1.5反码表示法202.1.6三种码制的比较与转换212.2机器数的定点表示与浮点表示222.2.1定点表示法222.2.2浮点表示法242.2.3浮点数阶码的移码表示法262.2.4定点、浮点表示法与定点、浮点计算机282.2.5浮点数尾数的基数292.2.6实用浮点数举例302.3非数值数据的表示322.3.1字符和字符串的表示322.3.2汉字的表示342.3.3统一代码362.4十进制数和数串的表示362.4.1十进制数的编码372.4.2十进制数串382.5现代微型计算机系统中的数据表示举例392.6数据校验码412.6.1奇偶校验码412.6.2海明校验码442.6.3循环冗余校验码47习题49第3章指令系统523.1指令格式523.1.1机器指令的基本格式523.1.2地址码结构533.1.3指令的操作码553.2寻址技术573.2.1编址方式583.2.2指令寻址和数据寻址593.2.3基本的数据寻址方式593.2.4变型或组合寻址方式653.3堆栈与堆栈操作683.3.1堆栈结构683.3.2堆栈操作703.4指令类型703.4.1数据传送类指令703.4.2运算类指令713.4.3程序控制类指令733.4.4输入输出类指令743.4.580x86指令系统举例75习题78第4章数值的机器运算814.1基本算术运算的实现814.1.1加法器814.1.2进位的产生和传递824.1.3并行加法器的快速进位834.2定点加减运算864.2.1原码加减运算864.2.2补码加减运算874.2.3补码的溢出判断与检测方法894.2.4补码定点加减运算的实现914.3带符号数的移位和舍入操作924.3.1带符号数的移位操作934.3.2带符号数的舍入操作944.4定点乘法运算954.4.1原码一位乘法954.4.2补码一位乘法984.4.3补码两位乘法1014.4.4阵列乘法器1034.5定点除法运算1044.5.1原码除法运算1044.5.2补码除法运算1094.5.3阵列除法器1124.6规格化浮点运算1124.6.1浮点加减运算1124.6.2浮点乘除运算1154.6.3浮点运算器的实现1164.7十进制整数的加法运算1174.7.1一位十进制加法运算1174.7.2十进制加法器1194.7.3多位十进制加法1204.8逻辑运算与实现1214.9运算器的基本组成与实例1234.9.1运算器结构1234.9.2ALU举例1254.9.3浮点运算器举例127习题129第5章存储系统和结构1315.1存储系统的组成1315.1.1存储器分类1315.1.2存储系统层次结构1335.2主存储器的组织1345.2.1主存储器的基本结构1345.2.2主存储器的存储单元1355.2.3主存储器的主要技术指标1365.2.4数据在主存中的存放1375.3半导体随机存储器和只读存储器1385.3.1RAM记忆单元电路1385.3.2动态RAM的刷新1415.3.3RAM芯片分析1435.3.4半导体只读存储器1465.3.5半导体存储器的封装1485.4主存储器的连接与控制1495.4.1主存容量的扩展1495.4.2存储芯片的地址分配和片选1515.4.3主存储器和CPU的连接1545.4.4主存的校验1565.4.5PC系列微型计算机的存储器接口1575.5提高主存读写速度的技术1615.5.1主存与CPU速度的匹配1615.5.2FPMDRAM1615.5.3EDODRAM1625.5.4SDRAM1625.5.5DDRSDRAM1635.5.6RambusDRAM1635.6多体交叉存储技术1645.6.1并行访问存储器1655.6.2交叉访问存储器1655.7高速缓冲存储器1675.7.1高速缓存工作原理1675.7.2Cache的读写操作1685.7.3地址映像1685.7.4替换算法1695.7.5更新策略1705.7.6PC机中Cache技术的实现1715.8虚拟存储器1725.8.1虚拟存储器的基本概念1725.8.2页式虚拟存储器1735.8.3段式虚拟存储器1745.8.4段页式虚拟存储器1745.8.5快表与慢表175习题176第6章中央处理器1796.1中央处理器的功能和组成1796.1.1CPU的功能1796.1.2CPU中的主要寄存器1796.1.3CPU的组成1816.1.4CPU的主要技术参数1826.2控制器的组成和实现方法1846.2.1控制器的基本组成1846.2.2控制器的硬件实现方法1866.3时序系统与控制方式1876.3.1时序系统1876.3.2控制方式1896.3.3指令运行的基本过程1906.3.4指令的微操作序列1916.4微程序控制原理1946.4.1微程序控制的基本概念1946.4.2微指令编码法1956.4.3微程序控制器的组成和工作过程1986.4.4微程序入口地址的形成1996.4.5后继微地址的形成2006.4.6微程序设计2006.5控制单元的设计2036.5.1简单的CPU模型2036.5.2组合逻辑控制单元设计2066.5.3微程序控制单元设计2116.6流水线技术2146.6.1重叠控制2146.6.2先行控制原理2156.6.3流水工作原理2166.7精简指令系统计算机2186.7.1从复杂指令系统到精简指令系统2196.7.2RISC的特点和优势2196.7.3RISC基本技术220习题221第7章外部设备2267.1外部设备概述2267.1.1外部设备的分类2267.1.2外部设备的地位和作用2277.2磁介质存储器的性能和原理2287.2.1磁介质存储器的读写2287.2.2磁介质存储器的技术指标2297.2.3数字磁记录方式2317.2.4编码方式的比较2337.3磁介质存储设备2357.3.1硬盘存储器的基本结构与分类2357.3.2硬盘驱动器2357.3.3硬盘的信息分布和磁盘地址2367.3.4硬盘存储器的技术参数2387.3.5硬盘控制逻辑2397.3.6硬盘的分区域记录2407.3.7软磁盘存储器2427.4磁盘阵列2437.4.1RAID简介2437.4.2RAID的分级2447.5光盘存储器2457.5.1光盘存储器的类型2457.5.2光盘存储器的组成及工作原理2467.5.3光盘驱动器2487.5.4DVD2497.6新型辅助存储器2507.6.1大容量可移动存储器2517.6.2闪存卡和USB电子盘2537.7键盘输入设备2547.7.1键开关与键盘类型2547.7.2键盘扫描2557.7.3微型计算机键盘2567.8其他输入设备2597.8.1鼠标器2597.8.2其他定位设备2607.8.3扫描仪2607.9打印输出设备2637.9.1打印机概述2637.9.2打印机的主要性能指标2647.9.3针式打印机工作原理2657.9.4喷墨打印机工作原理2677.9.5激光打印机工作原理2687.10显示设备2697.10.1显示器概述2697.10.2CRT显示器2707.10.3字符显示器的工作原理2737.10.4图形显示器的工作原理2767.10.5LCD显示器2787.10.6视频显示标准280习题281第8章输入输出系统2848.1主机与外设的连接2848.1.1输入输出接口2848.1.2接口的功能和基本组成2858.1.3外设的识别与端口寻址2878.1.4输入输出信息传送控制方式2898.2程序查询方式及其接口2908.2.1程序查询方式2908.2.2程序查询方式接口2928.3中断系统和程序中断方式2948.3.1中断的基本概念2948.3.2中断请求和中断判优2968.3.3中断响应和中断处理3008.3.4多重中断与中断屏蔽3038.3.5中断全过程3078.3.6程序中断接口结构3078.4DMA方式及其接口3098.4.1DMA方式的基本概念3098.4.2DMA接口3108.4.3DMA传送方法与传送过程3138.5通道控制方式3168.5.1通道的基本概念3168.5.2通道的类型与结构3178.5.3通道程序3208.5.4通道工作过程3228.6总线技术3238.6.1总线通信控制3238.6.2总线管理3258.6.3总线类型和总线标准3278.6.4I/O接口标准330习题333索引336参考文献347 [3]', '佚名', '10', 4320, '2021-01-03 12:53:28', '2021-01-24 12:56:29', 0, 1);
INSERT INTO `sys_book` VALUES (15, 45267, 'java程序设计', '9', '2019-12-02 20:04:05', '/upload/fa2ce6f0-d39d-4b2d-a91a-48a26aa5cacf.jpeg', 'java程序设计.jpeg', '<dl class=\"lemmaWgt-lemmaTitle lemmaWgt-lemmaTitle-\"><dd class=\"lemmaWgt-lemmaTitle-title\"><div class=\"lemma-summary\" label-module=\"lemmaSummary\"><div class=\"para\" label-module=\"para\">Java是一门<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\">面向对象</a>编程语言，不仅吸收了<a target=\"_blank\" href=\"https://baike.baidu.com/item/C%2B%2B\">C++</a>语言的各种优点，还摒弃了C++里难以理解的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%9A%E7%BB%A7%E6%89%BF\">多继承</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%8C%87%E9%92%88/2878304\" data-lemmaid=\"2878304\">指针</a>等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程<span class=\"sup--normal\" data-sup=\"1\" data-ctrmap=\":1,\">&nbsp;[1]</span><a class=\"sup-anchor\" name=\"ref_[1]_12654100\">&nbsp;</a>&nbsp;。</div><div class=\"para\" label-module=\"para\">Java具有简单性、面向对象、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F/19276232\" data-lemmaid=\"19276232\">分布式</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%81%A5%E5%A3%AE%E6%80%A7/4430133\" data-lemmaid=\"4430133\">健壮性</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%89%E5%85%A8%E6%80%A7/7664678\" data-lemmaid=\"7664678\">安全性</a>、平台独立与可移植性、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1190404\" data-lemmaid=\"1190404\">多线程</a>、动态性等特点<span class=\"sup--normal\" data-sup=\"2\" data-ctrmap=\":2,\">&nbsp;[2]</span><a class=\"sup-anchor\" name=\"ref_[2]_12654100\">&nbsp;</a>&nbsp;。Java可以编写<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/2331979\" data-lemmaid=\"2331979\">桌面应用程序</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\">Web应用程序</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/4905336\" data-lemmaid=\"4905336\">分布式系统</a>和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F/186978\" data-lemmaid=\"186978\">嵌入式系统</a>应用程序等<span class=\"sup--normal\" data-sup=\"3\" data-ctrmap=\":3,\">&nbsp;[3]</span><a class=\"sup-anchor\" name=\"ref_[3]_12654100\">&nbsp;</a>&nbsp;。</div></div><div class=\"lemmaWgt-promotion-leadPVBtn\"></div><p><a href=\"https://baike.baidu.com/vbaike/%E7%BC%96%E7%A8%8B%E7%95%8C%E7%9A%84%E4%B8%87%E9%87%91%E6%B2%B9/25285\" ad-type=\"bannerAd\" target=\"_blank\" nslog-type=\"10002202\" nslog-params=\"{&quot;adId&quot;:&quot;6117&quot;, &quot;adTitle&quot;: &quot;编程界的万金油&quot;, &quot;adPos&quot;: 15}\"><img src=\"https://bkimg.cdn.bcebos.com/pic/d52a2834349b033b514cf75e18ce36d3d439bd69\" title=\"编程界的万金油\"></a></p></dd><dd class=\"lemmaWgt-lemmaTitle-title\"><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">发展历程</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"1\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/Java/85979/0/cefc1e178a82b901d3ed95f0748da9773812efb5?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"JAVA\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/cefc1e178a82b901d3ed95f0748da9773812efb5?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"JAVA\"></a><span class=\"description\">JAVA</span></div>20世纪90年代，硬件领域出现了单片式计算机系统，这种价格低廉的系统一出现就立即引起了自动控制领域人员的注意，因为使用它可以大幅度提升消费类电子产品<i>（如电视机顶盒、面包烤箱、移动电话等）</i>的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%99%BA%E8%83%BD%E5%8C%96\">智能化</a>程度。Sun公司为了抢占市场先机，在1991年成立了一个称为Green的项目小组，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B8%95%E7%89%B9%E9%87%8C%E5%85%8B/4831889\" data-lemmaid=\"4831889\">帕特里克</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%A9%B9%E5%A7%86%E6%96%AF%C2%B7%E9%AB%98%E6%96%AF%E6%9E%97\">詹姆斯·高斯林</a>、麦克·舍林丹和其他几个工程师一起组成的工作小组在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8A%A0%E5%88%A9%E7%A6%8F%E5%B0%BC%E4%BA%9A\">加利福尼亚</a>州<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%97%A8%E6%B4%9B%E5%B8%95%E5%85%8B\">门洛帕克</a>市沙丘路的一个小工作室里面研究开发新技术，专攻计算机在家电产品上的嵌入式应用。</div><div class=\"para\" label-module=\"para\">由于<a target=\"_blank\" href=\"https://baike.baidu.com/item/C%2B%2B\">C++</a>所具有的优势，该项目组的研究人员首先考虑采用C++来编写程序。但对于<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%A1%AC%E4%BB%B6\">硬件</a>资源极其匮乏的单片式系统来说，C++程序过于复杂和庞大。另外由于消费电子产品所采用的嵌入式处理器芯片的种类繁杂，如何让编写的程序<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%B7%A8%E5%B9%B3%E5%8F%B0\">跨平台</a>运行也是个难题。为了解决困难，他们首先着眼于语言的开发，假设了一种结构简单、符合嵌入式应用需要的硬件平台体系结构并为其制定了相应的规范，其中就定义了这种硬件平台的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6\">二进制</a>机器码指令系统<i>（即后来成为“</i><i><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AD%97%E8%8A%82%E7%A0%81\">字节码</a></i><i>”的指令系统）</i>，以待语言开发成功后，能有<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8D%8A%E5%AF%BC%E4%BD%93%E8%8A%AF%E7%89%87\">半导体芯片</a>生产商开发和生产这种硬件平台。对于新语言的设计，Sun公司研发人员并没有开发一种全新的语言，而是根据嵌入式软件的要求，对C++进行了改造，去除了留在C++的一些不太实用及影响安全的成分，并结合嵌入式系统的实时性要求，开发了一种称为<a target=\"_blank\" href=\"https://baike.baidu.com/item/Oak\">Oak</a>的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%AD%E8%A8%80\">面向对象语言</a>。</div><div class=\"para\" label-module=\"para\">由于在开发Oak语言时，尚且不存在运行字节码的硬件平台，所以为了在开发时可以对这种语言进行实验研究，他们就在已有的硬件和软件平台基础上，按照自己所指定的规范，用软件建设了一个运行平台，整个系统除了比C++更加简单之外，没有什么大的区别。1992年的夏天，当Oak语言开发成功后，研究者们向硬件生产商进行演示了Green操作系统、Oak的程序设计语言、类库和其硬件，以说服他们使用Oak语言生产硬件芯片，但是，硬件生产商并未对此产生极大的热情。因为他们认为，在所有人对Oak语言还一无所知的情况下，就生产硬件产品的风险实在太大了，所以Oak语言也就因为缺乏硬件的支持而无法进入市场，从而被搁置了下来。</div><div class=\"para\" label-module=\"para\">1994年6、7月间，在经历了一场历时三天的讨论之后，团队决定再一次改变了努力的目标，这次他们决定将该技术应用于<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%87%E7%BB%B4%E7%BD%91\">万维网</a>。他们认为随着<a target=\"_blank\" href=\"https://baike.baidu.com/item/Mosaic\">Mosaic</a>浏览器的到来，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9B%A0%E7%89%B9%E7%BD%91\">因特网</a>正在向同样的高度互动的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%BF%9C%E6%99%AF\">远景</a>演变，而这一远景正是他们在有线电视网中看到的。作为原型，帕特里克·诺顿写了一个小型万维网浏览器WebRunner。<span class=\"sup--normal\" data-sup=\"8\" data-ctrmap=\":8,\">&nbsp;[8]</span><a class=\"sup-anchor\" name=\"ref_[8]_12654100\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">1995年，互联网的蓬勃发展给了Oak机会。业界为了使死板、单调的静态网页能够“灵活”起来，急需一种软件技术来开发一种程序，这种程序可以通过网络传播并且能够跨平台运行。于是，世界各大<a target=\"_blank\" href=\"https://baike.baidu.com/item/IT/16684878\" data-lemmaid=\"16684878\">IT</a>企业为此纷纷投入了大量的人力、物力和财力。这个时候，Sun公司想起了那个被搁置起来很久的Oak，并且重新审视了那个用软件编写的试验平台，由于它是按照嵌入式系统硬件平台体系结构进行编写的，所以非常小，特别适用于网络上的传输系统，而Oak也是一种精简的语言，程序非常小，适合在网络上传输。Sun公司首先推出了可以嵌入网页并且可以随同网页在网络上传输的<a target=\"_blank\" href=\"https://baike.baidu.com/item/Applet\">Applet</a><i>（Applet是一种将小程序嵌入到网页中进行执行的技术）</i>，并将Oak更名为Java<i>（在申请注册商标时，发现Oak已经被人使用了，再想了一系列名字之后，最终，使用了提议者在喝一杯Java咖啡时无意提到的Java词语）</i>。5月23日，Sun公司在Sun world会议上正式发布Java和HotJava浏览器。<a target=\"_blank\" href=\"https://baike.baidu.com/item/IBM/9190\" data-lemmaid=\"9190\">IBM</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/Apple/3860362\" data-lemmaid=\"3860362\">Apple</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/DEC\">DEC</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/Adobe\">Adobe</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/HP\">HP</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/Oracle\">Oracle</a>、Netscap<span><a target=\"_blank\" href=\"https://baike.baidu.com/item/e\">e</a></span>和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BE%AE%E8%BD%AF\">微软</a>等各大公司都纷纷停止了自己的相关开发项目，竞相购买了Java使用许可证，并为自己的产品开发了相应的Java平台。<span class=\"sup--normal\" data-sup=\"9-10\" data-ctrmap=\":9,:10,\">&nbsp;[9-10]</span><a class=\"sup-anchor\" name=\"ref_[9-10]_12654100\">&nbsp;</a><a name=\"ref_10\"></a></div><div class=\"para\" label-module=\"para\">1996年1月，Sun公司发布了Java的第一个开发工具包<i>（JDK 1.0）</i>，这是Java发展历程中的重要里程碑，标志着Java成为一种独立的开发工具。9月，约8.3万个网页应用了Java技术来制作。10月，Sun公司发布了Java平台的第一个即时<i>（JIT）</i>编译器。</div><div class=\"para\" label-module=\"para\">1997年2月，JDK 1.1面世，在随后的3周时间里，达到了22万次的下载量。4月2日，Java One会议召开，参会者逾一万人，创当时全球同类会议规模之纪录。9月，Java Developer Connection社区成员超过10万。</div><div class=\"para\" label-module=\"para\">1998年12月8日，第二代Java平台的企业版J2EE发布。1999年6月，Sun公司发布了第二代Java平台（简称为Java2）的3个版本：<a target=\"_blank\" href=\"https://baike.baidu.com/item/J2ME\">J2ME</a>（Java2 Micro Edition，Java2平台的微型版），应用于移动、无线及有限资源的环境；<a target=\"_blank\" href=\"https://baike.baidu.com/item/J2SE\">J2SE</a>（Java 2 Standard Edition，Java 2平台的标准版），应用于桌面环境；<a target=\"_blank\" href=\"https://baike.baidu.com/item/J2EE\">J2EE</a>（Java 2Enterprise Edition，Java 2平台的企业版），应用于基于Java的应用服务器。Java 2平台的发布，是Java发展过程中最重要的一个里程碑，标志着Java的应用开始普及。</div><div class=\"para\" label-module=\"para\">1999年4月27日，HotSpot虚拟机发布。<a target=\"_blank\" href=\"https://baike.baidu.com/item/HotSpot\">HotSpot</a>虚拟机发布时是作为JDK 1.2的附加程序提供的，后来它成为了JDK 1.3及之后所有版本的Sun JDK的默认虚拟机<span class=\"sup--normal\" data-sup=\"11\" data-ctrmap=\":11,\">&nbsp;[11]</span><a class=\"sup-anchor\" name=\"ref_[11]_12654100\">&nbsp;</a>&nbsp;。</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/Java/85979/0/a8ec8a13632762d04989f67ca7ec08fa503dc6ba?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"Java创始人之一：詹姆斯·高斯林\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/a8ec8a13632762d04989f67ca7ec08fa503dc6ba?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"Java创始人之一：詹姆斯·高斯林\"></a><span class=\"description\">Java创始人之一：詹姆斯·高斯林</span></div>2000年5月，JDK1.3、JDK1.4和J2SE1.3相继发布，几周后其获得了<a target=\"_blank\" href=\"https://baike.baidu.com/item/Apple/3860362\" data-lemmaid=\"3860362\">Apple</a>公司Mac OS X的工业标准的支持。2001年9月24日，J2EE1.3发布。2002年2月26日，J2SE1.4发布。自此Java的计算能力有了大幅提升，与J2SE1.3相比，其多了近62%的类和接口。在这些新特性当中，还提供了广泛的<a target=\"_blank\" href=\"https://baike.baidu.com/item/XML\">XML</a>支持、安全套接字<i>（Socket）</i>支持<i>（通过SSL与TLS协议）</i>、全新的I/OAPI、正则表达式、日志与断言。2004年9月30日，J2SE1.5发布，成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE 1.5更名为Java SE 5.0<i>（内部版本号1.5.0）</i>，代号为“Tiger”，Tiger包含了从1996年发布1.0版本以来的最重大的更新，其中包括泛型支持、基本类型的自动装箱、改进的循环、枚举类型、格式化I/O及可变参数。</div><div class=\"para\" label-module=\"para\">2005年6月，在Java One大会上，Sun公司发布了Java SE 6。此时，Java的各种版本已经更名，已取消其中的数字2，如J2EE更名为<a target=\"_blank\" href=\"https://baike.baidu.com/item/JavaEE\">JavaEE</a>，J2SE更名为JavaSE，J2ME更名为<a target=\"_blank\" href=\"https://baike.baidu.com/item/JavaME\">JavaME</a>。<span class=\"sup--normal\" data-sup=\"12\" data-ctrmap=\":12,\">&nbsp;[12]</span><a class=\"sup-anchor\" name=\"ref_[12]_12654100\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">2006年11月13日，Java技术的发明者Sun公司宣布，将Java技术作为免费软件对外发布。Sun公司正式发布的有关Java平台标准版的第一批源代码，以及Java迷你版的可执行源代码。从2007年3月起，全世界所有的开发人员均可对Java源代码进行修改<span class=\"sup--normal\" data-sup=\"13\" data-ctrmap=\":13,\">&nbsp;[13]</span><a class=\"sup-anchor\" name=\"ref_[13]_12654100\">&nbsp;</a>&nbsp;。</div><div class=\"para\" label-module=\"para\">2009年，甲骨文公司宣布收购Sun<span class=\"sup--normal\" data-sup=\"14\" data-ctrmap=\":14,\">&nbsp;[14]</span><a class=\"sup-anchor\" name=\"ref_[14]_12654100\">&nbsp;</a>&nbsp;。2010年，Java编程语言的共同创始人之一詹姆斯·高斯林从Oracle公司辞职。2011年，甲骨文公司举行了全球性的活动，以庆祝Java7的推出，随后Java7正式发布。2014年，甲骨文公司发布了Java8正式版<span class=\"sup--normal\" data-sup=\"15\" data-ctrmap=\":15,\">&nbsp;[15]</span><a class=\"sup-anchor\" name=\"ref_[15]_12654100\">&nbsp;</a>&nbsp;。</div></dd></dl>', 'Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程 [1]  。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点 [2]  。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等 [3]  。发展历程编辑JAVA20世纪90年代，硬件领域出现了单片式计算机系统，这种价格低廉的系统一出现就立即引起了自动控制领域人员的注意，因为使用它可以大幅度提升消费类电子产品（如电视机顶盒、面包烤箱、移动电话等）的智能化程度。Sun公司为了抢占市场先机，在1991年成立了一个称为Green的项目小组，帕特里克、詹姆斯·高斯林、麦克·舍林丹和其他几个工程师一起组成的工作小组在加利福尼亚州门洛帕克市沙丘路的一个小工作室里面研究开发新技术，专攻计算机在家电产品上的嵌入式应用。由于C++所具有的优势，该项目组的研究人员首先考虑采用C++来编写程序。但对于硬件资源极其匮乏的单片式系统来说，C++程序过于复杂和庞大。另外由于消费电子产品所采用的嵌入式处理器芯片的种类繁杂，如何让编写的程序跨平台运行也是个难题。为了解决困难，他们首先着眼于语言的开发，假设了一种结构简单、符合嵌入式应用需要的硬件平台体系结构并为其制定了相应的规范，其中就定义了这种硬件平台的二进制机器码指令系统（即后来成为“字节码”的指令系统），以待语言开发成功后，能有半导体芯片生产商开发和生产这种硬件平台。对于新语言的设计，Sun公司研发人员并没有开发一种全新的语言，而是根据嵌入式软件的要求，对C++进行了改造，去除了留在C++的一些不太实用及影响安全的成分，并结合嵌入式系统的实时性要求，开发了一种称为Oak的面向对象语言。由于在开发Oak语言时，尚且不存在运行字节码的硬件平台，所以为了在开发时可以对这种语言进行实验研究，他们就在已有的硬件和软件平台基础上，按照自己所指定的规范，用软件建设了一个运行平台，整个系统除了比C++更加简单之外，没有什么大的区别。1992年的夏天，当Oak语言开发成功后，研究者们向硬件生产商进行演示了Green操作系统、Oak的程序设计语言、类库和其硬件，以说服他们使用Oak语言生产硬件芯片，但是，硬件生产商并未对此产生极大的热情。因为他们认为，在所有人对Oak语言还一无所知的情况下，就生产硬件产品的风险实在太大了，所以Oak语言也就因为缺乏硬件的支持而无法进入市场，从而被搁置了下来。1994年6、7月间，在经历了一场历时三天的讨论之后，团队决定再一次改变了努力的目标，这次他们决定将该技术应用于万维网。他们认为随着Mosaic浏览器的到来，因特网正在向同样的高度互动的远景演变，而这一远景正是他们在有线电视网中看到的。作为原型，帕特里克·诺顿写了一个小型万维网浏览器WebRunner。 [8] 1995年，互联网的蓬勃发展给了Oak机会。业界为了使死板、单调的静态网页能够“灵活”起来，急需一种软件技术来开发一种程序，这种程序可以通过网络传播并且能够跨平台运行。于是，世界各大IT企业为此纷纷投入了大量的人力、物力和财力。这个时候，Sun公司想起了那个被搁置起来很久的Oak，并且重新审视了那个用软件编写的试验平台，由于它是按照嵌入式系统硬件平台体系结构进行编写的，所以非常小，特别适用于网络上的传输系统，而Oak也是一种精简的语言，程序非常小，适合在网络上传输。Sun公司首先推出了可以嵌入网页并且可以随同网页在网络上传输的Applet（Applet是一种将小程序嵌入到网页中进行执行的技术），并将Oak更名为Java（在申请注册商标时，发现Oak已经被人使用了，再想了一系列名字之后，最终，使用了提议者在喝一杯Java咖啡时无意提到的Java词语）。5月23日，Sun公司在Sun world会议上正式发布Java和HotJava浏览器。IBM、Apple、DEC、Adobe、HP、Oracle、Netscape和微软等各大公司都纷纷停止了自己的相关开发项目，竞相购买了Java使用许可证，并为自己的产品开发了相应的Java平台。 [9-10] 1996年1月，Sun公司发布了Java的第一个开发工具包（JDK 1.0），这是Java发展历程中的重要里程碑，标志着Java成为一种独立的开发工具。9月，约8.3万个网页应用了Java技术来制作。10月，Sun公司发布了Java平台的第一个即时（JIT）编译器。1997年2月，JDK 1.1面世，在随后的3周时间里，达到了22万次的下载量。4月2日，Java One会议召开，参会者逾一万人，创当时全球同类会议规模之纪录。9月，Java Developer Connection社区成员超过10万。1998年12月8日，第二代Java平台的企业版J2EE发布。1999年6月，Sun公司发布了第二代Java平台（简称为Java2）的3个版本：J2ME（Java2 Micro Edition，Java2平台的微型版），应用于移动、无线及有限资源的环境；J2SE（Java 2 Standard Edition，Java 2平台的标准版），应用于桌面环境；J2EE（Java 2Enterprise Edition，Java 2平台的企业版），应用于基于Java的应用服务器。Java 2平台的发布，是Java发展过程中最重要的一个里程碑，标志着Java的应用开始普及。1999年4月27日，HotSpot虚拟机发布。HotSpot虚拟机发布时是作为JDK 1.2的附加程序提供的，后来它成为了JDK 1.3及之后所有版本的Sun JDK的默认虚拟机 [11]  。Java创始人之一：詹姆斯·高斯林2000年5月，JDK1.3、JDK1.4和J2SE1.3相继发布，几周后其获得了Apple公司Mac OS X的工业标准的支持。2001年9月24日，J2EE1.3发布。2002年2月26日，J2SE1.4发布。自此Java的计算能力有了大幅提升，与J2SE1.3相比，其多了近62%的类和接口。在这些新特性当中，还提供了广泛的XML支持、安全套接字（Socket）支持（通过SSL与TLS协议）、全新的I/OAPI、正则表达式、日志与断言。2004年9月30日，J2SE1.5发布，成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE 1.5更名为Java SE 5.0（内部版本号1.5.0），代号为“Tiger”，Tiger包含了从1996年发布1.0版本以来的最重大的更新，其中包括泛型支持、基本类型的自动装箱、改进的循环、枚举类型、格式化I/O及可变参数。2005年6月，在Java One大会上，Sun公司发布了Java SE 6。此时，Java的各种版本已经更名，已取消其中的数字2，如J2EE更名为JavaEE，J2SE更名为JavaSE，J2ME更名为JavaME。 [12] 2006年11月13日，Java技术的发明者Sun公司宣布，将Java技术作为免费软件对外发布。Sun公司正式发布的有关Java平台标准版的第一批源代码，以及Java迷你版的可执行源代码。从2007年3月起，全世界所有的开发人员均可对Java源代码进行修改 [13]  。2009年，甲骨文公司宣布收购Sun [14]  。2010年，Java编程语言的共同创始人之一詹姆斯·高斯林从Oracle公司辞职。2011年，甲骨文公司举行了全球性的活动，以庆祝Java7的推出，随后Java7正式发布。2014年，甲骨文公司发布了Java8正式版 [15]  。', '詹姆斯·高斯林', '10', 8997, '2021-01-03 12:57:29', '2021-01-21 08:01:24', 0, 1);
INSERT INTO `sys_book` VALUES (16, 789789, 'C#开发', '10', '2020-12-27 14:02:22', '/upload/acffdb27-93c1-4db1-9c66-47a892de6371.jpeg', 'C#开发.jpeg', '<div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">历史发展</h2></div><div class=\"para\" label-module=\"para\">C#是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BE%AE%E8%BD%AF\">微软</a>公司在2000年6月发布的一种新的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80\">编程语言</a>，主要由<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%AE%89%E5%BE%B7%E6%96%AF%C2%B7%E6%B5%B7%E5%B0%94%E6%96%AF%E4%BC%AF%E6%A0%BC\">安德斯·海尔斯伯格</a>（Anders Hejlsberg）主持开发，它是第一个面向组件的编程语言，其源码会编译成msil再运行。它借鉴了<a target=\"_blank\" href=\"https://baike.baidu.com/item/Delphi\">Delphi</a>的一个特点，与COM(<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%84%E4%BB%B6%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B\">组件对象模型</a>)是直接集成的，并且新增了许多功能及语法，而且它是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BE%AE%E8%BD%AF\">微软</a>公司.NET&nbsp;<a target=\"_blank\" href=\"https://baike.baidu.com/item/windows\">windows</a>网络<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%A1%86%E6%9E%B6\">框架</a>的主角。<span class=\"sup--normal\" data-sup=\"3\" data-ctrmap=\":3,\">&nbsp;[3]</span><a class=\"sup-anchor\" name=\"ref_[3]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">C#读作C Sharp。最初它有个更酷的名字，叫做<a target=\"_blank\" href=\"https://baike.baidu.com/item/COOL\">COOL</a>。微软从1998年12月开始了COOL项目，直到2000年2月，COOL被正式更名为C#。在1998年，<a target=\"_blank\" href=\"https://baike.baidu.com/item/Delphi\">Delphi</a>语言的设计者Hejlsberg带领着<a target=\"_blank\" href=\"https://baike.baidu.com/item/Microsoft\">Microsoft</a>公司的开发团队，开始了第一个版本C#语言的设计。在2000年9月，国际信息和通信系统标准化组织为C#语言定义了一个Microsoft公司建议的标准。最终C#语言在2001年得以正式发布。</div><div class=\"para\" label-module=\"para\">原<a target=\"_blank\" href=\"https://baike.baidu.com/item/Borland\">Borland</a>公司的首席研发设计师安德斯·海尔斯伯格（An<div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/c%23/195147/0/060828381f30e92413a0d9d44c086e061c95f7cb?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"c#\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/060828381f30e92413a0d9d44c086e061c95f7cb?x-bce-process=image/resize,m_lfit,w_220,h_220,limit_1\" alt=\"c#\"></a><span class=\"description\">c#</span></div>ders Hejlsberg）在微软开发了Visual J++ 1.0，很快的<a target=\"_blank\" href=\"https://baike.baidu.com/item/Visual%20J%2B%2B\">Visual J++</a>由1.1版本升级到6.0版。<a target=\"_blank\" href=\"https://baike.baidu.com/item/SUN\">SUN</a>公司认为Visual J++ 违反了Java开发平台的中立性，对微软提出了诉讼。2000年6月26日微软在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A5%A5%E5%85%B0%E5%A4%9A\">奥兰多</a>举行的“职业开发人员技术大会”（PDC 2000）上，发表新的语言C#。C#语言取代了<a target=\"_blank\" href=\"https://baike.baidu.com/item/Visual%20J%2B%2B\">Visual J++</a>，语言本身深受&nbsp;<a target=\"_blank\" href=\"https://baike.baidu.com/item/Java\">Java</a>、C 和 C++ 的影响。<span class=\"sup--normal\" data-sup=\"4\" data-ctrmap=\":4,\">&nbsp;[4]</span><a class=\"sup-anchor\" name=\"ref_[4]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">C#是兼顾<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F\">系统</a>开发和应用开发的最佳实用语言，并且很有可能成为编程语言历史上的第一个“全能”型语言。看过这篇<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%AE%80%E5%8F%B2\">简史</a>，不要把C#看成年轻后生了——只要是“<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%A9%AC%E6%8B%89%E5%A4%9A%E7%BA%B3\">马拉多纳</a>”，就早晚当“球王”。C#1.0，纯粹的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\">面向对象</a>。<span class=\"sup--normal\" data-sup=\"5\" data-ctrmap=\":5,\">&nbsp;[5]</span><a class=\"sup-anchor\" name=\"ref_[5]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">1998年底，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BE%AE%E8%BD%AF\">微软</a>正在忙于新一代COM的设计工作，COM一直是组件化开发中非常成功的一种技术；但由于它仅提供了二进制层面上的统一，因此无法将类型信息和用于支持基础平台和开发工具的信息放到组件中，Java逐步走向成熟。微软学习Java的做法，将虚拟机的概念引入到了COM领域；同时，微软提出了“元数据”的概念，用于描述组件的类型信息和工具支持信息，并决定将其放入到组件当中。<span class=\"sup--normal\" data-sup=\"6\" data-ctrmap=\":6,\">&nbsp;[6]</span><a class=\"sup-anchor\" name=\"ref_[6]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">1998年12月，微软启动了一个全新的语言项目——COOL，这是一款专门为CLR设计的纯面向对象的语言，也正是本文的主角——C#的前身。<span class=\"sup--normal\" data-sup=\"7\" data-ctrmap=\":7,\">&nbsp;[7]</span><a class=\"sup-anchor\" name=\"ref_[7]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">1999年7月份，微软完成了COOL语言的一个内部版本。<span class=\"sup--normal\" data-sup=\"7\" data-ctrmap=\":7,\">&nbsp;[7]</span><a class=\"sup-anchor\" name=\"ref_[7]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">2000年2月份，微软才正式将COOL语言更名为C#。据说起这个名字是因为C#开发小组的人很讨厌搜索引擎，因此把大部分<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2\">搜索</a>引擎无法识别的“#”字符作为该语言名字的一部分；还有一种说法是在音乐当中“#”是升调记号，表达了微软希望它在C的基础上更上一层楼的美好愿望——当然这些都只是传说，无从考证。又是历经了一系列的修改，微软终于在2000年7月发布了C#语言的第一个<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%A2%84%E8%A7%88%E7%89%88\">预览版</a>。<span class=\"sup--normal\" data-sup=\"7\" data-ctrmap=\":7,\">&nbsp;[7]</span><a class=\"sup-anchor\" name=\"ref_[7]_6590\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"2\" class=\"lemma-anchor para-title\"></a><a name=\"sub6590_2\" class=\"lemma-anchor \"></a><a name=\"设计目标\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">设计目标</h2></div><div class=\"para\" label-module=\"para\">C#旨在设计成为一种“简单、现代、通用”，以及面向对象的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\">程序设计</a>语言，此种语言的实现，应提供对于以下软件工程要素的支持：强类型检查、数组维度检查、未初始化的变量引用检测、自动垃圾收集（Garbage Collection，指一种自动<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E9%87%8A%E6%94%BE\">内存释放</a>技术）。软件必须做到强大、持久，并具有较强的编程生产力。此种语言为在分布式环境中的开发提供适用的组件开发应用。</div><div class=\"para\" label-module=\"para\">为使程序员容易迁移到这种语言，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%BA%90%E4%BB%A3%E7%A0%81\">源代码</a>的可移植性十分重要，尤其是对于那些已熟悉C和C++的程序员而言。对国际化的支持非常重要。C#适合为独立和嵌入式的系统编写程序，从使用复杂操作系统的大型系统到特定应用的小型系统均适用。<span class=\"sup--normal\" data-sup=\"8-9\" data-ctrmap=\":8,:9,\">&nbsp;[8-9]</span><a class=\"sup-anchor\" name=\"ref_[8-9]_6590\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"3\" class=\"lemma-anchor para-title\"></a><a name=\"sub6590_3\" class=\"lemma-anchor \"></a><a name=\"语言结构\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">语言结构</h2></div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B1%BB/6824577\" data-lemmaid=\"6824577\"><span>类</span></a>：一个基本的C#类中包含<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE\">数据</a>成员、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B1%9E%E6%80%A7\">属性</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9E%84%E9%80%A0%E5%99%A8\">构造器</a>和方法。属性可以是静态或实例成员。在C#中类的声明与<a target=\"_blank\" href=\"https://baike.baidu.com/item/C%2B%2B\">C++</a>和Java很相似。但是，不像C++，C#<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E4%BD%93\">结构体</a>与<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B1%BB\">类</a>是不支持继承多个父类。但是，与Java相同的是，一个结构体可以实现接口（interface）。Java的关键字<a target=\"_blank\" href=\"https://baike.baidu.com/item/import\">import</a>已经被替换成<a target=\"_blank\" href=\"https://baike.baidu.com/item/using\">using</a>，它起到了同样的作用。</div><div class=\"para\" label-module=\"para\">类可以是抽象的和不可继承的：一个被申明成<a target=\"_blank\" href=\"https://baike.baidu.com/item/abstract\">abstract</a>的类不能被实例化，它只能被用做一个基类，C#<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%85%B3%E9%94%AE%E5%AD%97/7105697\" data-lemmaid=\"7105697\">关键字</a>lock就像Java关键字<a target=\"_blank\" href=\"https://baike.baidu.com/item/final\">final</a>，它申明一个类不是抽象的，但是它也不能被用做另一个类的基类接口：就象在Java中一样，一个接口是一组方法集合的抽象定义。当一个类或结构体实现一个接口的时候，它必须实现这个接口中定义的所有方法。一个单一的类可以实现几个接口，也许以后会出现一些微妙的差别，但是这个特点看起来与Java相比没有变化。<span class=\"sup--normal\" data-sup=\"10\" data-ctrmap=\":10,\">&nbsp;[10]</span><a class=\"sup-anchor\" name=\"ref_[10]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97\"><span>布尔运算</span></a>：条件表达式的结果是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B8%83%E5%B0%94\">布尔</a>数据类型，布尔数据类型是这种语言中独立的一种数据类型，从布尔类型到其他类型没有直接的转换过程，布尔常量true和false是C#中的关键字。错误处理：如Java中那样，通过抛出和捕捉异常对象来管理错误<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%84%E7%90%86\">处理</a>过程。<span class=\"sup--normal\" data-sup=\"11\" data-ctrmap=\":11,\">&nbsp;[11]</span><a class=\"sup-anchor\" name=\"ref_[11]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86\"><span>内存管理</span></a>：由<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BA%95%E5%B1%82\">底层</a>.NET框架进行自动内存垃圾回收。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3\"><span>接口</span></a><span>：</span>是其他类型为确保它们支持某些操作而实现的引用类型。接口从不直接创建而且没有实际的表示形式，其他类型必须转换为接口类型。</div><div class=\"para\" label-module=\"para\">一个接口定义一个协定。实现接口的类或结构必须遵守其协定。<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3\">接口</a>可以包含方法、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B1%9E%E6%80%A7\">属性</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B4%A2%E5%BC%95%E5%99%A8\">索引器</a>和事件作为成员。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BC%BA%E7%B1%BB%E5%9E%8B\"><span>强类型</span></a>：C#是一个强类型的语言，它的数值类型有一些可以进行隐式转换，其他的必须显式转换，隐式转换的类型只能是长度短的类型转换成长的类型，int可以转换成<a target=\"_blank\" href=\"https://baike.baidu.com/item/long\">long</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/float\">float</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/double\">double</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/decimal\">decimal</a>，反之必须显式的转换。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BC%96%E8%AF%91\"><span>编译</span></a>：程序直接编译成标准的二进制可执行形式.但C#的源程序并不是被编译成二进制可执行形式，而是一种中间语言(IL)，类似于JAVA字节码。如果前面的Hello World程序被保存成一个</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/c%23/195147/0/7aad4ae7d9d75217b93820e5?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"c#与asp.net权威指南教程\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/0dd7912397dda144423224bbb2b7d0a20cf48684?x-bce-process=image/resize,m_lfit,w_220,h_220,limit_1\" alt=\"c#与asp.net权威指南教程\"></a><span class=\"description\">c#与asp.net权威指南教程&nbsp;<span>[12]</span><a name=\"ref_[12]_\"></a></span></div>文本文件并被命名为Hello.cs，它将被编译成命名Hello.exe的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F\">可执行程序</a>。</div><div class=\"para\" label-module=\"para\">C#程序不能直接编译成标准的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6\">二进制</a>可执行形式，与 Java 类似，它被编译成为中间代码(Microsoft Intermediate Language)，然后通过 .NET Framework 的虚拟机——被称之为通用语言执行层(Common Language Runtime, CLR)——执行。</div><div class=\"para\" label-module=\"para\">一个C#的结构体与C++的结构体是相似的,因为它能够包含数据声明和方法.但是,不象C++,C#结构体与类是不同的而且不支持继承.但是,与Java相同的是,一个结构体可以实现接口。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%A2%84%E7%BC%96%E8%AF%91\"><span>预编译</span></a>：C# 中存在<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%A2%84%E7%BC%96%E8%AF%91\">预编译</a>指令支持条件<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BC%96%E8%AF%91\">编译</a>,警告，错误报告和编译行控制.可用的预编译指令有：#define，#undef，#if，#elif，#else，#endif，#warning，#error，#line。</div><div class=\"para\" label-module=\"para\">没有了#include伪指令，无法再用#define 语句对符号赋值,所以就不存在源代码替换的概念--这些符号只能用在#if和#elif伪指令里.在#line伪指令里的数字（和可选的名字）能够修改行号还有#warning和#error输出结果的文件名。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%AC%A6%E9%87%8D%E8%BD%BD\"><span>操作符重载</span></a><span>：</span>一些操作符能够被<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%87%8D%E8%BD%BD\">重载</a>，而另一些则不能.特别的是，没有一个赋值运算符能够被重载.能够被重载的单目操作符是：+ - ! ~ ++ -- true false　能够被重载的二元运算符是：+、 - 、*、 /、 %、 &amp;、 |、 ^、 &lt;&lt; 、&gt;&gt;、 ==、 !=、 &gt;、 &lt; 、&gt;= 、&lt;=。<span class=\"sup--normal\" data-sup=\"13\" data-ctrmap=\":13,\">&nbsp;[13]</span><a class=\"sup-anchor\" name=\"ref_[13]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%B1%BB%E5%9E%8B\"><span>类型</span></a><span>：</span>C# 中的类型一共分为两类，一类是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%80%BC%E7%B1%BB%E5%9E%8B\">值类型</a>(Value Type)，一类是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B\">引用类型</a>(Reference Type)。值类型和引用类型是以它们在计算机内存中是如何被分配的来划分的。值类型包括 结构和枚举，引用类型包括类、接口、委托 等。还有一种特殊的值类型，称为简单类型(Simple Type)，比如 byte，int等，这些简单类型实际上是FCL类库类型的别名，比如声明一个int类型，实际上是声明一个System. Int32结构类型。因此，在 Int32类型中定义的操作，都可以应用在int类型上，比如 “123.Equals(2)”。</div><div class=\"para\" label-module=\"para\">所有的值类型都隐式地继承自System.ValueType类型(注意System.ValueType本身是一个类类型)，System.ValueType和所有的引用类型都 继承自 System.Object基类。不能显式地让结构继承一个类，因为C#不支持多重继承，而结构已经隐式继承自ValueType。</div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/NOTE\"><span>NOTE</span></a>：<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A0%86%E6%A0%88\">堆栈</a>(stack)是一种后进先出的数据结构，在内存中，变量会被分配在堆栈上来进行操作。堆(heap)是用于为类型实例(对象)分配空间的内存区域，在堆上创建一个对象，会将对象的地址传给堆栈上的变量(反过来叫变量指向此对象，或者变量引用此对象)。<span class=\"sup--normal\" data-sup=\"14\" data-ctrmap=\":14,\">&nbsp;[14]</span><a class=\"sup-anchor\" name=\"ref_[14]_6590\">&nbsp;</a></div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81\"><span>中间代码</span></a><span>：</span>微软在用户选择何时<a target=\"_blank\" href=\"https://baike.baidu.com/item/MSIL\">MSIL</a>应该编译成机器码的时候<div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/c%23/195147/0/4a36acaf2edda3cc7b23fcc501e93901203f920b?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"C#开发QTP脚本标志\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/4a36acaf2edda3cc7b23fcc501e93901203f920b?x-bce-process=image/resize,m_lfit,w_220,h_220,limit_1\" alt=\"C#开发QTP脚本标志\"></a><span class=\"description\">C#开发QTP脚本标志&nbsp;<span>[15]</span><a name=\"ref_[15]_\"></a></span></div>是留了很大的余地.微软公司很小心的声称MSIL不是解释性的，而是被编译成了机器码.它也明白许多--如果不是大多数的话--程序员认为Java程序要不可避免的比C编写的任何东西都要慢.而这种实现方式决定了基于MSIL的程序（指的是用C#，<a target=\"_blank\" href=\"https://baike.baidu.com/item/Visual%20Basic\">Visual Basic</a>,\"Managed C++\"--C++的一个符合CLS的版本--等语言编写的程序）将在性能上超过\"解释性的\"Java代码.当然，这一点还需要得到事实证明，因为C#和其他生成MSIL的编译器还没有发布.但是Java JIT编译器的普遍存在使得Java和C#在性能上相对相同.象\"C#是编译语言而Java是解释性的，\"之类的声明只是商业技巧.Java的中间代码和<a target=\"_blank\" href=\"https://baike.baidu.com/item/MSIL\">MSIL</a>都是中间的汇编形式的语言，它们在运行时或其它的时候被编译成机器代码。<span class=\"sup--normal\" data-sup=\"16\" data-ctrmap=\":16,\">&nbsp;[16]</span></div>', '历史发展C#是微软公司在2000年6月发布的一种新的编程语言，主要由安德斯·海尔斯伯格（Anders Hejlsberg）主持开发，它是第一个面向组件的编程语言，其源码会编译成msil再运行。它借鉴了Delphi的一个特点，与COM(组件对象模型)是直接集成的，并且新增了许多功能及语法，而且它是微软公司.NET windows网络框架的主角。 [3] C#读作C Sharp。最初它有个更酷的名字，叫做COOL。微软从1998年12月开始了COOL项目，直到2000年2月，COOL被正式更名为C#。在1998年，Delphi语言的设计者Hejlsberg带领着Microsoft公司的开发团队，开始了第一个版本C#语言的设计。在2000年9月，国际信息和通信系统标准化组织为C#语言定义了一个Microsoft公司建议的标准。最终C#语言在2001年得以正式发布。原Borland公司的首席研发设计师安德斯·海尔斯伯格（Anc#ders Hejlsberg）在微软开发了Visual J++ 1.0，很快的Visual J++由1.1版本升级到6.0版。SUN公司认为Visual J++ 违反了Java开发平台的中立性，对微软提出了诉讼。2000年6月26日微软在奥兰多举行的“职业开发人员技术大会”（PDC 2000）上，发表新的语言C#。C#语言取代了Visual J++，语言本身深受 Java、C 和 C++ 的影响。 [4] C#是兼顾系统开发和应用开发的最佳实用语言，并且很有可能成为编程语言历史上的第一个“全能”型语言。看过这篇简史，不要把C#看成年轻后生了——只要是“马拉多纳”，就早晚当“球王”。C#1.0，纯粹的面向对象。 [5] 1998年底，微软正在忙于新一代COM的设计工作，COM一直是组件化开发中非常成功的一种技术；但由于它仅提供了二进制层面上的统一，因此无法将类型信息和用于支持基础平台和开发工具的信息放到组件中，Java逐步走向成熟。微软学习Java的做法，将虚拟机的概念引入到了COM领域；同时，微软提出了“元数据”的概念，用于描述组件的类型信息和工具支持信息，并决定将其放入到组件当中。 [6] 1998年12月，微软启动了一个全新的语言项目——COOL，这是一款专门为CLR设计的纯面向对象的语言，也正是本文的主角——C#的前身。 [7] 1999年7月份，微软完成了COOL语言的一个内部版本。 [7] 2000年2月份，微软才正式将COOL语言更名为C#。据说起这个名字是因为C#开发小组的人很讨厌搜索引擎，因此把大部分搜索引擎无法识别的“#”字符作为该语言名字的一部分；还有一种说法是在音乐当中“#”是升调记号，表达了微软希望它在C的基础上更上一层楼的美好愿望——当然这些都只是传说，无从考证。又是历经了一系列的修改，微软终于在2000年7月发布了C#语言的第一个预览版。 [7] 设计目标C#旨在设计成为一种“简单、现代、通用”，以及面向对象的程序设计语言，此种语言的实现，应提供对于以下软件工程要素的支持：强类型检查、数组维度检查、未初始化的变量引用检测、自动垃圾收集（Garbage Collection，指一种自动内存释放技术）。软件必须做到强大、持久，并具有较强的编程生产力。此种语言为在分布式环境中的开发提供适用的组件开发应用。为使程序员容易迁移到这种语言，源代码的可移植性十分重要，尤其是对于那些已熟悉C和C++的程序员而言。对国际化的支持非常重要。C#适合为独立和嵌入式的系统编写程序，从使用复杂操作系统的大型系统到特定应用的小型系统均适用。 [8-9] 语言结构类：一个基本的C#类中包含数据成员、属性、构造器和方法。属性可以是静态或实例成员。在C#中类的声明与C++和Java很相似。但是，不像C++，C#结构体与类是不支持继承多个父类。但是，与Java相同的是，一个结构体可以实现接口（interface）。Java的关键字import已经被替换成using，它起到了同样的作用。类可以是抽象的和不可继承的：一个被申明成abstract的类不能被实例化，它只能被用做一个基类，C#关键字lock就像Java关键字final，它申明一个类不是抽象的，但是它也不能被用做另一个类的基类接口：就象在Java中一样，一个接口是一组方法集合的抽象定义。当一个类或结构体实现一个接口的时候，它必须实现这个接口中定义的所有方法。一个单一的类可以实现几个接口，也许以后会出现一些微妙的差别，但是这个特点看起来与Java相比没有变化。 [10] 布尔运算：条件表达式的结果是布尔数据类型，布尔数据类型是这种语言中独立的一种数据类型，从布尔类型到其他类型没有直接的转换过程，布尔常量true和false是C#中的关键字。错误处理：如Java中那样，通过抛出和捕捉异常对象来管理错误处理过程。 [11] 内存管理：由底层.NET框架进行自动内存垃圾回收。接口：是其他类型为确保它们支持某些操作而实现的引用类型。接口从不直接创建而且没有实际的表示形式，其他类型必须转换为接口类型。一个接口定义一个协定。实现接口的类或结构必须遵守其协定。接口可以包含方法、属性、索引器和事件作为成员。强类型：C#是一个强类型的语言，它的数值类型有一些可以进行隐式转换，其他的必须显式转换，隐式转换的类型只能是长度短的类型转换成长的类型，int可以转换成long、float、double、decimal，反之必须显式的转换。编译：程序直接编译成标准的二进制可执行形式.但C#的源程序并不是被编译成二进制可执行形式，而是一种中间语言(IL)，类似于JAVA字节码。如果前面的Hello World程序被保存成一个c#与asp.net权威指南教程 [12]文本文件并被命名为Hello.cs，它将被编译成命名Hello.exe的可执行程序。C#程序不能直接编译成标准的二进制可执行形式，与 Java 类似，它被编译成为中间代码(Microsoft Intermediate Language)，然后通过 .NET Framework 的虚拟机——被称之为通用语言执行层(Common Language Runtime, CLR)——执行。一个C#的结构体与C++的结构体是相似的,因为它能够包含数据声明和方法.但是,不象C++,C#结构体与类是不同的而且不支持继承.但是,与Java相同的是,一个结构体可以实现接口。预编译：C# 中存在预编译指令支持条件编译,警告，错误报告和编译行控制.可用的预编译指令有：#define，#undef，#if，#elif，#else，#endif，#warning，#error，#line。没有了#include伪指令，无法再用#define 语句对符号赋值,所以就不存在源代码替换的概念--这些符号只能用在#if和#elif伪指令里.在#line伪指令里的数字（和可选的名字）能够修改行号还有#warning和#error输出结果的文件名。操作符重载：一些操作符能够被重载，而另一些则不能.特别的是，没有一个赋值运算符能够被重载.能够被重载的单目操作符是：+ - ! ~ ++ -- true false　能够被重载的二元运算符是：+、 - 、*、 /、 %、 &、 |、 ^、 << 、>>、 ==、 !=、 >、 < 、>= 、<=。 [13] 类型：C# 中的类型一共分为两类，一类是值类型(Value Type)，一类是引用类型(Reference Type)。值类型和引用类型是以它们在计算机内存中是如何被分配的来划分的。值类型包括 结构和枚举，引用类型包括类、接口、委托 等。还有一种特殊的值类型，称为简单类型(Simple Type)，比如 byte，int等，这些简单类型实际上是FCL类库类型的别名，比如声明一个int类型，实际上是声明一个System. Int32结构类型。因此，在 Int32类型中定义的操作，都可以应用在int类型上，比如 “123.Equals(2)”。所有的值类型都隐式地继承自System.ValueType类型(注意System.ValueType本身是一个类类型)，System.ValueType和所有的引用类型都 继承自 System.Object基类。不能显式地让结构继承一个类，因为C#不支持多重继承，而结构已经隐式继承自ValueType。NOTE：堆栈(stack)是一种后进先出的数据结构，在内存中，变量会被分配在堆栈上来进行操作。堆(heap)是用于为类型实例(对象)分配空间的内存区域，在堆上创建一个对象，会将对象的地址传给堆栈上的变量(反过来叫变量指向此对象，或者变量引用此对象)。 [14] 中间代码：微软在用户选择何时MSIL应该编译成机器码的时候C#开发QTP脚本标志 [15]是留了很大的余地.微软公司很小心的声称MSIL不是解释性的，而是被编译成了机器码.它也明白许多--如果不是大多数的话--程序员认为Java程序要不可避免的比C编写的任何东西都要慢.而这种实现方式决定了基于MSIL的程序（指的是用C#，Visual Basic,\"Managed C++\"--C++的一个符合CLS的版本--等语言编写的程序）将在性能上超过\"解释性的\"Java代码.当然，这一点还需要得到事实证明，因为C#和其他生成MSIL的编译器还没有发布.但是Java JIT编译器的普遍存在使得Java和C#在性能上相对相同.象\"C#是编译语言而Java是解释性的，\"之类的声明只是商业技巧.Java的中间代码和MSIL都是中间的汇编形式的语言，它们在运行时或其它的时候被编译成机器代码。 [16]', '微软', '10', 3540, '2021-01-03 13:01:30', '2021-01-21 08:01:20', 0, 1);
INSERT INTO `sys_book` VALUES (17, 6565, 'C++开发', '21', '2021-01-03 13:01:53', '/upload/d94fbe2d-2de4-44eb-aa41-df4c6538c19a.jpeg', 'C加加.jpeg', '<div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">发展历程</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"1\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/C%2B%2B/99272/0/0df431adcbef76099c6c392726dda3cc7cd99e27?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/0df431adcbef76099c6c392726dda3cc7cd99e27?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"\"></a></div>世界上第一种计算机高级语言是诞生于1954年的<a target=\"_blank\" href=\"https://baike.baidu.com/item/FORTRAN%E8%AF%AD%E8%A8%80\">FORTRAN语言</a>。之后出现了多种计算机高级语言。1970年，AT&amp;T的Bell实验室的D.Ritchie和K.Thompson共同发明了C语言。研制C语言的初衷是用它编写UNIX系统程序，因此，它实际上是UNIX的“副产品”。它充分结合了汇编语言和高级语言的优点，高效而灵活，又容易移植。</div><div class=\"para\" label-module=\"para\">1971年，瑞士联邦技术学院N.Wirth教授发明了Pascal语言。Pascal语言语法严谨，层次分明，程序易写，具有很强的可读性，是第一个结构化的编程语言。</div><div class=\"para\" label-module=\"para\">20世纪70年代中期，Bjarne Stroustrup在剑桥大学计算机中心工作。他使用过Simula和ALGOL，接触过C。他对Simula的类体系感受颇深，对ALGOL的结构也很有研究，深知运行效率的意义。既要编程简单、正确可靠，又要运行高效、可移植，是Bjarne Stroustrup的初衷。以C为背景，以Simula思想为基础，正好符合他的设想。1979年，Bjame Sgoustrup到了Bell实验室，开始从事将C改良为带类的C（<i>C with classes</i>）的工作。1983年该语言被正式命名为C++。自从C++被发明以来，它经历了3次主要的修订，每一次修订都为C++增加了新的特征并作了一些修改。第一次修订是在1985年，第二次修订是在1990年，而第三次修订发生在c++的标准化过程中。在20世纪90年代早期，人们开始为C++建立一个标准，并成立了一个ANSI和ISO（<i>Intemational Standards Organization</i>）国际标准化组织的联合标准化委员会。该委员会在1994年1月25曰提出了第一个标准化草案。在这个草案中，委员会在保持Stroustrup最初定义的所有特征的同时，还增加了一些新的特征。</div><div class=\"para\" label-module=\"para\">在完成C++标准化的第一个草案后不久，发生了一件事情使得C++标准被极大地扩展了：Alexander stepanov创建了标准模板库（Standard Template Library，STL）。STL不仅功能强大，同时非常优雅，然而，它也是非常庞大的。在通过了第一个草案之后，委员会投票并通过了将STL包含到C++标准中的提议。STL对C++的扩展超出了C++的最初定义范围。虽然在标准中增加STL是个很重要的决定，但也因此延缓了C++标准化的进程。</div><div class=\"para\" label-module=\"para\">委员会于1997年11月14日通过了该标准的最终草案，1998年，C++的ANSI/IS0标准被投入使用。通常，这个版本的C++被认为是标准C++。所有的主流C++编译器都支持这个版本的C++，包括微软的Visual C++和Borland公司的C++Builder。<span class=\"sup--normal\" data-sup=\"3-6\" data-ctrmap=\":3,:4,:5,:6,\">&nbsp;[3-6]</span><a class=\"sup-anchor\" name=\"ref_[3-6]_824\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"2\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_2\" class=\"lemma-anchor \"></a><a name=\"编程开发\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">编程开发</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"2\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"anchor-list \"><a name=\"2_1\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_2_1\" class=\"lemma-anchor \"></a><a name=\"集成开发环境（IDE）\" class=\"lemma-anchor \"></a><a name=\"2-1\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">集成开发环境（IDE）</h3></div><div class=\"para\" label-module=\"para\"><a class=\"lemma-album layout-right nslog:10000206\" title=\"C++代码\" href=\"https://baike.baidu.com/pic/C%2B%2B/99272/13974295/0dd7912397dda1441319f898bfb7d0a20cf4868c?fr=lemma&amp;ct=cover\" target=\"_blank\" nslog-type=\"10000206\"><div class=\"album-wrap\"><img class=\"picture\" alt=\"C++代码\" src=\"https://bkimg.cdn.bcebos.com/pic/0dd7912397dda1441319f898bfb7d0a20cf4868c?x-bce-process=image/resize,m_lfit,w_220,limit_1\"></div><div class=\"description\">C++代码<span class=\"number\">(2张)</span></div><div class=\"albumBg\"></div></a></div><div class=\"para\" label-module=\"para\">Visual Studio (Visual C++)</div><div class=\"para\" label-module=\"para\">Dev C++</div><div class=\"para\" label-module=\"para\">C++ Builder</div><div class=\"para\" label-module=\"para\">kDevelop</div><div class=\"para\" label-module=\"para\">Anjuta</div><div class=\"para\" label-module=\"para\">Code::Blocks：开放源码的全功能的跨平台C/C++集成开发环境<span class=\"sup--normal\" data-sup=\"7\" data-ctrmap=\":7,\">&nbsp;[7]</span><a class=\"sup-anchor\" name=\"ref_[7]_824\">&nbsp;</a>&nbsp;。</div><div class=\"para\" label-module=\"para\">Visual Mingw</div><div class=\"para\" label-module=\"para\">Ideone</div><div class=\"para\" label-module=\"para\">Eclipse CDT</div><div class=\"para\" label-module=\"para\">Compilr</div><div class=\"para\" label-module=\"para\">Code Lite</div><div class=\"para\" label-module=\"para\">Netbeans C++<span class=\"sup--normal\" data-sup=\"8\" data-ctrmap=\":8,\">&nbsp;[8]</span><a class=\"sup-anchor\" name=\"ref_[8]_824\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">集成开发环境（<i>IDE</i>），功能齐全，调试功能很强，程序编好后，可以立刻在环境中调试以获得初步测试结果，然后，可以方便地做成beta版形式，拿到实际环境中进一步测试，最后做成软件发行版。<span class=\"sup--normal\" data-sup=\"9\" data-ctrmap=\":9,\">&nbsp;[9]</span><a class=\"sup-anchor\" name=\"ref_[9]_824\">&nbsp;</a><a name=\"ref_9\"></a></div><div class=\"anchor-list \"><a name=\"2_2\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_2_2\" class=\"lemma-anchor \"></a><a name=\"编译器\" class=\"lemma-anchor \"></a><a name=\"2-2\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">编译器</h3></div><div class=\"para\" label-module=\"para\">Ultimate++</div><div class=\"para\" label-module=\"para\">Digital Mars</div><div class=\"para\" label-module=\"para\">C-Free</div><div class=\"para\" label-module=\"para\">MinGW</div><div class=\"para\" label-module=\"para\">Tiny C Compiler<span class=\"sup--normal\" data-sup=\"8\" data-ctrmap=\":8,\">&nbsp;[8]</span><a class=\"sup-anchor\" name=\"ref_[8]_824\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"3\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_3\" class=\"lemma-anchor \"></a><a name=\"语言特点\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">语言特点</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"3\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"anchor-list \"><a name=\"3_1\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_3_1\" class=\"lemma-anchor \"></a><a name=\"支持数据封装和数据隐藏\" class=\"lemma-anchor \"></a><a name=\"3-1\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">支持数据封装和数据隐藏</h3></div><div class=\"para\" label-module=\"para\">在C++中，类是支持数据封装的工具，对象则是数据封装的实现。C++通过建立用户定义类支持数据封装和数据隐藏。</div><div class=\"para\" label-module=\"para\">在面向对象的程序设计中，将数据和对该数据进行合法操作的函数封装在一起作为一个类的定义。对象被说明为具有一个给定类的变量。每个给定类的对象包含这个类所规定的若干私有成员、公有成员及保护成员。完好定义的类一旦建立，就可看成完全封装的实体，可以作为一个整体单元使用。类的实际内部工作隐藏起来，使用完好定义的类的用户不需要知道类是如何工作的，只要知道如何使用它即可。</div><div class=\"anchor-list \"><a name=\"3_2\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_3_2\" class=\"lemma-anchor \"></a><a name=\"支持继承和重用\" class=\"lemma-anchor \"></a><a name=\"3-2\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">支持继承和重用</h3></div><div class=\"para\" label-module=\"para\">在C++现有类的基础上可以声明新类型，这就是继承和重用的思想。通过继承和重用可以更有效地组织程序结构，明确类间关系，并且充分利用已有的类来完成更复杂、深入的开发。新定义的类为子类，成为派生类。它可以从父类那里继承所有非私有的属性和方法，作为自己的成员。</div><div class=\"anchor-list \"><a name=\"3_3\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_3_3\" class=\"lemma-anchor \"></a><a name=\"支持多态性\" class=\"lemma-anchor \"></a><a name=\"3-3\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">支持多态性</h3></div><div class=\"para\" label-module=\"para\">采用多态性为每个类指定表现行为。多态性形成由父类和它们的子类组成的一个树型结构。在这个树中的每个子类可以接收一个或多个具有相同名字的消息。当一个消息被这个树中一个类的一个对象接收时，这个对象动态地决定给予子类对象的消息的某种用法。多态性的这一特性允许使用高级抽象。</div><div class=\"para\" label-module=\"para\">继承性和多态性的组合，可以轻易地生成一系列虽然类似但独一无二的对象。由于继承性，这些对象共享许多相似的特征。由于多态性，一个对象可有独特的表现方式，而另一个对象有另一种表现方式。<span class=\"sup--normal\" data-sup=\"10\" data-ctrmap=\":10,\">&nbsp;[10]</span><a class=\"sup-anchor\" name=\"ref_[10]_824\">&nbsp;</a></div><div class=\"anchor-list \"><a name=\"4\" class=\"lemma-anchor para-title\"></a><a name=\"sub824_4\" class=\"lemma-anchor \"></a><a name=\"工作原理\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">工作原理</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"4\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"para\" label-module=\"para\">C++语言的程序因为要体现高性能，所以都是编译型的。但其开发环境，为了方便测试，将调试环境做成解释型的。即开发过程中，以解释型的逐条语句执行方式来进行调试，以编译型的脱离开发环境而启动运行的方式来生成程序最终的执行代码。<span class=\"sup--normal\" data-sup=\"9\" data-ctrmap=\":9,\">&nbsp;[9]</span><a class=\"sup-anchor\" name=\"ref_[9]_824\">&nbsp;</a><a name=\"ref_9\"></a></div><div class=\"para\" label-module=\"para\">生成程序是指将源码（<i>C++语句</i>）转换成一个可以运行的应用程序的过程。如果程序的编写是正确的，那么通常只需按一个功能键，即可搞定这个过程。该过程实际上分成两个步骤。</div><div class=\"para\" label-module=\"para\">第一步是对程序进行编译，这需要用到编译器（<i>compiler</i>）。编译器将C++语句转换成机器码(也称为目标码)；如果这个步骤成功，下一步就是对程序进行链接，这需要用到链接器（<i>linker</i>）。链接器将编译获得机器码与C++库中的代码进行合并。C++库包含了执行某些常见任务的函数（<i>“函数”是子程序的另一种称呼</i>）。例如，一个C++库中包含标准的平方根函数sqrt，所以不必亲自计算平方根。C++库中还包含一些子程序，它们把数据发送到显示器，并知道如何读写硬盘上的数据文件。</div>', '发展历程编辑世界上第一种计算机高级语言是诞生于1954年的FORTRAN语言。之后出现了多种计算机高级语言。1970年，AT&T的Bell实验室的D.Ritchie和K.Thompson共同发明了C语言。研制C语言的初衷是用它编写UNIX系统程序，因此，它实际上是UNIX的“副产品”。它充分结合了汇编语言和高级语言的优点，高效而灵活，又容易移植。1971年，瑞士联邦技术学院N.Wirth教授发明了Pascal语言。Pascal语言语法严谨，层次分明，程序易写，具有很强的可读性，是第一个结构化的编程语言。20世纪70年代中期，Bjarne Stroustrup在剑桥大学计算机中心工作。他使用过Simula和ALGOL，接触过C。他对Simula的类体系感受颇深，对ALGOL的结构也很有研究，深知运行效率的意义。既要编程简单、正确可靠，又要运行高效、可移植，是Bjarne Stroustrup的初衷。以C为背景，以Simula思想为基础，正好符合他的设想。1979年，Bjame Sgoustrup到了Bell实验室，开始从事将C改良为带类的C（C with classes）的工作。1983年该语言被正式命名为C++。自从C++被发明以来，它经历了3次主要的修订，每一次修订都为C++增加了新的特征并作了一些修改。第一次修订是在1985年，第二次修订是在1990年，而第三次修订发生在c++的标准化过程中。在20世纪90年代早期，人们开始为C++建立一个标准，并成立了一个ANSI和ISO（Intemational Standards Organization）国际标准化组织的联合标准化委员会。该委员会在1994年1月25曰提出了第一个标准化草案。在这个草案中，委员会在保持Stroustrup最初定义的所有特征的同时，还增加了一些新的特征。在完成C++标准化的第一个草案后不久，发生了一件事情使得C++标准被极大地扩展了：Alexander stepanov创建了标准模板库（Standard Template Library，STL）。STL不仅功能强大，同时非常优雅，然而，它也是非常庞大的。在通过了第一个草案之后，委员会投票并通过了将STL包含到C++标准中的提议。STL对C++的扩展超出了C++的最初定义范围。虽然在标准中增加STL是个很重要的决定，但也因此延缓了C++标准化的进程。委员会于1997年11月14日通过了该标准的最终草案，1998年，C++的ANSI/IS0标准被投入使用。通常，这个版本的C++被认为是标准C++。所有的主流C++编译器都支持这个版本的C++，包括微软的Visual C++和Borland公司的C++Builder。 [3-6] 编程开发编辑集成开发环境（IDE）C++代码(2张)Visual Studio (Visual C++)Dev C++C++ BuilderkDevelopAnjutaCode::Blocks：开放源码的全功能的跨平台C/C++集成开发环境 [7]  。Visual MingwIdeoneEclipse CDTCompilrCode LiteNetbeans C++ [8] 集成开发环境（IDE），功能齐全，调试功能很强，程序编好后，可以立刻在环境中调试以获得初步测试结果，然后，可以方便地做成beta版形式，拿到实际环境中进一步测试，最后做成软件发行版。 [9] 编译器Ultimate++Digital MarsC-FreeMinGWTiny C Compiler [8] 语言特点编辑支持数据封装和数据隐藏在C++中，类是支持数据封装的工具，对象则是数据封装的实现。C++通过建立用户定义类支持数据封装和数据隐藏。在面向对象的程序设计中，将数据和对该数据进行合法操作的函数封装在一起作为一个类的定义。对象被说明为具有一个给定类的变量。每个给定类的对象包含这个类所规定的若干私有成员、公有成员及保护成员。完好定义的类一旦建立，就可看成完全封装的实体，可以作为一个整体单元使用。类的实际内部工作隐藏起来，使用完好定义的类的用户不需要知道类是如何工作的，只要知道如何使用它即可。支持继承和重用在C++现有类的基础上可以声明新类型，这就是继承和重用的思想。通过继承和重用可以更有效地组织程序结构，明确类间关系，并且充分利用已有的类来完成更复杂、深入的开发。新定义的类为子类，成为派生类。它可以从父类那里继承所有非私有的属性和方法，作为自己的成员。支持多态性采用多态性为每个类指定表现行为。多态性形成由父类和它们的子类组成的一个树型结构。在这个树中的每个子类可以接收一个或多个具有相同名字的消息。当一个消息被这个树中一个类的一个对象接收时，这个对象动态地决定给予子类对象的消息的某种用法。多态性的这一特性允许使用高级抽象。继承性和多态性的组合，可以轻易地生成一系列虽然类似但独一无二的对象。由于继承性，这些对象共享许多相似的特征。由于多态性，一个对象可有独特的表现方式，而另一个对象有另一种表现方式。 [10] 工作原理编辑C++语言的程序因为要体现高性能，所以都是编译型的。但其开发环境，为了方便测试，将调试环境做成解释型的。即开发过程中，以解释型的逐条语句执行方式来进行调试，以编译型的脱离开发环境而启动运行的方式来生成程序最终的执行代码。 [9] 生成程序是指将源码（C++语句）转换成一个可以运行的应用程序的过程。如果程序的编写是正确的，那么通常只需按一个功能键，即可搞定这个过程。该过程实际上分成两个步骤。第一步是对程序进行编译，这需要用到编译器（compiler）。编译器将C++语句转换成机器码(也称为目标码)；如果这个步骤成功，下一步就是对程序进行链接，这需要用到链接器（linker）。链接器将编译获得机器码与C++库中的代码进行合并。C++库包含了执行某些常见任务的函数（“函数”是子程序的另一种称呼）。例如，一个C++库中包含标准的平方根函数sqrt，所以不必亲自计算平方根。C++库中还包含一些子程序，它们把数据发送到显示器，并知道如何读写硬盘上的数据文件。', '爱迪生', '10', 1, '2021-01-03 13:03:48', '2021-01-16 17:59:23', 0, 1);
INSERT INTO `sys_book` VALUES (18, 9789, '人与自然', '18', '2021-01-03 13:04:32', '/upload/a1f973aa-f1ee-4d1a-abaf-779fb31d257a.jpeg', '人与自然.jpeg', '<div class=\"para\" label-module=\"para\">《人与自然》开播于1994年5月11日。栏目宗旨是“讴歌生命，关注环境”。</div><div class=\"para\" label-module=\"para\">栏目内容定位为介绍动植物和自然知识以及探索人与自然之间的相互影响，相互作用，探讨社会、经济、生态协调发展和可持续性发展的有效途径。</div><div class=\"para\" label-module=\"para\">你了解了世界，认识了自己。</div><div class=\"para\" label-module=\"para\">《原生故事》领略生命的差异与共同，讲述生存相依的道理。</div><div class=\"para\" label-module=\"para\">《自然启示》体验自然界的危险与奇异，开拓见识，留下思考。</div><div class=\"para\" label-module=\"para\">《人物亲历》分析人类社会的压力与恐惧，舒缓情绪，理性应对。</div>', '《人与自然》开播于1994年5月11日。栏目宗旨是“讴歌生命，关注环境”。栏目内容定位为介绍动植物和自然知识以及探索人与自然之间的相互影响，相互作用，探讨社会、经济、生态协调发展和可持续性发展的有效途径。你了解了世界，认识了自己。《原生故事》领略生命的差异与共同，讲述生存相依的道理。《自然启示》体验自然界的危险与奇异，开拓见识，留下思考。《人物亲历》分析人类社会的压力与恐惧，舒缓情绪，理性应对。', '佚名', '9', 3434, '2021-01-03 13:05:52', '2021-01-04 09:29:17', 0, 1);
INSERT INTO `sys_book` VALUES (19, 23534, '地理杂志', '12', '2020-01-19 20:08:10', '/upload/6ab639c7-9f9a-41da-bcb7-c323f7a7edfe.jpg', '地理.jpg', '<div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">概念定义</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"1\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"para\" label-module=\"para\">地理学主要是研究<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%83/6431\" data-lemmaid=\"6431\">地球</a>表层各种自然现象和人文现象，以及它们之间相互关系的学科。</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E5%9C%B0%E7%90%86/176780/0/7c1ed21b0ef41bd5edad503359da81cb38db3d7e?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"地理上的六风七带\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/7c1ed21b0ef41bd5edad503359da81cb38db3d7e?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"地理上的六风七带\"></a><span class=\"description\">地理上的六风七带</span></div>地理是一门关于生活在地球上的人与他所处地理环境之间关系的学科。一般来讲，地理所涉及的范围包括人类生活的各种环境,也就是<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E7%8E%AF%E5%A2%83/5641146\" data-lemmaid=\"5641146\">自然环境</a>与<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BA%BA%E6%96%87%E7%8E%AF%E5%A2%83/8739923\" data-lemmaid=\"8739923\">人文环境</a>。自然环境包括<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%A7%E6%B0%94%E5%9C%88/2897177\" data-lemmaid=\"2897177\">大气圈</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%B4%E5%9C%88/360276\" data-lemmaid=\"360276\">水圈</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B2%A9%E7%9F%B3%E5%9C%88/1197554\" data-lemmaid=\"1197554\">岩石圈</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%94%9F%E7%89%A9%E5%9C%88/202771\" data-lemmaid=\"202771\">生物圈</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%9F%E5%A3%A4%E5%9C%88/8337482\" data-lemmaid=\"8337482\">土壤圈</a>等圈层,由此就产生了地理的各个分支,例如气候现象、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%B4%E6%96%87%E7%8E%B0%E8%B1%A1/9690264\" data-lemmaid=\"9690264\">水文现象</a>以及<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%B4%E7%8E%AF%E5%A2%83/8476233\" data-lemmaid=\"8476233\">水环境</a>、地球上的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E8%B5%84%E6%BA%90/240383\" data-lemmaid=\"240383\">自然资源</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E8%B2%8C/1974908\" data-lemmaid=\"1974908\">地貌</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%94%9F%E7%89%A9/161443\" data-lemmaid=\"161443\">生物</a>的分布以及生态现象，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%9F%E5%A3%A4/33675\" data-lemmaid=\"33675\">土壤</a>的分布以及类型等等很多现象，除了这些以外,自然地理现象还关注于由于样式、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%B4%E6%96%87/425969\" data-lemmaid=\"425969\">水文</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%A4%8D%E7%89%A9/142914\" data-lemmaid=\"142914\">植物</a>、土壤相互作用的地表系统现象以及由于<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BA%BA%E7%B1%BB%E6%B4%BB%E5%8A%A8/9704094\" data-lemmaid=\"9704094\">人类活动</a>而产生的各种环境现象、气候现象。因此学者把这样的学科叫做<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E5%9C%B0%E7%90%86\">自然地理</a>。除了自然地理，人类具有<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%A4%BE%E4%BC%9A%E6%80%A7/1860102\" data-lemmaid=\"1860102\">社会性</a>所以还包括各种人类社会现象与<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E7%8E%AF%E5%A2%83/1126968\" data-lemmaid=\"1126968\">地理环境</a>的关系，例如<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%86%9C%E4%B8%9A/330015\" data-lemmaid=\"330015\">农业</a>的分布、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B7%A5%E4%B8%9A/254750\" data-lemmaid=\"254750\">工业</a>的分布、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%81%9A%E8%90%BD/6452722\" data-lemmaid=\"6452722\">聚落</a>的分布等等现象,尤其注重人类的经济活动与环境的关系，但是关于这个方面的内容比较广阔，涉及的范围很多而且和其他的不好区分,姑且称之为人文地理（包括<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%8F%E6%B5%8E%E5%9C%B0%E7%90%86\">经济地理</a>）。<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BA%BA%E6%96%87%E5%9C%B0%E7%90%86/333213\" data-lemmaid=\"333213\">人文地理</a>有一个最突出的理念就是要实现人类的各种与环境的和谐统一，也就是可持续发展。</div><div class=\"para\" label-module=\"para\"><span>（1）学科名，见“</span><span><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E5%AD%A6/661412\" data-lemmaid=\"661412\">地理学</a></span><span>”。</span></div><div class=\"para\" label-module=\"para\">同“地理学”定义：研究<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%83%E8%A1%A8%E5%B1%82/798254\" data-lemmaid=\"798254\">地球表层</a>自然要素与人文要素相互作用及其形成演化的特征、结构、格局、过程、地域分异与人地关系等，是一门复杂学科体系的总称，并在各层次学校开设相关课程。</div><div class=\"para\" label-module=\"para\">地理学分为<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E5%9C%B0%E7%90%86/2053845\" data-lemmaid=\"2053845\">自然地理</a>和<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BA%BA%E6%96%87%E5%9C%B0%E7%90%86/333213\" data-lemmaid=\"333213\">人文地理</a>。</div><div class=\"para\" label-module=\"para\">有许多学者把经济地理从人文地理中分离出来，这样地理学就分为三类：自然地理、人文地理和经济地理。</div><div class=\"para\" label-module=\"para\"><span>（2）古代“</span><span><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E9%A3%8E%E6%B0%B4%E5%AD%A6/3399200\" data-lemmaid=\"3399200\">风水学</a></span><span>”的别称，是古代学者研究“天人合一”之道作用于地球表面或地球内在系统的理论。</span></div><div class=\"para\" label-module=\"para\">有大量古书传世，皆名为“地理”，《地理琢玉斧》、《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E5%95%96%E8%94%97%E5%BD%95\">地理啖蔗录</a>》、《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E4%BA%94%E8%AF%80\">地理五诀</a>》、《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E5%9B%9B%E5%BC%B9%E5%AD%90\">地理四弹子</a>》、《地理囊金》等等古书皆是风水名著，此处的\"地理\"皆是风水的别称。<span class=\"sup--normal\" data-sup=\"1\" data-ctrmap=\":1,\">&nbsp;[1]</span><a class=\"sup-anchor\" name=\"ref_[1]_16348631\">&nbsp;</a><a name=\"ref_1\"></a></div><div class=\"anchor-list \"><a name=\"1_1\" class=\"lemma-anchor para-title\"></a><a name=\"sub16348631_1_1\" class=\"lemma-anchor \"></a><a name=\"西方\" class=\"lemma-anchor \"></a><a name=\"1-1\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">西方</h3></div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E5%9C%B0%E7%90%86/176780/0/b219ebc4b74543a980d03f2012178a82b8011416?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"埃拉托色尼\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/b219ebc4b74543a980d03f2012178a82b8011416?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"埃拉托色尼\"></a><span class=\"description\">埃拉托色尼</span></div>在西方，公元前2世纪，古希腊学者<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9F%83%E6%8B%89%E6%89%98%E8%89%B2%E5%B0%BC/464101\" data-lemmaid=\"464101\">埃拉托色尼</a>第一次合成了geographica（geo+graphica）这个术语，意思是“地理”或“大地的记述”，并写出了西方第一本以“地理”命名的专著《地理学概论》。</div><div class=\"anchor-list \"><a name=\"1_2\" class=\"lemma-anchor para-title\"></a><a name=\"sub16348631_1_2\" class=\"lemma-anchor \"></a><a name=\"东方\" class=\"lemma-anchor \"></a><a name=\"1-2\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">东方</h3></div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E5%9C%B0%E7%90%86/176780/0/32fa828ba61ea8d32a558d31980a304e251f5894?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"尚书-禹贡\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/32fa828ba61ea8d32a558d31980a304e251f5894?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"尚书-禹贡\"></a><span class=\"description\">尚书-禹贡</span></div>在我们祖先留下的文献中，最早出现“地理”一词的是公元前4世纪成文的《易经·系辞》，里面有“仰以观于<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%A9%E6%96%87/1940410\" data-lemmaid=\"1940410\">天文</a>，俯以察于地理”的文句。东汉思想家<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%8E%8B%E5%85%85/1698\" data-lemmaid=\"1698\">王充</a>对天文、地理有相当深入的研究，他的解释是：“天有日月星辰谓之文，地有山川陵谷谓之理。</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E5%9C%B0%E7%90%86/176780/0/21a4462309f79052d8b883d200f3d7ca7acbd5b3?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"山海经\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/21a4462309f79052d8b883d200f3d7ca7acbd5b3?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"山海经\"></a><span class=\"description\">山海经</span></div>中国古代词义概念上的“地理”与今“地理”概念完全不同，中国古代的“地理”概念包含了大量的风水学内容，风水学内容的书籍常常使用“地理”的名字。而以现代观念中的“地理”概念来看，古代较早描述相关内容的书籍包括了《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B0%9A%E4%B9%A6%C2%B7%E7%A6%B9%E8%B4%A1/14094077\" data-lemmaid=\"14094077\">尚书·禹贡</a>》和《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%B1%B1%E6%B5%B7%E7%BB%8F/270208\" data-lemmaid=\"270208\">山海经</a>》等，且主要探索关于地球形状、大小和有关地球数据的测量方法，或对已知的地区和国家进行描述，且这样的书籍中并不会使用“地理”这一词汇。</div><div class=\"anchor-list \"><a name=\"2\" class=\"lemma-anchor para-title\"></a><a name=\"sub16348631_2\" class=\"lemma-anchor \"></a><a name=\"分支学科\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">分支学科</h2><a class=\"edit-icon j-edit-link\" data-edit-dl=\"2\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_edit-lemma\"></span>编辑</a></div><div class=\"anchor-list \"><a name=\"2_1\" class=\"lemma-anchor para-title\"></a><a name=\"sub16348631_2_1\" class=\"lemma-anchor \"></a><a name=\"自然地理学\" class=\"lemma-anchor \"></a><a name=\"2-1\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-3\" label-module=\"para-title\"><h3 class=\"title-text\">自然地理学</h3></div><div class=\"para\" label-module=\"para\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%B0%E8%B2%8C%E5%AD%A6\">地貌学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8A%A8%E5%8A%9B%E5%9C%B0%E8%B2%8C%E5%AD%A6\">动力地貌学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%9E%84%E9%80%A0%E5%9C%B0%E8%B2%8C%E5%AD%A6\">构造地貌学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%94%E5%80%99%E5%9C%B0%E8%B2%8C%E5%AD%A6\">气候地貌学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E5%9C%B0%E8%B2%8C%E5%AD%A6\">应用地貌学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%A4%8D%E7%89%A9%E5%9C%B0%E7%90%86%E5%AD%A6\">植物地理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8A%A8%E7%89%A9%E5%9C%B0%E7%90%86%E5%AD%A6\">动物地理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%86%B0%E5%B7%9D%E5%AD%A6\">冰川学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%86%BB%E5%9C%9F%E5%AD%A6\">冻土学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8F%A4%E5%9C%B0%E7%90%86%E5%AD%A6/663106\" data-lemmaid=\"663106\">古地理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%B4%E6%96%87%E5%9C%B0%E7%90%86%E5%AD%A6/663161\" data-lemmaid=\"663161\">水文地理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9C%9F%E5%A3%A4%E5%9C%B0%E7%90%86%E5%AD%A6/663262\" data-lemmaid=\"663262\">土壤地理学</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8C%96%E5%AD%A6%E5%9C%B0%E7%90%86%E5%AD%A6/663299\" data-lemmaid=\"663299\">化学地理学</a>、综合自然地理学等。</div><div class=\"para\" label-module=\"para\">与<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E5%9C%B0%E7%90%86/2053845\" data-lemmaid=\"2053845\">自然地理</a>相关的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%9F%BA%E7%A1%80%E5%AD%A6%E7%A7%91\">基础学科</a>：<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%94%9F%E7%89%A9/161443\" data-lemmaid=\"161443\">生物</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8C%96%E5%AD%A6/127240\" data-lemmaid=\"127240\">化学</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%89%A9%E7%90%86/127205\" data-lemmaid=\"127205\">物理</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A4%A9%E6%96%87/18024\" data-lemmaid=\"18024\">天文</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6/107037\" data-lemmaid=\"107037\">数学</a>，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%8A%80%E6%9C%AF/13014499\" data-lemmaid=\"13014499\">技术</a>等。</div>', '概念定义编辑地理学主要是研究地球表层各种自然现象和人文现象，以及它们之间相互关系的学科。地理上的六风七带地理是一门关于生活在地球上的人与他所处地理环境之间关系的学科。一般来讲，地理所涉及的范围包括人类生活的各种环境,也就是自然环境与人文环境。自然环境包括大气圈、水圈、岩石圈、生物圈、土壤圈等圈层,由此就产生了地理的各个分支,例如气候现象、水文现象以及水环境、地球上的自然资源、地貌、生物的分布以及生态现象，土壤的分布以及类型等等很多现象，除了这些以外,自然地理现象还关注于由于样式、水文、植物、土壤相互作用的地表系统现象以及由于人类活动而产生的各种环境现象、气候现象。因此学者把这样的学科叫做自然地理。除了自然地理，人类具有社会性所以还包括各种人类社会现象与地理环境的关系，例如农业的分布、工业的分布、聚落的分布等等现象,尤其注重人类的经济活动与环境的关系，但是关于这个方面的内容比较广阔，涉及的范围很多而且和其他的不好区分,姑且称之为人文地理（包括经济地理）。人文地理有一个最突出的理念就是要实现人类的各种与环境的和谐统一，也就是可持续发展。（1）学科名，见“地理学”。同“地理学”定义：研究地球表层自然要素与人文要素相互作用及其形成演化的特征、结构、格局、过程、地域分异与人地关系等，是一门复杂学科体系的总称，并在各层次学校开设相关课程。地理学分为自然地理和人文地理。有许多学者把经济地理从人文地理中分离出来，这样地理学就分为三类：自然地理、人文地理和经济地理。（2）古代“风水学”的别称，是古代学者研究“天人合一”之道作用于地球表面或地球内在系统的理论。有大量古书传世，皆名为“地理”，《地理琢玉斧》、《地理啖蔗录》、《地理五诀》、《地理四弹子》、《地理囊金》等等古书皆是风水名著，此处的\"地理\"皆是风水的别称。 [1] 西方埃拉托色尼在西方，公元前2世纪，古希腊学者埃拉托色尼第一次合成了geographica（geo+graphica）这个术语，意思是“地理”或“大地的记述”，并写出了西方第一本以“地理”命名的专著《地理学概论》。东方尚书-禹贡在我们祖先留下的文献中，最早出现“地理”一词的是公元前4世纪成文的《易经·系辞》，里面有“仰以观于天文，俯以察于地理”的文句。东汉思想家王充对天文、地理有相当深入的研究，他的解释是：“天有日月星辰谓之文，地有山川陵谷谓之理。山海经中国古代词义概念上的“地理”与今“地理”概念完全不同，中国古代的“地理”概念包含了大量的风水学内容，风水学内容的书籍常常使用“地理”的名字。而以现代观念中的“地理”概念来看，古代较早描述相关内容的书籍包括了《尚书·禹贡》和《山海经》等，且主要探索关于地球形状、大小和有关地球数据的测量方法，或对已知的地区和国家进行描述，且这样的书籍中并不会使用“地理”这一词汇。分支学科编辑自然地理学地貌学、动力地貌学、构造地貌学、气候地貌学、应用地貌学、植物地理学、动物地理学、冰川学、冻土学、古地理学、水文地理学、土壤地理学、化学地理学、综合自然地理学等。与自然地理相关的基础学科：生物，化学，物理，天文，数学，技术等。', '马可波罗', '8', 34519, '2021-01-03 13:14:35', '2021-01-03 13:14:35', 0, 1);
INSERT INTO `sys_book` VALUES (20, 1, '民法典', '11', '2021-01-26 05:12:16', '/upload/bef729e1-7baf-4dc6-84b2-0a27079a3262.jpg', 'map01.jpg', '<dl class=\"lemmaWgt-lemmaTitle lemmaWgt-lemmaTitle-\"><dd class=\"lemmaWgt-lemmaTitle-title\"><p style=\"text-align: center; \"><b>中华人民共和国民法典</b></p>&nbsp;<a class=\"lock-lemma\" nslog-type=\"10003105\" target=\"_blank\" href=\"https://baike.baidu.com/view/10812319.htm\" title=\"锁定\"><span class=\"cmn-icon wiki-lemma-icons wiki-lemma-icons_lock-lemma\"></span>锁定</a></dd></dl><div class=\"lemma-summary\" label-module=\"lemmaSummary\"><div class=\"para\" label-module=\"para\">《中华人民共和国民法典》被称为“社会生活的百科全书”，是新中国第一部以<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B3%95%E5%85%B8/2079739\" data-lemmaid=\"2079739\">法典</a>命名的法律，在法律体系中居于基础性地位，也是市场经济的基本法。《中华人民共和国民法典》共7编、1260条，各编依次为总则、物权、合同、人格权、婚姻家庭、继承、侵权责任，以及附则。<span class=\"sup--normal\" data-sup=\"1-3\" data-ctrmap=\":1,:2,:3,\">&nbsp;[1-3]</span><a class=\"sup-anchor\" name=\"ref_[1-3]_19945987\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">2020年5月28日，十三届全国人大三次会议表决通过了《中华人民共和国民法典》，自2021年1月1日起施行。<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%A9%9A%E5%A7%BB%E6%B3%95/135901\" data-lemmaid=\"135901\">婚姻法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%BB%A7%E6%89%BF%E6%B3%95/10599415\" data-lemmaid=\"10599415\">继承法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%91%E6%B3%95%E9%80%9A%E5%88%99/2088441\" data-lemmaid=\"2088441\">民法通则</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%94%B6%E5%85%BB%E6%B3%95/22467589\" data-lemmaid=\"22467589\">收养法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%8B%85%E4%BF%9D%E6%B3%95/9268941\" data-lemmaid=\"9268941\">担保法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%90%88%E5%90%8C%E6%B3%95/50333593\" data-lemmaid=\"50333593\">合同法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%89%A9%E6%9D%83%E6%B3%95/312528\" data-lemmaid=\"312528\">物权法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%BE%B5%E6%9D%83%E8%B4%A3%E4%BB%BB%E6%B3%95/2371352\" data-lemmaid=\"2371352\">侵权责任法</a>、<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%B0%91%E6%B3%95%E6%80%BB%E5%88%99/19771620\" data-lemmaid=\"19771620\">民法总则</a>同时废止。<span class=\"sup--normal\" data-sup=\"4-5\" data-ctrmap=\":4,:5,\">&nbsp;[4-5]</span><a class=\"sup-anchor\" name=\"ref_[4-5]_19945987\">&nbsp;</a></div></div><div class=\"lemmaWgt-promotion-leadPVBtn\"></div><p><a href=\"https://baike.baidu.com/vbaike/%E4%B8%80%E5%9B%BE%E8%AF%BB%E6%87%82%E6%B0%91%E6%B3%95%E5%85%B8/59749\" ad-type=\"bannerAd\" target=\"_blank\" nslog-type=\"10002202\" nslog-params=\"{&quot;adId&quot;:&quot;12300&quot;, &quot;adTitle&quot;: &quot;一图读懂民法典&quot;, &quot;adPos&quot;: 15}\"><img src=\"https://bkimg.cdn.bcebos.com/pic/d62a6059252dd42a28342b3419724cb5c9ea15ce1251\" title=\"一图读懂民法典\"></a></p><p><img src=\"/upload/89be7cad-41c3-4666-85f0-05f3e3c660d7.jpg\" alt=\"luo.jpg\" style=\"display:inline-block;max-width:98%;height:auto\"><br></p><div class=\"basic-info cmn-clearfix\"><dl class=\"basicInfo-block basicInfo-left\"><dt class=\"basicInfo-item name\">中文名</dt><dd class=\"basicInfo-item value\">中华人民共和国民法典</dd><dt class=\"basicInfo-item name\">颁布时间</dt><dd class=\"basicInfo-item value\">2020年5月28日<span class=\"sup--normal\" data-sup=\"5\" data-ctrmap=\":5,\">&nbsp;[5]</span><a class=\"sup-anchor\" name=\"ref_[5]_19945987\">&nbsp;</a></dd><dt class=\"basicInfo-item name\">编纂时间</dt><dd class=\"basicInfo-item value\">2016-2020年<span class=\"sup--normal\" data-sup=\"6\" data-ctrmap=\":6,\">&nbsp;[6]</span><a class=\"sup-anchor\" name=\"ref_[6]_19945987\">&nbsp;</a></dd></dl><dl class=\"basicInfo-block basicInfo-right\"><dt class=\"basicInfo-item name\">制定机关</dt><dd class=\"basicInfo-item value\"><a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%85%A8%E5%9B%BD%E4%BA%BA%E6%B0%91%E4%BB%A3%E8%A1%A8%E5%A4%A7%E4%BC%9A/4463614\" data-lemmaid=\"4463614\">中华人民共和国全国人民代表大会</a><span class=\"sup--normal\" data-sup=\"7\" data-ctrmap=\":7,\">&nbsp;[7]</span><a class=\"sup-anchor\" name=\"ref_[7]_19945987\">&nbsp;</a></dd><dt class=\"basicInfo-item name\">施行时间</dt><dd class=\"basicInfo-item value\">2021年1月1日<span class=\"sup--normal\" data-sup=\"5\" data-ctrmap=\":5,\">&nbsp;[5]</span><a class=\"sup-anchor\" name=\"ref_[5]_19945987\">&nbsp;</a></dd><dt class=\"basicInfo-item name\">通过会议</dt><dd class=\"basicInfo-item value\">十三届全国人大三次会议<span class=\"sup--normal\" data-sup=\"5\" data-ctrmap=\":5,\">&nbsp;[5]</span><a class=\"sup-anchor\" name=\"ref_[5]_19945987\">&nbsp;</a></dd></dl></div><div class=\"lemmaWgt-lemmaCatalog\"><div class=\"lemma-catalog\"><h2 class=\"block-title\" style=\"text-align: center;\">目录</h2><div class=\"catalog-list column-3\"><ol><li class=\"level1\"><span class=\"index\" style=\"text-align: right;\">1</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#1\">立法经过</a></span></li><li class=\"level1\"><span class=\"index\" style=\"text-align: right;\">2</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2\">法律全文</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_1\">目录</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_2\">第一编 总则</a></span></li></ol><ol><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_3\">第二编 物权</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_4\">第三编 合同</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_5\">第四编 人格权</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_6\">第五编 婚姻家庭</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_7\">第六编 继承</a></span></li></ol><ol><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_8\">第七编 侵权责任</a></span></li><li class=\"level2\"><span class=\"index\">▪</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#2_9\">附则</a></span></li><li class=\"level1\"><span class=\"index\" style=\"text-align: right;\">3</span>&nbsp;<span class=\"text\"><a href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116?fr=aladdin#3\">司法解释</a></span></li></ol></div></div></div><div class=\"anchor-list \"><a name=\"1\" class=\"lemma-anchor para-title\"></a><a name=\"sub19945987_1\" class=\"lemma-anchor \"></a><a name=\"立法经过\" class=\"lemma-anchor \"></a></div><div class=\"para-title level-2\" label-module=\"para-title\"><h2 class=\"title-text\">立法经过</h2></div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116/0/d1a20cf431adcbef76097d7b88e639dda3cc7cd9313f?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"十三届全国人大三次会议表决通过了《中华人民共和国民法典》\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/d1a20cf431adcbef76097d7b88e639dda3cc7cd9313f?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"十三届全国人大三次会议表决通过了《中华人民共和国民法典》\"></a><span class=\"description\">十三届全国人大三次会议表决通过了《中华人民共和国民法典》&nbsp;<span>[5]</span><a name=\"ref_[5]_\"></a></span></div>1954年，全国人大常委会组织力量起草民法典。此后，由于反右斗争扩大化，立法活动被终止。</div><div class=\"para\" label-module=\"para\">1962年，民法典起草工作再次被提上议程，并于1964年完成了草案<i>（试拟稿）</i>。后因“<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%96%87%E5%8C%96%E5%A4%A7%E9%9D%A9%E5%91%BD/117740\" data-lemmaid=\"117740\">文化大革命</a>”而停止。</div><div class=\"para\" label-module=\"para\">1979年11月，全国人大常委会第三次组织民法典起草工作，至1982年形成民法草案第四稿。虽然草案并未正式通过成为法律，但现行的民法通则都是以该草案为基础。</div><div class=\"para\" label-module=\"para\">2002年12月，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%AC%AC%E4%B9%9D%E5%B1%8A%E5%85%A8%E5%9B%BD%E4%BA%BA%E5%A4%A7%E5%B8%B8%E5%A7%94%E4%BC%9A/4693026\" data-lemmaid=\"4693026\">第九届全国人大常委会</a>第三十一次会议审议民法草案。之后，由于物权法尚未制定，加之对民法草案认识分歧较大等原因，民法草案最终被搁置下来。</div><div class=\"para\" label-module=\"para\">2014年11月，党的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8D%81%E5%85%AB%E5%B1%8A%E5%9B%9B%E4%B8%AD%E5%85%A8%E4%BC%9A/15113351\" data-lemmaid=\"15113351\">十八届四中全会</a>明确提出编纂民法典。</div><div class=\"para\" label-module=\"para\">2015年3月，全国人大常委会法制工作委员会启动民法典编纂工作，着手第一步的民法总则制定工作，以1986年制定的民法通则为基础，系统梳理总结有关民事法律的实践经验，提炼民事法律制度中具有普遍适用性和引领性的规则，形成民法总则草案。<span class=\"sup--normal\" data-sup=\"6\" data-ctrmap=\":6,\">&nbsp;[6]</span><a class=\"sup-anchor\" name=\"ref_[6]_19945987\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">2016年3月4日，十二届全国人大四次会议副秘书长、发言人<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%82%85%E8%8E%B9/12594\" data-lemmaid=\"12594\">傅莹</a>在新闻发布会上表示，民法典编纂工作已经启动，从做法上分两步走，第一步是制定民法总则，第二步是全面整合民事法律。民法总则的征求意见稿已经出来，预期6月份能够提请人大常委会进行审议<span class=\"sup--normal\" data-sup=\"8\" data-ctrmap=\":8,\">&nbsp;[8]</span><a class=\"sup-anchor\" name=\"ref_[8]_19945987\">&nbsp;</a>&nbsp;。6月，十二届全国人大常委会第二十一次会议初次审议了民法总则草案，标志着民法典编纂工作进入立法程序<span class=\"sup--normal\" data-sup=\"9\" data-ctrmap=\":9,\">&nbsp;[9]</span><a class=\"sup-anchor\" name=\"ref_[9]_19945987\">&nbsp;</a>&nbsp;。</div><div class=\"para\" label-module=\"para\"><div class=\"lemma-picture text-pic layout-right\"><a class=\"image-link\" nslog-type=\"9317\" href=\"https://baike.baidu.com/pic/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116/0/5fdf8db1cb1349540923bc0670078558d109b3dedc32?fr=lemma&amp;ct=single\" target=\"_blank\" title=\"\"><img class=\"\" src=\"https://bkimg.cdn.bcebos.com/pic/5fdf8db1cb1349540923bc0670078558d109b3dedc32?x-bce-process=image/resize,m_lfit,w_220,limit_1\" alt=\"\"></a></div>2017年3月15日，《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E6%80%BB%E5%88%99/20277239\" data-lemmaid=\"20277239\">中华人民共和国民法总则</a>》由中华人民共和国第十二届全国人民代表大会第五次会议通过，自2017年10月1日起施行。<span class=\"sup--normal\" data-sup=\"10\" data-ctrmap=\":10,\">&nbsp;[10]</span><a class=\"sup-anchor\" name=\"ref_[10]_19945987\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">2018年8月27日，民法典各分编草案提请第十三届全国人大常委会第五次会议审议，不再保留计划生育的有关内容，新增离婚冷静期<span class=\"sup--normal\" data-sup=\"11\" data-ctrmap=\":11,\">&nbsp;[11]</span><a class=\"sup-anchor\" name=\"ref_[11]_19945987\">&nbsp;</a>&nbsp;。12月23日，民法典侵权责任编草案提请十三届全国人大常委会第七次会议审议<span class=\"sup--normal\" data-sup=\"12\" data-ctrmap=\":12,\">&nbsp;[12]</span><a class=\"sup-anchor\" name=\"ref_[12]_19945987\">&nbsp;</a>&nbsp;。12月23日，民法典合同编草案二审稿提交全国人大常委会审议。为体现对合同的保护，二审稿规定，依法成立的合同，受法律保护。<span class=\"sup--normal\" data-sup=\"13\" data-ctrmap=\":13,\">&nbsp;[13]</span><a class=\"sup-anchor\" name=\"ref_[13]_19945987\">&nbsp;</a></div><div class=\"para\" label-module=\"para\">2019年6月25日，<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E6%A0%97%E6%88%98%E4%B9%A6/6450714\" data-lemmaid=\"6450714\">栗战书</a>委员长主持召开十三届全国人大常委会第十一次会议，会议审议了民法典婚姻家庭编草案和民法典继承编草案<span class=\"sup--normal\" data-sup=\"14\" data-ctrmap=\":14,\">&nbsp;[14]</span><a class=\"sup-anchor\" name=\"ref_[14]_19945987\">&nbsp;</a>&nbsp;。12月20日，法工委对民法典各分编草案进行了修改完善，并将2017年已经出台施行的《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E6%80%BB%E5%88%99/20277239\" data-lemmaid=\"20277239\">中华人民共和国民法总则</a>》编入草案，重新编排条文序号，形成《中华人民共和国民法典（草案）》，提请12月常委会会议审议<span class=\"sup--normal\" data-sup=\"15\" data-ctrmap=\":15,\">&nbsp;[15]</span><a class=\"sup-anchor\" name=\"ref_[15]_19945987\">&nbsp;</a>&nbsp;。12月23日上午，十三届全国人大常委会第十五次会议听取全国人大宪法和法律委员会副主任委员沈春耀作关于《民法典各分编（草案）》修改情况和《中华人民共和国民法典（草案）》编纂情况的汇报。据沈春耀介绍，民法典（草案）共7编，依次为总则编、物权编、合同编、人格权编、婚姻家庭编、继承编、侵权责任编，以及附则，共1260条<span class=\"sup--normal\" data-sup=\"16\" data-ctrmap=\":16,\">&nbsp;[16]</span><a class=\"sup-anchor\" name=\"ref_[16]_19945987\">&nbsp;</a>&nbsp;。12月24日上午，十三届全国人大常委会第十五次会议举行分组会议，审议民法典草案<span class=\"sup--normal\" data-sup=\"17\" data-ctrmap=\":17,\">&nbsp;[17]</span><a class=\"sup-anchor\" name=\"ref_[17]_19945987\">&nbsp;</a>&nbsp;。12月28日上午，十三届全国人大常委会第十五次会议表决通过了全国人大常委会关于提请审议民法典草案的议案，决定将民法典草案提请2020年召开的<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E5%8D%81%E4%B8%89%E5%B1%8A%E5%85%A8%E5%9B%BD%E4%BA%BA%E5%A4%A7%E4%B8%89%E6%AC%A1%E4%BC%9A%E8%AE%AE/24212221\" data-lemmaid=\"24212221\">十三届全国人大三次会议</a>审议<span class=\"sup--normal\" data-sup=\"18\" data-ctrmap=\":18,\">&nbsp;[18]</span><a class=\"sup-anchor\" name=\"ref_[18]_19945987\">&nbsp;</a>&nbsp;。</div><div class=\"para\" label-module=\"para\"><a class=\"lemma-album layout-right nslog:10000206\" title=\"民法典\" href=\"https://baike.baidu.com/pic/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8/19435116/28032593/ae51f3deb48f8c5494eea44d1c603af5e0fe9925d132?fr=lemma&amp;ct=cover\" target=\"_blank\" nslog-type=\"10000206\"><div class=\"album-wrap\"><img class=\"picture\" alt=\"民法典\" src=\"https://bkimg.cdn.bcebos.com/pic/ae51f3deb48f8c5494eea44d1c603af5e0fe9925d132?x-bce-process=image/resize,m_lfit,w_220,limit_1\"></div><div class=\"description\">民法典<span class=\"number\">(7张)</span></div><div class=\"albumBg\"></div></a>2020年5月22日，在第十三届全国人民代表大会第三次会议上，全国人民代表大会常务委员会副委员长<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E7%8E%8B%E6%99%A8/7596\" data-lemmaid=\"7596\">王晨</a>作关于《<a target=\"_blank\" href=\"https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E6%B0%91%E6%B3%95%E5%85%B8%EF%BC%88%E8%8D%89%E6%A1%88%EF%BC%89/50163559\" data-lemmaid=\"50163559\">中华人民共和国民法典（草案）</a>》的说明<span class=\"sup--normal\" data-sup=\"19\" data-ctrmap=\":19,\">&nbsp;[19]</span><a class=\"sup-anchor\" name=\"ref_[19]_19945987\">&nbsp;</a>&nbsp;。5月28日，十三届全国人大三次会议表决通过了《中华人民共和国民法典》，自2021年1月1日起施行<span class=\"sup--normal\" data-sup=\"4-5\" data-ctrmap=\":4,:5,:20,:21,\">&nbsp;[4-5]</span><a class=\"sup-anchor\" name=\"ref_[4-5]_19945987\">&nbsp;</a>&nbsp;<span class=\"sup--normal\" data-sup=\"20-21\" data-ctrmap=\":4,:5,:20,:21,\">[20-21]</span><a class=\"sup-anchor\" name=\"ref_[20-21]_19945987\">&nbsp;</a>&nbsp;。</div>', '中华人民共和国民法典 锁定《中华人民共和国民法典》被称为“社会生活的百科全书”，是新中国第一部以法典命名的法律，在法律体系中居于基础性地位，也是市场经济的基本法。《中华人民共和国民法典》共7编、1260条，各编依次为总则、物权、合同、人格权、婚姻家庭、继承、侵权责任，以及附则。 [1-3] 2020年5月28日，十三届全国人大三次会议表决通过了《中华人民共和国民法典》，自2021年1月1日起施行。婚姻法、继承法、民法通则、收养法、担保法、合同法、物权法、侵权责任法、民法总则同时废止。 [4-5] 中文名中华人民共和国民法典颁布时间2020年5月28日 [5] 编纂时间2016-2020年 [6] 制定机关中华人民共和国全国人民代表大会 [7] 施行时间2021年1月1日 [5] 通过会议十三届全国人大三次会议 [5] 目录1 立法经过2 法律全文▪ 目录▪ 第一编 总则▪ 第二编 物权▪ 第三编 合同▪ 第四编 人格权▪ 第五编 婚姻家庭▪ 第六编 继承▪ 第七编 侵权责任▪ 附则3 司法解释立法经过十三届全国人大三次会议表决通过了《中华人民共和国民法典》 [5]1954年，全国人大常委会组织力量起草民法典。此后，由于反右斗争扩大化，立法活动被终止。1962年，民法典起草工作再次被提上议程，并于1964年完成了草案（试拟稿）。后因“文化大革命”而停止。1979年11月，全国人大常委会第三次组织民法典起草工作，至1982年形成民法草案第四稿。虽然草案并未正式通过成为法律，但现行的民法通则都是以该草案为基础。2002年12月，第九届全国人大常委会第三十一次会议审议民法草案。之后，由于物权法尚未制定，加之对民法草案认识分歧较大等原因，民法草案最终被搁置下来。2014年11月，党的十八届四中全会明确提出编纂民法典。2015年3月，全国人大常委会法制工作委员会启动民法典编纂工作，着手第一步的民法总则制定工作，以1986年制定的民法通则为基础，系统梳理总结有关民事法律的实践经验，提炼民事法律制度中具有普遍适用性和引领性的规则，形成民法总则草案。 [6] 2016年3月4日，十二届全国人大四次会议副秘书长、发言人傅莹在新闻发布会上表示，民法典编纂工作已经启动，从做法上分两步走，第一步是制定民法总则，第二步是全面整合民事法律。民法总则的征求意见稿已经出来，预期6月份能够提请人大常委会进行审议 [8]  。6月，十二届全国人大常委会第二十一次会议初次审议了民法总则草案，标志着民法典编纂工作进入立法程序 [9]  。2017年3月15日，《中华人民共和国民法总则》由中华人民共和国第十二届全国人民代表大会第五次会议通过，自2017年10月1日起施行。 [10] 2018年8月27日，民法典各分编草案提请第十三届全国人大常委会第五次会议审议，不再保留计划生育的有关内容，新增离婚冷静期 [11]  。12月23日，民法典侵权责任编草案提请十三届全国人大常委会第七次会议审议 [12]  。12月23日，民法典合同编草案二审稿提交全国人大常委会审议。为体现对合同的保护，二审稿规定，依法成立的合同，受法律保护。 [13] 2019年6月25日，栗战书委员长主持召开十三届全国人大常委会第十一次会议，会议审议了民法典婚姻家庭编草案和民法典继承编草案 [14]  。12月20日，法工委对民法典各分编草案进行了修改完善，并将2017年已经出台施行的《中华人民共和国民法总则》编入草案，重新编排条文序号，形成《中华人民共和国民法典（草案）》，提请12月常委会会议审议 [15]  。12月23日上午，十三届全国人大常委会第十五次会议听取全国人大宪法和法律委员会副主任委员沈春耀作关于《民法典各分编（草案）》修改情况和《中华人民共和国民法典（草案）》编纂情况的汇报。据沈春耀介绍，民法典（草案）共7编，依次为总则编、物权编、合同编、人格权编、婚姻家庭编、继承编、侵权责任编，以及附则，共1260条 [16]  。12月24日上午，十三届全国人大常委会第十五次会议举行分组会议，审议民法典草案 [17]  。12月28日上午，十三届全国人大常委会第十五次会议表决通过了全国人大常委会关于提请审议民法典草案的议案，决定将民法典草案提请2020年召开的十三届全国人大三次会议审议 [18]  。民法典(7张)2020年5月22日，在第十三届全国人民代表大会第三次会议上，全国人民代表大会常务委员会副委员长王晨作关于《中华人民共和国民法典（草案）》的说明 [19]  。5月28日，十三届全国人大三次会议表决通过了《中华人民共和国民法典》，自2021年1月1日起施行 [4-5]  [20-21]  。', '普林顿', '15', 995, '2021-01-14 07:47:12', '2021-01-24 12:56:24', 0, 1);
INSERT INTO `sys_book` VALUES (21, 1111, '1111', '24', '2020-12-27 16:00:00', '/upload/8f0f162b-0308-4f91-97e2-1ef01c140ee6.png', 'fox.png', '<img src=\"/upload/44e22187-4b3c-4379-92f5-2dde2fccdc57.PNG\" alt=\"404.PNG\" style=\"display:inline-block;max-width:98%;height:auto\">', '', '1', '15', 0, '2021-01-14 07:48:44', '2021-01-16 17:59:19', 0, 1);

-- ----------------------------
-- Table structure for sys_borrow
-- ----------------------------
DROP TABLE IF EXISTS `sys_borrow`;
CREATE TABLE `sys_borrow`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `loginname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '学号',
  `booknum` int(11) NULL DEFAULT NULL COMMENT '书籍序列号',
  `borrow_time` datetime(0) NULL DEFAULT NULL COMMENT '借书时间',
  `expect_time` datetime(0) NULL DEFAULT NULL COMMENT '预期归还时间',
  `return_time` datetime(0) NULL DEFAULT NULL COMMENT '实际还书时间',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否逾期，0->否，1->是',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `fk_ticketId` int(11) NULL DEFAULT NULL COMMENT '罚单表主键id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 46 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '借书还书表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_borrow
-- ----------------------------
INSERT INTO `sys_borrow` VALUES (17, 'pikaqiu', 8889343, '2021-01-19 08:02:28', '2021-01-20 15:59:59', NULL, 1, '2021-01-21 08:05:00', '2021-01-21 08:05:00', 17);
INSERT INTO `sys_borrow` VALUES (18, 'pikaqiu', 56732, '2021-01-21 08:02:55', '2021-01-22 15:59:59', NULL, 1, '2021-01-23 06:31:00', '2021-01-23 06:31:00', 18);
INSERT INTO `sys_borrow` VALUES (19, 'pikaqiu', 6565, '2021-01-21 08:03:25', '2021-01-23 15:59:59', NULL, 1, '2021-01-23 16:07:11', '2021-01-23 16:07:11', 19);
INSERT INTO `sys_borrow` VALUES (20, 'luotianyi', 789789, '2021-01-21 08:21:50', '2021-01-22 15:59:59', NULL, 1, '2021-01-23 06:31:00', '2021-01-23 06:31:00', 20);
INSERT INTO `sys_borrow` VALUES (21, 'luotianyi', 23534, '2021-01-21 08:22:21', '2021-01-29 15:59:59', NULL, 0, '2021-01-21 08:22:21', '2021-01-21 08:22:21', NULL);
INSERT INTO `sys_borrow` VALUES (22, 'luotianyi', 6565, '2021-01-16 08:22:47', '2021-01-17 15:59:59', '2021-01-22 03:14:00', 1, '2021-01-21 08:54:00', '2021-01-22 03:14:00', 22);
INSERT INTO `sys_borrow` VALUES (23, 'luotianyi', 56732, '2021-01-15 08:23:05', '2021-01-18 15:59:59', NULL, 1, '2021-01-21 08:24:00', '2021-01-21 08:24:00', 23);
INSERT INTO `sys_borrow` VALUES (24, 'xiaojibuhaore', 45267, '2021-01-24 12:47:44', '2021-01-25 15:59:59', NULL, 0, '2021-01-24 12:47:44', '2021-01-24 12:47:44', NULL);
INSERT INTO `sys_borrow` VALUES (25, 'xiaojibuhaore', 8889343, '2021-01-24 12:48:01', '2021-01-25 15:59:59', NULL, 0, '2021-01-24 12:48:01', '2021-01-24 12:48:01', NULL);
INSERT INTO `sys_borrow` VALUES (26, 'xiaojibuhaore', 789789, '2021-01-24 12:55:09', '2021-01-27 15:59:59', NULL, 0, '2021-01-24 12:55:09', '2021-01-24 12:55:09', NULL);
INSERT INTO `sys_borrow` VALUES (27, 'xiaojibuhaore', 898434, '2021-01-24 12:55:21', '2021-01-27 15:59:59', NULL, 0, '2021-01-24 12:55:21', '2021-01-24 12:55:21', NULL);
INSERT INTO `sys_borrow` VALUES (28, 'xiaojibuhaore', 6565, '2021-01-24 12:55:44', '2021-02-25 15:59:59', NULL, 0, '2021-01-24 12:55:44', '2021-01-24 12:55:44', NULL);
INSERT INTO `sys_borrow` VALUES (29, 'zhuxiaoge', 2222, '2021-01-24 12:57:57', '2021-01-27 15:59:59', NULL, 0, '2021-01-24 12:57:57', '2021-01-24 12:57:57', NULL);
INSERT INTO `sys_borrow` VALUES (30, 'zhuxiaoge', 78978, '2021-01-24 12:58:07', '2021-01-27 15:59:59', NULL, 0, '2021-01-24 12:58:07', '2021-01-24 12:58:07', NULL);
INSERT INTO `sys_borrow` VALUES (31, 'zhuxiaoge', 1, '2021-01-24 12:58:22', '2021-01-31 15:59:59', NULL, 0, '2021-01-24 12:58:22', '2021-01-24 12:58:22', NULL);
INSERT INTO `sys_borrow` VALUES (32, 'zhuxiaoge', 56732, '2021-01-24 13:00:22', '2021-01-29 15:59:59', NULL, 0, '2021-01-24 13:00:22', '2021-01-24 13:00:22', NULL);
INSERT INTO `sys_borrow` VALUES (33, 'zhuxiaoge', 45267, '2021-01-24 13:00:33', '2021-01-25 15:59:59', NULL, 0, '2021-01-24 13:00:33', '2021-01-24 13:00:33', NULL);
INSERT INTO `sys_borrow` VALUES (34, 'liumangtu', 2222, '2021-01-24 13:01:16', '2021-02-23 15:59:59', NULL, 0, '2021-01-24 13:01:16', '2021-01-24 13:01:16', NULL);
INSERT INTO `sys_borrow` VALUES (35, 'liumangtu', 789789, '2021-01-24 13:01:34', '2021-01-28 15:59:59', NULL, 0, '2021-01-24 13:01:34', '2021-01-24 13:01:34', NULL);
INSERT INTO `sys_borrow` VALUES (36, 'liumangtu', 898434, '2021-01-24 13:01:48', '2021-01-28 15:59:59', NULL, 0, '2021-01-24 13:01:48', '2021-01-24 13:01:48', NULL);
INSERT INTO `sys_borrow` VALUES (37, 'liumangtu', 1, '2021-01-24 13:02:10', '2021-02-22 15:59:59', NULL, 0, '2021-01-24 13:02:10', '2021-01-24 13:02:10', NULL);
INSERT INTO `sys_borrow` VALUES (38, 'fengzheng', 78978, '2021-01-24 13:02:43', '2021-01-28 15:59:59', NULL, 0, '2021-01-24 13:02:43', '2021-01-24 13:02:43', NULL);
INSERT INTO `sys_borrow` VALUES (39, 'fengzheng', 83975, '2021-01-24 13:02:57', '2021-02-25 15:59:59', NULL, 0, '2021-01-24 13:02:57', '2021-01-24 13:02:57', NULL);
INSERT INTO `sys_borrow` VALUES (40, 'fengzheng', 1, '2021-01-24 13:03:10', '2021-02-25 15:59:59', NULL, 0, '2021-01-24 13:03:10', '2021-01-24 13:03:10', NULL);
INSERT INTO `sys_borrow` VALUES (41, 'fengzheng', 3645, '2021-01-24 13:03:26', '2021-02-25 15:59:59', NULL, 0, '2021-01-24 13:03:26', '2021-01-24 13:03:26', NULL);
INSERT INTO `sys_borrow` VALUES (42, 'xiaotuzi', 1, '2021-01-24 14:56:17', '2021-02-23 15:59:59', NULL, 0, '2021-01-24 14:56:17', '2021-01-24 14:56:17', NULL);
INSERT INTO `sys_borrow` VALUES (43, 'xiaotuzi', 56732, '2021-01-24 14:56:39', '2021-02-23 15:59:59', NULL, 0, '2021-01-24 14:56:39', '2021-01-24 14:56:39', NULL);
INSERT INTO `sys_borrow` VALUES (44, 'xiaotuzi', 6565, '2021-01-24 14:58:02', '2021-01-26 15:59:59', NULL, 0, '2021-01-24 14:58:02', '2021-01-24 14:58:02', NULL);
INSERT INTO `sys_borrow` VALUES (45, 'xiaotuzi', 8889343, '2021-01-24 14:58:17', '2021-02-21 15:59:59', NULL, 0, '2021-01-24 14:58:17', '2021-01-24 14:58:17', NULL);

-- ----------------------------
-- Table structure for sys_category
-- ----------------------------
DROP TABLE IF EXISTS `sys_category`;
CREATE TABLE `sys_category`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '书籍分类',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否删除，0->未删除，1->已删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '书籍分类表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_category
-- ----------------------------
INSERT INTO `sys_category` VALUES (1, '思想政治类', '2021-01-02 23:10:52', '2021-01-02 15:43:01', 0);
INSERT INTO `sys_category` VALUES (2, '哲学宗教类', '2021-01-02 15:39:13', '2021-01-02 15:43:14', 0);
INSERT INTO `sys_category` VALUES (3, '语文', '2021-01-02 15:43:22', '2021-01-02 15:43:22', 0);
INSERT INTO `sys_category` VALUES (5, '英语', '2021-01-02 15:43:36', '2021-01-02 15:43:36', 0);
INSERT INTO `sys_category` VALUES (6, '化学', '2021-01-02 15:43:43', '2021-01-02 15:43:43', 0);
INSERT INTO `sys_category` VALUES (7, '物理', '2021-01-02 15:43:49', '2021-01-02 15:43:49', 0);
INSERT INTO `sys_category` VALUES (8, '地理', '2021-01-02 15:43:54', '2021-01-02 15:43:54', 0);
INSERT INTO `sys_category` VALUES (9, '生物', '2021-01-02 15:43:58', '2021-01-02 15:43:58', 0);
INSERT INTO `sys_category` VALUES (10, '计算机', '2021-01-02 15:44:03', '2021-01-02 15:44:03', 0);
INSERT INTO `sys_category` VALUES (11, '自动化', '2021-01-02 15:44:08', '2021-01-02 15:44:08', 0);
INSERT INTO `sys_category` VALUES (12, '新闻广播', '2021-01-02 15:44:16', '2021-01-02 15:44:16', 0);
INSERT INTO `sys_category` VALUES (14, '天文学', '2021-01-02 15:59:16', '2021-01-02 15:59:16', 0);
INSERT INTO `sys_category` VALUES (15, '数学', '2021-01-02 15:59:21', '2021-01-02 15:59:21', 0);
INSERT INTO `sys_category` VALUES (16, '自动化', '2021-01-03 01:42:07', '2021-01-03 01:44:45', 1);

-- ----------------------------
-- Table structure for sys_grade
-- ----------------------------
DROP TABLE IF EXISTS `sys_grade`;
CREATE TABLE `sys_grade`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `grade` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '年级',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否删除，0->未删除，1->已删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 13 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '年级表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_grade
-- ----------------------------
INSERT INTO `sys_grade` VALUES (1, '大四', '2021-01-05 13:24:52', '2021-01-05 13:24:52', 0);
INSERT INTO `sys_grade` VALUES (2, '大三', '2021-01-05 13:25:31', '2021-01-05 13:25:31', 0);
INSERT INTO `sys_grade` VALUES (3, '大二', '2021-01-05 13:25:36', '2021-01-05 13:25:36', 0);
INSERT INTO `sys_grade` VALUES (4, '大一', '2021-01-05 13:25:41', '2021-01-05 13:25:41', 0);
INSERT INTO `sys_grade` VALUES (5, '高三', '2021-01-05 13:26:27', '2021-01-05 13:26:27', 0);
INSERT INTO `sys_grade` VALUES (6, '高二', '2021-01-05 13:27:52', '2021-01-05 13:27:52', 0);
INSERT INTO `sys_grade` VALUES (7, '高一', '2021-01-05 13:27:57', '2021-01-05 13:27:57', 0);
INSERT INTO `sys_grade` VALUES (8, '研一', '2021-01-05 13:28:17', '2021-01-05 13:28:17', 0);
INSERT INTO `sys_grade` VALUES (9, '研二', '2021-01-05 13:28:23', '2021-01-05 13:28:23', 0);
INSERT INTO `sys_grade` VALUES (10, '研三', '2021-01-05 13:28:28', '2021-01-05 13:28:28', 0);
INSERT INTO `sys_grade` VALUES (11, '研究生四年级', '2021-01-05 13:28:35', '2021-01-06 07:35:00', 1);
INSERT INTO `sys_grade` VALUES (12, '研四', '2021-01-06 07:35:06', '2021-01-06 07:35:06', 0);

-- ----------------------------
-- Table structure for sys_loginfo
-- ----------------------------
DROP TABLE IF EXISTS `sys_loginfo`;
CREATE TABLE `sys_loginfo`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `loginname` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '学号+姓名',
  `loginip` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '登录ip',
  `logintime` datetime(0) NULL DEFAULT NULL COMMENT '登录时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 658 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '登录日志表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_loginfo
-- ----------------------------
INSERT INTO `sys_loginfo` VALUES (406, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 07:18:54');
INSERT INTO `sys_loginfo` VALUES (407, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 07:21:43');
INSERT INTO `sys_loginfo` VALUES (408, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 07:23:18');
INSERT INTO `sys_loginfo` VALUES (409, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 07:41:57');
INSERT INTO `sys_loginfo` VALUES (410, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 08:25:09');
INSERT INTO `sys_loginfo` VALUES (411, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 08:38:50');
INSERT INTO `sys_loginfo` VALUES (412, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 08:45:08');
INSERT INTO `sys_loginfo` VALUES (413, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 08:47:09');
INSERT INTO `sys_loginfo` VALUES (414, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 09:00:23');
INSERT INTO `sys_loginfo` VALUES (415, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 09:00:32');
INSERT INTO `sys_loginfo` VALUES (416, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 09:11:49');
INSERT INTO `sys_loginfo` VALUES (417, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 09:31:16');
INSERT INTO `sys_loginfo` VALUES (418, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 13:14:32');
INSERT INTO `sys_loginfo` VALUES (419, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 13:21:33');
INSERT INTO `sys_loginfo` VALUES (420, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 13:22:31');
INSERT INTO `sys_loginfo` VALUES (421, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 13:26:02');
INSERT INTO `sys_loginfo` VALUES (422, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 14:31:31');
INSERT INTO `sys_loginfo` VALUES (423, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 15:11:05');
INSERT INTO `sys_loginfo` VALUES (424, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 15:37:36');
INSERT INTO `sys_loginfo` VALUES (425, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 15:56:08');
INSERT INTO `sys_loginfo` VALUES (426, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-02 15:58:08');
INSERT INTO `sys_loginfo` VALUES (427, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 00:37:51');
INSERT INTO `sys_loginfo` VALUES (428, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 01:27:08');
INSERT INTO `sys_loginfo` VALUES (429, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 01:37:24');
INSERT INTO `sys_loginfo` VALUES (430, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 01:49:27');
INSERT INTO `sys_loginfo` VALUES (431, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 01:50:51');
INSERT INTO `sys_loginfo` VALUES (432, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 02:00:32');
INSERT INTO `sys_loginfo` VALUES (433, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 02:03:29');
INSERT INTO `sys_loginfo` VALUES (434, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 02:06:54');
INSERT INTO `sys_loginfo` VALUES (435, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 02:57:24');
INSERT INTO `sys_loginfo` VALUES (436, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 03:00:26');
INSERT INTO `sys_loginfo` VALUES (437, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 04:00:10');
INSERT INTO `sys_loginfo` VALUES (438, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 05:06:31');
INSERT INTO `sys_loginfo` VALUES (439, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 10:34:27');
INSERT INTO `sys_loginfo` VALUES (440, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 11:31:04');
INSERT INTO `sys_loginfo` VALUES (441, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 11:52:40');
INSERT INTO `sys_loginfo` VALUES (442, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 11:53:47');
INSERT INTO `sys_loginfo` VALUES (443, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 13:07:11');
INSERT INTO `sys_loginfo` VALUES (444, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-03 15:34:36');
INSERT INTO `sys_loginfo` VALUES (445, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 02:51:54');
INSERT INTO `sys_loginfo` VALUES (446, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 05:22:29');
INSERT INTO `sys_loginfo` VALUES (447, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 06:02:58');
INSERT INTO `sys_loginfo` VALUES (448, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 09:29:09');
INSERT INTO `sys_loginfo` VALUES (449, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 12:27:16');
INSERT INTO `sys_loginfo` VALUES (450, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 12:29:09');
INSERT INTO `sys_loginfo` VALUES (451, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 13:19:10');
INSERT INTO `sys_loginfo` VALUES (452, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 13:40:48');
INSERT INTO `sys_loginfo` VALUES (453, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 13:56:48');
INSERT INTO `sys_loginfo` VALUES (454, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-04 15:40:38');
INSERT INTO `sys_loginfo` VALUES (455, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-05 03:56:50');
INSERT INTO `sys_loginfo` VALUES (456, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-05 04:51:12');
INSERT INTO `sys_loginfo` VALUES (457, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-05 05:59:43');
INSERT INTO `sys_loginfo` VALUES (458, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-05 07:00:59');
INSERT INTO `sys_loginfo` VALUES (459, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-05 12:52:36');
INSERT INTO `sys_loginfo` VALUES (460, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-06 07:33:39');
INSERT INTO `sys_loginfo` VALUES (461, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 01:17:11');
INSERT INTO `sys_loginfo` VALUES (462, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 01:37:44');
INSERT INTO `sys_loginfo` VALUES (463, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 01:39:27');
INSERT INTO `sys_loginfo` VALUES (464, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 02:28:57');
INSERT INTO `sys_loginfo` VALUES (465, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 03:52:20');
INSERT INTO `sys_loginfo` VALUES (466, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 04:55:34');
INSERT INTO `sys_loginfo` VALUES (467, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 05:09:57');
INSERT INTO `sys_loginfo` VALUES (468, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 06:04:11');
INSERT INTO `sys_loginfo` VALUES (469, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 06:18:42');
INSERT INTO `sys_loginfo` VALUES (470, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 07:28:46');
INSERT INTO `sys_loginfo` VALUES (471, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 07:30:58');
INSERT INTO `sys_loginfo` VALUES (472, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 07:33:54');
INSERT INTO `sys_loginfo` VALUES (473, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 07:39:45');
INSERT INTO `sys_loginfo` VALUES (474, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-07 07:45:26');
INSERT INTO `sys_loginfo` VALUES (475, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-08 01:21:43');
INSERT INTO `sys_loginfo` VALUES (476, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-08 01:23:24');
INSERT INTO `sys_loginfo` VALUES (477, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-08 01:42:29');
INSERT INTO `sys_loginfo` VALUES (478, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-08 01:43:37');
INSERT INTO `sys_loginfo` VALUES (479, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-08 06:15:09');
INSERT INTO `sys_loginfo` VALUES (480, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-08 06:26:36');
INSERT INTO `sys_loginfo` VALUES (481, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-08 06:40:38');
INSERT INTO `sys_loginfo` VALUES (482, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-08 06:43:22');
INSERT INTO `sys_loginfo` VALUES (483, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-10 01:46:53');
INSERT INTO `sys_loginfo` VALUES (484, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-11 06:53:00');
INSERT INTO `sys_loginfo` VALUES (485, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-11 11:37:49');
INSERT INTO `sys_loginfo` VALUES (486, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-11 13:25:16');
INSERT INTO `sys_loginfo` VALUES (487, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-12 02:42:55');
INSERT INTO `sys_loginfo` VALUES (488, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-12 03:17:21');
INSERT INTO `sys_loginfo` VALUES (489, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-12 11:09:59');
INSERT INTO `sys_loginfo` VALUES (490, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 01:12:41');
INSERT INTO `sys_loginfo` VALUES (491, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 01:15:19');
INSERT INTO `sys_loginfo` VALUES (492, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 02:14:27');
INSERT INTO `sys_loginfo` VALUES (493, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 02:31:39');
INSERT INTO `sys_loginfo` VALUES (494, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 03:56:10');
INSERT INTO `sys_loginfo` VALUES (495, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 04:59:47');
INSERT INTO `sys_loginfo` VALUES (496, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 06:06:06');
INSERT INTO `sys_loginfo` VALUES (497, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 06:49:33');
INSERT INTO `sys_loginfo` VALUES (498, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 07:07:20');
INSERT INTO `sys_loginfo` VALUES (499, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 09:09:14');
INSERT INTO `sys_loginfo` VALUES (500, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 09:11:11');
INSERT INTO `sys_loginfo` VALUES (501, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 09:17:01');
INSERT INTO `sys_loginfo` VALUES (502, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 09:17:42');
INSERT INTO `sys_loginfo` VALUES (503, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 09:20:43');
INSERT INTO `sys_loginfo` VALUES (504, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 10:30:43');
INSERT INTO `sys_loginfo` VALUES (505, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 13:21:31');
INSERT INTO `sys_loginfo` VALUES (506, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 13:22:14');
INSERT INTO `sys_loginfo` VALUES (507, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 13:22:22');
INSERT INTO `sys_loginfo` VALUES (508, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 13:22:26');
INSERT INTO `sys_loginfo` VALUES (509, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 13:22:36');
INSERT INTO `sys_loginfo` VALUES (510, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-13 16:17:06');
INSERT INTO `sys_loginfo` VALUES (511, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 01:05:37');
INSERT INTO `sys_loginfo` VALUES (512, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 01:52:58');
INSERT INTO `sys_loginfo` VALUES (513, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 02:45:00');
INSERT INTO `sys_loginfo` VALUES (514, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 03:57:13');
INSERT INTO `sys_loginfo` VALUES (515, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 06:17:14');
INSERT INTO `sys_loginfo` VALUES (516, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 07:59:03');
INSERT INTO `sys_loginfo` VALUES (517, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-14 10:03:02');
INSERT INTO `sys_loginfo` VALUES (518, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-14 10:05:48');
INSERT INTO `sys_loginfo` VALUES (519, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-14 12:40:23');
INSERT INTO `sys_loginfo` VALUES (520, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-15 01:09:23');
INSERT INTO `sys_loginfo` VALUES (521, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-15 03:32:44');
INSERT INTO `sys_loginfo` VALUES (522, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-15 03:51:31');
INSERT INTO `sys_loginfo` VALUES (523, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-15 04:40:52');
INSERT INTO `sys_loginfo` VALUES (524, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-16 07:22:41');
INSERT INTO `sys_loginfo` VALUES (525, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-16 07:31:28');
INSERT INTO `sys_loginfo` VALUES (526, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-16 08:09:25');
INSERT INTO `sys_loginfo` VALUES (527, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-16 17:42:01');
INSERT INTO `sys_loginfo` VALUES (528, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:24:47');
INSERT INTO `sys_loginfo` VALUES (529, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:26:55');
INSERT INTO `sys_loginfo` VALUES (530, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:31:35');
INSERT INTO `sys_loginfo` VALUES (531, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:34:16');
INSERT INTO `sys_loginfo` VALUES (532, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:35:00');
INSERT INTO `sys_loginfo` VALUES (533, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:35:43');
INSERT INTO `sys_loginfo` VALUES (534, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:36:47');
INSERT INTO `sys_loginfo` VALUES (535, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:41:20');
INSERT INTO `sys_loginfo` VALUES (536, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:43:55');
INSERT INTO `sys_loginfo` VALUES (537, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-17 08:49:53');
INSERT INTO `sys_loginfo` VALUES (538, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-18 01:26:57');
INSERT INTO `sys_loginfo` VALUES (539, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 01:27:29');
INSERT INTO `sys_loginfo` VALUES (540, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-18 02:21:29');
INSERT INTO `sys_loginfo` VALUES (541, '马里奥-maliao', '0:0:0:0:0:0:0:1', '2021-01-18 02:50:31');
INSERT INTO `sys_loginfo` VALUES (542, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 02:51:46');
INSERT INTO `sys_loginfo` VALUES (543, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 02:52:05');
INSERT INTO `sys_loginfo` VALUES (544, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 03:18:26');
INSERT INTO `sys_loginfo` VALUES (545, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 03:19:01');
INSERT INTO `sys_loginfo` VALUES (546, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 03:19:11');
INSERT INTO `sys_loginfo` VALUES (547, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 03:20:08');
INSERT INTO `sys_loginfo` VALUES (548, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 03:20:28');
INSERT INTO `sys_loginfo` VALUES (549, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 03:22:56');
INSERT INTO `sys_loginfo` VALUES (550, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 04:49:50');
INSERT INTO `sys_loginfo` VALUES (551, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 04:50:06');
INSERT INTO `sys_loginfo` VALUES (552, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 04:50:10');
INSERT INTO `sys_loginfo` VALUES (553, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 04:52:29');
INSERT INTO `sys_loginfo` VALUES (554, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 05:05:23');
INSERT INTO `sys_loginfo` VALUES (555, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 06:03:10');
INSERT INTO `sys_loginfo` VALUES (556, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 07:29:41');
INSERT INTO `sys_loginfo` VALUES (557, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 07:34:47');
INSERT INTO `sys_loginfo` VALUES (558, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 07:35:46');
INSERT INTO `sys_loginfo` VALUES (559, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-18 07:38:56');
INSERT INTO `sys_loginfo` VALUES (560, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-18 07:39:05');
INSERT INTO `sys_loginfo` VALUES (561, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 02:30:17');
INSERT INTO `sys_loginfo` VALUES (562, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 02:43:43');
INSERT INTO `sys_loginfo` VALUES (563, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 02:44:38');
INSERT INTO `sys_loginfo` VALUES (564, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 02:49:18');
INSERT INTO `sys_loginfo` VALUES (565, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 02:54:53');
INSERT INTO `sys_loginfo` VALUES (566, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 02:56:50');
INSERT INTO `sys_loginfo` VALUES (567, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 02:58:01');
INSERT INTO `sys_loginfo` VALUES (568, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 02:58:18');
INSERT INTO `sys_loginfo` VALUES (569, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 03:01:01');
INSERT INTO `sys_loginfo` VALUES (570, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 03:01:41');
INSERT INTO `sys_loginfo` VALUES (571, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 03:02:02');
INSERT INTO `sys_loginfo` VALUES (572, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 03:04:55');
INSERT INTO `sys_loginfo` VALUES (573, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-19 03:05:38');
INSERT INTO `sys_loginfo` VALUES (574, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 03:10:30');
INSERT INTO `sys_loginfo` VALUES (575, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 03:29:29');
INSERT INTO `sys_loginfo` VALUES (576, '超级玛丽-mali', '0:0:0:0:0:0:0:1', '2021-01-19 03:47:29');
INSERT INTO `sys_loginfo` VALUES (577, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 03:47:55');
INSERT INTO `sys_loginfo` VALUES (578, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 10:00:58');
INSERT INTO `sys_loginfo` VALUES (579, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 10:06:36');
INSERT INTO `sys_loginfo` VALUES (580, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-19 10:22:40');
INSERT INTO `sys_loginfo` VALUES (581, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-20 01:32:19');
INSERT INTO `sys_loginfo` VALUES (582, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-20 01:44:29');
INSERT INTO `sys_loginfo` VALUES (583, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-20 01:57:49');
INSERT INTO `sys_loginfo` VALUES (584, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-20 01:58:50');
INSERT INTO `sys_loginfo` VALUES (585, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-20 02:54:23');
INSERT INTO `sys_loginfo` VALUES (586, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-20 09:58:09');
INSERT INTO `sys_loginfo` VALUES (587, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-20 09:58:31');
INSERT INTO `sys_loginfo` VALUES (588, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-20 09:59:54');
INSERT INTO `sys_loginfo` VALUES (589, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-20 10:00:01');
INSERT INTO `sys_loginfo` VALUES (590, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-20 10:02:09');
INSERT INTO `sys_loginfo` VALUES (591, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-20 10:04:02');
INSERT INTO `sys_loginfo` VALUES (592, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-20 10:27:35');
INSERT INTO `sys_loginfo` VALUES (593, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-21 02:51:52');
INSERT INTO `sys_loginfo` VALUES (594, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-21 02:52:17');
INSERT INTO `sys_loginfo` VALUES (595, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-21 07:07:27');
INSERT INTO `sys_loginfo` VALUES (596, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-21 07:35:01');
INSERT INTO `sys_loginfo` VALUES (597, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-21 07:50:43');
INSERT INTO `sys_loginfo` VALUES (598, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-21 08:01:01');
INSERT INTO `sys_loginfo` VALUES (599, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-21 08:01:07');
INSERT INTO `sys_loginfo` VALUES (600, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-21 08:19:32');
INSERT INTO `sys_loginfo` VALUES (601, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-21 08:21:25');
INSERT INTO `sys_loginfo` VALUES (602, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-22 03:03:27');
INSERT INTO `sys_loginfo` VALUES (603, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-22 03:05:51');
INSERT INTO `sys_loginfo` VALUES (604, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-22 03:25:49');
INSERT INTO `sys_loginfo` VALUES (605, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-22 03:40:45');
INSERT INTO `sys_loginfo` VALUES (606, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-22 04:44:25');
INSERT INTO `sys_loginfo` VALUES (607, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-22 05:15:38');
INSERT INTO `sys_loginfo` VALUES (608, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-22 05:19:14');
INSERT INTO `sys_loginfo` VALUES (609, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-22 06:01:12');
INSERT INTO `sys_loginfo` VALUES (610, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-22 06:01:18');
INSERT INTO `sys_loginfo` VALUES (611, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-22 09:01:08');
INSERT INTO `sys_loginfo` VALUES (612, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-22 10:16:34');
INSERT INTO `sys_loginfo` VALUES (613, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-23 06:36:34');
INSERT INTO `sys_loginfo` VALUES (614, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-23 10:03:53');
INSERT INTO `sys_loginfo` VALUES (615, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 03:02:46');
INSERT INTO `sys_loginfo` VALUES (616, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 07:33:27');
INSERT INTO `sys_loginfo` VALUES (617, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 07:49:55');
INSERT INTO `sys_loginfo` VALUES (618, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 08:33:56');
INSERT INTO `sys_loginfo` VALUES (619, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 08:57:16');
INSERT INTO `sys_loginfo` VALUES (620, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 08:57:36');
INSERT INTO `sys_loginfo` VALUES (621, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 09:19:29');
INSERT INTO `sys_loginfo` VALUES (622, '皮卡丘-pikaqiu', '0:0:0:0:0:0:0:1', '2021-01-24 09:19:49');
INSERT INTO `sys_loginfo` VALUES (623, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 09:21:21');
INSERT INTO `sys_loginfo` VALUES (624, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 09:36:16');
INSERT INTO `sys_loginfo` VALUES (625, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:36:22');
INSERT INTO `sys_loginfo` VALUES (626, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:38:38');
INSERT INTO `sys_loginfo` VALUES (627, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:39:44');
INSERT INTO `sys_loginfo` VALUES (628, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 09:40:09');
INSERT INTO `sys_loginfo` VALUES (629, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:40:19');
INSERT INTO `sys_loginfo` VALUES (630, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 09:41:50');
INSERT INTO `sys_loginfo` VALUES (631, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:41:58');
INSERT INTO `sys_loginfo` VALUES (632, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:47:02');
INSERT INTO `sys_loginfo` VALUES (633, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 09:51:22');
INSERT INTO `sys_loginfo` VALUES (634, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 10:11:27');
INSERT INTO `sys_loginfo` VALUES (635, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 11:02:54');
INSERT INTO `sys_loginfo` VALUES (636, '洛天依-luotianyi', '0:0:0:0:0:0:0:1', '2021-01-24 11:47:14');
INSERT INTO `sys_loginfo` VALUES (637, '小鸡不好惹-xiaojibuhaore', '0:0:0:0:0:0:0:1', '2021-01-24 12:46:56');
INSERT INTO `sys_loginfo` VALUES (638, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 12:56:06');
INSERT INTO `sys_loginfo` VALUES (639, '朱晓鸽-zhuxiaoge', '0:0:0:0:0:0:0:1', '2021-01-24 12:57:38');
INSERT INTO `sys_loginfo` VALUES (640, '流氓兔-liumangtu', '0:0:0:0:0:0:0:1', '2021-01-24 13:00:57');
INSERT INTO `sys_loginfo` VALUES (641, '风筝-fengzheng', '0:0:0:0:0:0:0:1', '2021-01-24 13:02:27');
INSERT INTO `sys_loginfo` VALUES (642, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 13:03:59');
INSERT INTO `sys_loginfo` VALUES (643, '大鱼海棠-dayu', '0:0:0:0:0:0:0:1', '2021-01-24 13:09:13');
INSERT INTO `sys_loginfo` VALUES (644, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 13:13:19');
INSERT INTO `sys_loginfo` VALUES (645, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 14:19:26');
INSERT INTO `sys_loginfo` VALUES (646, '小兔子-xiaotuzi', '0:0:0:0:0:0:0:1', '2021-01-24 14:56:00');
INSERT INTO `sys_loginfo` VALUES (647, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 14:59:00');
INSERT INTO `sys_loginfo` VALUES (648, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 15:30:16');
INSERT INTO `sys_loginfo` VALUES (649, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 15:30:57');
INSERT INTO `sys_loginfo` VALUES (650, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-24 15:52:29');
INSERT INTO `sys_loginfo` VALUES (651, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-25 01:19:22');
INSERT INTO `sys_loginfo` VALUES (652, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-25 01:43:08');
INSERT INTO `sys_loginfo` VALUES (653, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-25 02:52:17');
INSERT INTO `sys_loginfo` VALUES (654, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-29 03:47:19');
INSERT INTO `sys_loginfo` VALUES (655, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-29 06:34:45');
INSERT INTO `sys_loginfo` VALUES (656, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-29 10:11:28');
INSERT INTO `sys_loginfo` VALUES (657, '超级管理员-sysadmin', '0:0:0:0:0:0:0:1', '2021-01-29 10:19:34');

-- ----------------------------
-- Table structure for sys_major
-- ----------------------------
DROP TABLE IF EXISTS `sys_major`;
CREATE TABLE `sys_major`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `major` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '专业',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否删除，0->未删除，1->已删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '专业' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_major
-- ----------------------------
INSERT INTO `sys_major` VALUES (1, '软件工程', '2021-01-05 13:30:08', '2021-01-05 13:30:08', 0);
INSERT INTO `sys_major` VALUES (2, '计算机2', '2021-01-05 13:30:16', '2021-01-06 07:39:01', 1);
INSERT INTO `sys_major` VALUES (3, '计算机技术', '2021-01-06 07:41:52', '2021-01-06 07:41:52', 0);
INSERT INTO `sys_major` VALUES (4, '自动化', '2021-01-06 07:43:30', '2021-01-06 07:43:30', 0);
INSERT INTO `sys_major` VALUES (5, '英语专业', '2021-01-06 07:43:55', '2021-01-06 07:43:55', 0);
INSERT INTO `sys_major` VALUES (6, '空乘专业', '2021-01-06 07:44:04', '2021-01-06 07:44:04', 0);
INSERT INTO `sys_major` VALUES (7, '飞行器', '2021-01-06 07:44:26', '2021-01-06 07:44:26', 0);

-- ----------------------------
-- Table structure for sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_menu`;
CREATE TABLE `sys_menu`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `pid` int(11) NULL DEFAULT NULL COMMENT '父级菜单',
  `type` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '权限类型[menu]',
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '菜单名称',
  `icon` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '图标',
  `href` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '路径',
  `open` int(1) NULL DEFAULT NULL COMMENT '是否展开，0-否，1-是',
  `ordernum` int(1) NULL DEFAULT NULL COMMENT '排序码',
  `available` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '状态【0可用1不可用】',
  `flag` int(1) NULL DEFAULT NULL COMMENT '权限【0-超级管理员，1-普通用户】',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 25 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '菜单表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_menu
-- ----------------------------
INSERT INTO `sys_menu` VALUES (1, 0, 'menu', '图书管理系统', '&#xe68e;', '', 1, 1, 0, 1);
INSERT INTO `sys_menu` VALUES (2, 1, 'menu', '图书管理', '&#xe857;', '', 0, 2, 0, 0);
INSERT INTO `sys_menu` VALUES (3, 1, 'menu', '读者管理', '&#xe645;', '', 0, 3, 0, 0);
INSERT INTO `sys_menu` VALUES (4, 1, 'menu', '借阅管理', '&#xe611;', '', 0, 4, 0, 1);
INSERT INTO `sys_menu` VALUES (5, 1, 'menu', '电子书架', '&#xe614;', '', 0, 5, 0, 1);
INSERT INTO `sys_menu` VALUES (6, 1, 'menu', '系统管理', '&#xe628;', '', 1, 6, 0, 1);
INSERT INTO `sys_menu` VALUES (7, 2, 'menu', '新增图书', '&#xe656;', '/sys/toAddBook', 0, 7, 0, 1);
INSERT INTO `sys_menu` VALUES (8, 2, 'menu', '修改图书', '&#xe6b2;', '/sys/toUpdateBook', 0, 8, 0, 1);
INSERT INTO `sys_menu` VALUES (9, 2, 'menu', '图书上架', '&#xe657;', '/sys/toPutawayBook', 0, 9, 0, 1);
INSERT INTO `sys_menu` VALUES (10, 3, 'menu', '新增读者', '&#xe650;', '/sys/toAddReader', 0, 10, 0, 1);
INSERT INTO `sys_menu` VALUES (11, 3, 'menu', '读者管理', '&#xe63c;', '/sys/toReaderInfo', 0, 11, 0, 1);
INSERT INTO `sys_menu` VALUES (12, 4, 'menu', '借阅详情', '&#xe65b;', '/sys/toLendDetail', 0, 12, 0, 1);
INSERT INTO `sys_menu` VALUES (13, 4, 'menu', '超时记录', '&#xe60e;', '/sys/toOverdue', 0, 13, 1, 1);
INSERT INTO `sys_menu` VALUES (14, 4, 'menu', '罚金记录', '&#xe65e;', '/sys/toTicket', 0, 14, 0, 1);
INSERT INTO `sys_menu` VALUES (15, 5, 'menu', '在线书架', '&#xe705;', '/sys/toBookCase', 0, 15, 0, 1);
INSERT INTO `sys_menu` VALUES (16, 5, 'menu', '借阅记录', '&#xe663;', '/sys/toBookLend', 0, 16, 0, 1);
INSERT INTO `sys_menu` VALUES (17, 6, 'menu', '个人资料', '&#xe770;', '/sys/toUserInfo', 0, 17, 0, 1);
INSERT INTO `sys_menu` VALUES (18, 6, 'menu', '修改密码', '&#xe683;', '/sys/toChangePwd', 0, 23, 0, 1);
INSERT INTO `sys_menu` VALUES (19, 2, 'menu', '图书分类', '&#xe62c;', '/sys/toCategory', 0, 19, 0, 1);
INSERT INTO `sys_menu` VALUES (20, 2, 'menu', '出&ensp;版&ensp;社', '&#xe610;', '/sys/toPublisher', 0, 20, 0, 1);
INSERT INTO `sys_menu` VALUES (21, 3, 'menu', '年级管理', '&#xe656;', '/sys/toGradeInfo', 0, 21, 0, 1);
INSERT INTO `sys_menu` VALUES (23, 3, 'menu', '专业管理', '&#xe674;', '/sys/toMajorInfo', 0, 22, 0, 1);
INSERT INTO `sys_menu` VALUES (24, 6, 'menu', '登陆日志', '&#xe60a;', '/sys/toLoginfo', 0, 18, 0, 1);

-- ----------------------------
-- Table structure for sys_publisher
-- ----------------------------
DROP TABLE IF EXISTS `sys_publisher`;
CREATE TABLE `sys_publisher`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '出版社',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否删除，0->未删除，1->已删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 25 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '出版社信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_publisher
-- ----------------------------
INSERT INTO `sys_publisher` VALUES (3, '清华大学出版社', '2021-01-02 16:00:54', '2021-01-02 16:01:01', 0);
INSERT INTO `sys_publisher` VALUES (4, '气象出版社', '2021-01-02 16:01:26', '2021-01-02 16:01:26', 0);
INSERT INTO `sys_publisher` VALUES (5, '北京美术摄影出版社', '2021-01-02 16:01:39', '2021-01-02 16:01:39', 0);
INSERT INTO `sys_publisher` VALUES (6, '人民教育出版社', '2021-01-02 16:01:54', '2021-01-02 16:01:54', 0);
INSERT INTO `sys_publisher` VALUES (7, '高等教育出版社', '2021-01-02 16:02:05', '2021-01-02 16:02:05', 0);
INSERT INTO `sys_publisher` VALUES (8, '语文出版社', '2021-01-02 16:02:13', '2021-01-02 16:02:13', 0);
INSERT INTO `sys_publisher` VALUES (9, '人民邮电出版社', '2021-01-02 16:02:26', '2021-01-02 16:02:26', 0);
INSERT INTO `sys_publisher` VALUES (10, '北京电子音像出版社', '2021-01-02 16:02:36', '2021-01-02 16:02:36', 0);
INSERT INTO `sys_publisher` VALUES (11, '南开大学出版社', '2021-01-02 16:02:47', '2021-01-02 16:02:47', 0);
INSERT INTO `sys_publisher` VALUES (12, '天津科学技术出版社', '2021-01-02 16:02:59', '2021-01-02 16:02:59', 0);
INSERT INTO `sys_publisher` VALUES (13, '天津大学出版社', '2021-01-02 16:03:08', '2021-01-02 16:03:08', 0);
INSERT INTO `sys_publisher` VALUES (14, '河北人民出版社', '2021-01-02 16:03:18', '2021-01-02 16:03:18', 0);
INSERT INTO `sys_publisher` VALUES (15, '河北大学出版社', '2021-01-02 16:03:26', '2021-01-02 16:03:26', 0);
INSERT INTO `sys_publisher` VALUES (16, '内蒙古人民出版社', '2021-01-02 16:03:43', '2021-01-02 16:03:43', 0);
INSERT INTO `sys_publisher` VALUES (17, '辽宁师范大学出版社', '2021-01-02 16:03:51', '2021-01-02 16:03:51', 0);
INSERT INTO `sys_publisher` VALUES (18, '延边大学出版社', '2021-01-02 16:03:58', '2021-01-02 16:03:58', 0);
INSERT INTO `sys_publisher` VALUES (19, '东北林业大学出版社', '2021-01-02 16:04:07', '2021-01-02 16:04:07', 0);
INSERT INTO `sys_publisher` VALUES (20, '东方出版中心', '2021-01-02 16:04:15', '2021-01-02 16:04:15', 0);
INSERT INTO `sys_publisher` VALUES (21, '南京师范大学出版社', '2021-01-02 16:04:27', '2021-01-02 16:04:27', 0);
INSERT INTO `sys_publisher` VALUES (22, '江西人民出版社', '2021-01-02 16:04:36', '2021-01-02 16:04:36', 0);
INSERT INTO `sys_publisher` VALUES (23, '江西教育出版社', '2021-01-02 16:04:44', '2021-01-02 16:04:44', 0);
INSERT INTO `sys_publisher` VALUES (24, '二十一世纪出版社', '2021-01-02 16:04:51', '2021-01-02 16:04:51', 0);

-- ----------------------------
-- Table structure for sys_ticket
-- ----------------------------
DROP TABLE IF EXISTS `sys_ticket`;
CREATE TABLE `sys_ticket`  (
  `id` int(11) NOT NULL COMMENT 'id',
  `loginname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '学号',
  `booknum` int(11) NULL DEFAULT NULL COMMENT '书籍序列号',
  `over_date` int(4) NULL DEFAULT NULL COMMENT '超期天数',
  `over_fee` decimal(5, 2) NULL DEFAULT NULL COMMENT '单天逾期金额',
  `ticket_fee` decimal(5, 2) NULL DEFAULT NULL COMMENT '处罚金额（0.2元每天）',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  `return_flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否归还，0->否，1->是',
  `pay_flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '是否支付，0->否，1->是',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '罚单信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_ticket
-- ----------------------------
INSERT INTO `sys_ticket` VALUES (17, 'pikaqiu', 8889343, 4, 0.20, 0.80, '2021-01-21 08:12:00', '2021-01-24 03:42:00', 0, 0);
INSERT INTO `sys_ticket` VALUES (18, 'pikaqiu', 56732, 2, 0.20, 0.40, '2021-01-23 06:31:00', '2021-01-24 03:42:00', 0, 0);
INSERT INTO `sys_ticket` VALUES (19, 'pikaqiu', 6565, 1, 0.20, 0.20, '2021-01-23 16:07:11', '2021-01-24 03:42:00', 0, 0);
INSERT INTO `sys_ticket` VALUES (20, 'luotianyi', 789789, 2, 0.20, 0.40, '2021-01-23 06:31:00', '2021-01-24 03:42:00', 0, 0);
INSERT INTO `sys_ticket` VALUES (22, 'luotianyi', 6565, 5, 0.20, 1.00, '2021-01-21 08:55:00', '2021-01-22 03:14:00', 1, 1);
INSERT INTO `sys_ticket` VALUES (23, 'luotianyi', 56732, 6, 0.20, 1.20, '2021-01-21 08:24:00', '2021-01-24 03:42:00', 0, 0);

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user`  (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '读者姓名',
  `loginname` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '登录名,学号',
  `pwd` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '密码',
  `fk_majorId` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '专业',
  `fk_gradeId` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '年级',
  `sex` int(1) UNSIGNED ZEROFILL NULL DEFAULT NULL COMMENT '性别,0-男，1-女',
  `src` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '用户头像地址',
  `tel` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '手机号',
  `type` int(255) NULL DEFAULT NULL COMMENT '用户类型[0超级管理员，1普通用户]',
  `salt` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL COMMENT '盐',
  `flag` int(1) UNSIGNED ZEROFILL NULL DEFAULT 1 COMMENT '是否可用，0可用，1已注销',
  `create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime(0) NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `sys_user_loginname`(`loginname`) USING BTREE COMMENT '登陆名称唯一'
) ENGINE = InnoDB AUTO_INCREMENT = 42 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES (18, '超级管理员', 'sysadmin', '532ac00e86893901af5f0be6b704dbc7', '', '', 0, '/upload/08b91502-ba3f-44e7-952f-83a7ccb48ace.png', '15188888888', 0, '04A93C74C8294AA09A8B974FD1F4ECBB', 0, '2021-01-02 15:10:25', '2021-01-13 04:00:57');
INSERT INTO `sys_user` VALUES (19, '马里奥', 'maliao', '532ac00e86893901af5f0be6b704dbc7', '3', '8', 0, '/upload/5bd2e7f8-dc8c-4df4-83fe-755d0eaa059c.jpg', '15179497032', 1, '04A93C74C8294AA09A8B974FD1F4ECBB', 0, '2021-01-07 03:54:13', '2021-01-07 03:54:13');
INSERT INTO `sys_user` VALUES (20, '超级玛丽', 'mali', '532ac00e86893901af5f0be6b704dbc7', '5', '5', 0, '/upload/b671c918-3a39-47f2-b378-369c2950acf6.png', '15179497032', 1, '04A93C74C8294AA09A8B974FD1F4ECBB', 0, '2021-01-07 04:56:12', '2021-01-07 04:56:12');
INSERT INTO `sys_user` VALUES (21, '皮卡丘', 'pkq', '532ac00e86893901af5f0be6b704dbc7', '5', '6', 0, '/upload/b671c918-3a39-47f2-b378-369c2950acf6.png', '15179497032', 1, '04A93C74C8294AA09A8B974FD1F4ECBB', 0, '2021-01-07 05:10:18', '2021-01-07 05:10:18');
INSERT INTO `sys_user` VALUES (23, '大鱼海棠', 'dayu', '532ac00e86893901af5f0be6b704dbc7', '6', '5', 1, '/upload/093bf4fe-4acf-4ad9-9cb8-11247916dd6f.png', '15179497032', 1, '04A93C74C8294AA09A8B974FD1F4ECBB', 0, '2021-01-07 06:04:36', '2021-01-07 06:04:36');
INSERT INTO `sys_user` VALUES (31, '皮卡丘', 'pikaqiu', '4cd6cf6c8366661be8730ae85bd27648', '4', '5', 0, '/upload/94422a4c-0e1f-4dec-a426-ce5f408229bd.gif', '15179497028', 1, '1D53E67C188145AA8BBC27BE03C00882', 0, '2021-01-08 01:43:18', '2021-01-24 09:03:53');
INSERT INTO `sys_user` VALUES (32, '马里奥', 'maliao2', '28b62501c1afa2543d732c8795bd23b9', '1', '5', 0, '/upload/093bf4fe-4acf-4ad9-9cb8-11247916dd6f.png', '15179497021', 1, '14F07EA26EB6428CBF7FE5506F09EB24', 0, '2021-01-08 06:41:13', '2021-01-22 05:20:38');
INSERT INTO `sys_user` VALUES (33, '洛天依', 'luotianyi', 'bd59876b76ece5f53bcb0711bc6d44ef', '4', '8', 1, '/upload/41a7a2c4-df60-4a03-b541-93bb27b9a9da.jpg', '15179497038', 1, '2D5DB9FEC49B46A4855B74A5F446EC5B', 0, '2021-01-12 03:10:27', '2021-01-12 03:10:27');
INSERT INTO `sys_user` VALUES (34, '皮卡', 'pika', '82fbbbe8d2eec18dbb91884d1927cae4', '5', '9', 1, '/upload/17647758-a23c-44cf-9bc3-1906e437974b.gif', '15179497031', 1, '566A94AA978C44E7B67F695BBBDC41CC', 0, '2021-01-12 03:10:58', '2021-01-12 03:10:58');
INSERT INTO `sys_user` VALUES (35, '风筝', 'fengzheng', '49c11a9783a83d474565c02d59595241', '5', '5', 0, '/upload/0f7b71d2-96f3-436c-85f5-b2da70f3c932.jpg', '15179497030', 1, 'D1CE84A1A7834473ACBC2AF8EC60C6D7', 0, '2021-01-12 03:11:17', '2021-01-12 03:11:17');
INSERT INTO `sys_user` VALUES (36, '小兔子', 'xiaotuzi', '26b3b87d13baf0bf918859e0cca13be2', '5', '8', 1, '/upload/f5c342e8-5676-40df-8c9b-9a0aa605cf6a.gif', '15179497039', 1, '514529C9B42943718A1D75F6CFAE65FE', 0, '2021-01-12 03:11:34', '2021-01-13 03:40:17');
INSERT INTO `sys_user` VALUES (37, '刘超超', 'liuchaochao', '6eed41c6783ba8278939abff45114108', '6', '6', 0, '/upload/0a00_headPhoto_man.jpg', '15179497022', 1, 'D7679A8C495845E9A8D61FD5284FBC53', 0, '2021-01-13 03:56:38', '2021-01-13 03:56:38');
INSERT INTO `sys_user` VALUES (38, '华晨宇', 'huachenyu', '03b217139f182892737ea59d561028d7', '4', '5', 0, '/upload/0a00_headPhoto_man.jpg', '15179497000', 1, '5B3FFAE4100A4780A9EBED0B05A21410', 0, '2021-01-22 05:19:46', '2021-01-22 05:19:46');
INSERT INTO `sys_user` VALUES (39, '流氓兔', 'liumangtu', '84577b92c89635bd4d0f05adc0c3c86b', '7', '8', 1, '/upload/3e42357d-a17e-4031-a65e-1531882cf0bb.gif', '15179497132', 1, '4DBA41BCE73C4B2C8A40519524137AAF', 0, '2021-01-22 09:17:56', '2021-01-22 09:17:56');
INSERT INTO `sys_user` VALUES (40, '朱晓鸽', 'zhuxiaoge', '9ac9010662ce7dfe672fa78c14027792', '5', '5', 0, '/upload/dc78a652-91ea-4b0e-b8cf-a307982b79ec.jpg', '15119497032', 1, 'ACF3C9FC87494A70B378523B185ABBDB', 0, '2021-01-22 09:27:51', '2021-01-22 09:27:51');
INSERT INTO `sys_user` VALUES (41, '小鸡不好惹', 'xiaojibuhaore', '1982b5c3acb005725ab076e224c98be2', '5', '6', 0, '/upload/29d7cf1d-616f-40c5-9636-ae65c37c919b.png', '15129497032', 1, '7B9971D0237643518DD08403DF33726E', 0, '2021-01-22 09:31:36', '2021-01-24 09:12:02');

SET FOREIGN_KEY_CHECKS = 1;
